begin_compilation
  name " HotSpotCompilation-4646[java.lang.String.getChars(int, int, char[], int)]"
  method "HotSpotCompilation-4646[java.lang.String.getChars(int, int, char[], int)]"
  date 1724269755303
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i198  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v204 v206 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i13 j202 v38 v40 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i13 v67 v40 v42 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v207 j196 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i48 i44 j203 v69 i75 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 1708
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 a4 i5 
=== Succesors ===
=== Usages ===
v169 i198 i200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 a4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-26635|0xffffffffffff97f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v207 
lastLocationAccess: - 
=== Succesors ===
next: a199 
=== Usages ===
i48 i44 v76 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v207 lastLocationAccess: - #next: a199  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.getChars(String.java:1708) [bci: 3]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v204 
lastLocationAccess: - 
=== Succesors ===
next: i200 
=== Usages ===
a94 v205 
=== Predecessor ===
i198 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v204 lastLocationAccess: - #next: i200  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-27659|0xffffffffffff93f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.getChars(String.java:1708) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v205 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
i34 v67 
=== Predecessor ===
a199 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v205 lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j168 j168 j168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1710) [bci: 24]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 v38 v46 v59 v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i24 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v122 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
i200 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v122 #falseSuccessor: v123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -30995
stableDimension: 0
stamp: i32 [-30995]
stampKind: i32
value: int[-30995|0xffffffffffff86ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 4]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -32019
stableDimension: 0
stamp: i32 [-32019]
stampKind: i32
value: int[-32019|0xffffffffffff82ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v126 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 9]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i201 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 3]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
lastLocationAccess: - 
=== Succesors ===
next: v132 
=== Usages ===
i103 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v206 lastLocationAccess: - #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 3]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
i34 v54 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.getChars(String.java:1708) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i200 
y: i103 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i200 y: i103  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i3 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
i201 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v130 #falseSuccessor: v131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -33043
stableDimension: 0
stamp: i32 [-33043]
stampKind: i32
value: int[-33043|0xffffffffffff7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:350) [bci: 22]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 13]
stamp: i32
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v49 i45 v59 i75 v85 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 2]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: i32
=== Inputs ===
x: i5 
y: i198 
=== Succesors ===
=== Usages ===
i45 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i5 y: i198  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 4]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: i32
=== Inputs ===
x: i13 
y: i44 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i13 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i24 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j168 j168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v134 #falseSuccessor: v135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -34067
stableDimension: 0
stamp: i32 [-34067]
stampKind: i32
value: int[-34067|0xffffffffffff7aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v134 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 8]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 11]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: i32
=== Inputs ===
x: i198 
y: i5 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i198 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i13 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i48 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v138 #falseSuccessor: v139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -35091
stableDimension: 0
stamp: i32 [-35091]
stampKind: i32
value: int[-35091|0xffffffffffff76ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:398) [bci: 23]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.getChars(String.java:1710) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i103 
y: i24 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i103 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1710) [bci: 24]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v143 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v142 #falseSuccessor: v143  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1711) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid j166 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j168 j168 j168 j168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i24 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i13 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v146 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -37145
stableDimension: 0
stamp: i32 [-37145]
stampKind: i32
value: int[-37145|0xffffffffffff6ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v146 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i3 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i200 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v150 #falseSuccessor: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -38169
stableDimension: 0
stamp: i32 [-38169]
stampKind: i32
value: int[-38169|0xffffffffffff6ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v150 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i24 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v154 #falseSuccessor: v155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -39193
stableDimension: 0
stamp: i32 [-39193]
stampKind: i32
value: int[-39193|0xffffffffffff66e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v154 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i32
=== Inputs ===
x: i5 
y: i13 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i198 
y: i75 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i198 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v158 #falseSuccessor: v159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -40217
stableDimension: 0
stamp: i32 [-40217]
stampKind: i32
value: int[-40217|0xffffffffffff62e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: j194 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j194  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.getChars(String.java:1708) [bci: 3]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a199 
=== Succesors ===
=== Usages ===
j194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64
=== Inputs ===
object: a94 
=== Succesors ===
next: j196 
=== Usages ===
j195 
=== Predecessor ===
v159 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a94 #next: j196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64
=== Inputs ===
object: a4 
=== Succesors ===
next: v85 
=== Usages ===
j197 
=== Predecessor ===
j194 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a4 #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
j88 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j88 j89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64 [16 - 4294967311] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j202 
y: j78 
=== Succesors ===
=== Usages ===
j195 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j202 y: j78  <|@  <|@
f <@~|@floating>@ <|@
tid j195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64
=== Inputs ===
x: j88 
y: j194 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j88 y: j194  <|@  <|@
f <@~|@floating>@ <|@
tid j203 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i5 
=== Succesors ===
=== Usages ===
j83 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j203 
y: i82 
=== Succesors ===
=== Usages ===
j89 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j203 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid j89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j83 
y: j78 
=== Succesors ===
=== Usages ===
j197 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j83 y: j78  <|@  <|@
f <@~|@floating>@ <|@
tid j197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64
=== Inputs ===
x: j89 
y: j196 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j89 y: j196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: char]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j195 
dst: j197 
len: i13 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
j196 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j195 dst: j197 len: i13 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1715) [bci: 54]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1710) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.getChars(String.java:1708) [bci: 3]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -36115
stableDimension: 0
stamp: i32 [-36115]
stampKind: i32
value: int[-36115|0xffffffffffff72ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: i32 [-40217 - -30995] bits:1...1xxxxxx101110x1x1
valueDescription: i32
=== Inputs ===
merge: v163 
values: i173 i176 i178 i180 i183 i185 i187 i189 i191 i193 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v163 values: i173 i176 i178 i180 i183 i185 i187 i189 i191 i193  <|@  <|@
f <@~|@floating>@ <|@
tid j168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: i64 [0 - 1300] bits:0...0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v163 
values: j174 j174 j174 j181 j181 j166 j91 j166 j166 j166 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v163 values: j174 j174 j174 j181 j181 j166 j91 j166 j166 j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v172 v175 v177 v179 v182 v184 v186 v188 v190 v192 
=== Succesors ===
next: v169 
=== Usages ===
i167 j168 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v172 v175 v177 v179 v182 v184 v186 v188 v190 v192 #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i167 
speculation: j168 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i167 speculation: j168  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30995|0xffffffffffff86ed], long[660|0x294]] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33043|0xffffffffffff7eed], long[660|0x294]] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-37145|0xffffffffffff6ee7], long[0|0x0]] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7], long[0|0x0]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39193|0xffffffffffff66e7], long[0|0x0]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[20|0x14]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38169|0xffffffffffff6ae7], long[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32019|0xffffffffffff82ed], long[660|0x294]] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34067|0xffffffffffff7aed], long[1300|0x514]] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i198  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v204 v206 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i13 j202 v38 v40 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i13 v67 v40 v42 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v207 j196 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i48 i44 j203 v69 i75 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 1708
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 a4 i5 
=== Succesors ===
=== Usages ===
v169 i198 i200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 a4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i198 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-26635|0xffffffffffff97f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v207 
lastLocationAccess: - 
=== Succesors ===
next: a199 
=== Usages ===
i48 i44 v76 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v207 lastLocationAccess: - #next: a199  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.getChars(String.java:1708) [bci: 3]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v204 
lastLocationAccess: - 
=== Succesors ===
next: i200 
=== Usages ===
a94 v205 
=== Predecessor ===
i198 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v204 lastLocationAccess: - #next: i200  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
result [v6|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-27659|0xffffffffffff93f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.getChars(String.java:1708) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v205 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
i34 v67 
=== Predecessor ===
a199 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v205 lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j168 j168 j168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1710) [bci: 24]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 v38 v46 v59 v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i24 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v122 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
i200 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v122 #falseSuccessor: v123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result int[-30995|0xffffffffffff86ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -30995
stableDimension: 0
stamp: i32 [-30995]
stampKind: i32
value: int[-30995|0xffffffffffff86ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30995|0xffffffffffff86ed], long[660|0x294]] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 4]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
result int[-32019|0xffffffffffff82ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -32019
stableDimension: 0
stamp: i32 [-32019]
stampKind: i32
value: int[-32019|0xffffffffffff82ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v126 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32019|0xffffffffffff82ed], long[660|0x294]] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 9]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i201 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 3]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
lastLocationAccess: - 
=== Succesors ===
next: v132 
=== Usages ===
i103 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v206 lastLocationAccess: - #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 3]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
i34 v54 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.getChars(String.java:1708) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i200 
y: i103 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i200 y: i103  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i3 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
i201 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v130 #falseSuccessor: v131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result int[-33043|0xffffffffffff7eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -33043
stableDimension: 0
stamp: i32 [-33043]
stampKind: i32
value: int[-33043|0xffffffffffff7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33043|0xffffffffffff7eed], long[660|0x294]] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:350) [bci: 22]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.getChars(String.java:1708) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 13]
stamp: i32
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v49 i45 v59 i75 v85 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i3 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 2]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: i32
=== Inputs ===
x: i5 
y: i198 
=== Succesors ===
=== Usages ===
i45 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i5 y: i198  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 4]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: i32
=== Inputs ===
x: i13 
y: i44 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i13 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i24 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j168 j168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v134 #falseSuccessor: v135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
result int[-34067|0xffffffffffff7aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -34067
stableDimension: 0
stamp: i32 [-34067]
stampKind: i32
value: int[-34067|0xffffffffffff7aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v134 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34067|0xffffffffffff7aed], long[1300|0x514]] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 8]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 11]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: i32
=== Inputs ===
x: i198 
y: i5 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i198 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i13 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i48 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v138 #falseSuccessor: v139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result int[-35091|0xffffffffffff76ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -35091
stableDimension: 0
stamp: i32 [-35091]
stampKind: i32
value: int[-35091|0xffffffffffff76ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:398) [bci: 23]
at java.lang.String.checkBoundsOffCount(String.java:4853) [bci: 6]
at java.lang.String.getChars(String.java:1709) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.getChars(String.java:1710) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i103 
y: i24 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i103 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1710) [bci: 24]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v143 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v142 #falseSuccessor: v143  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1711) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid j166 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j168 j168 j168 j168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i24 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i13 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v146 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result int[-37145|0xffffffffffff6ee7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -37145
stableDimension: 0
stamp: i32 [-37145]
stampKind: i32
value: int[-37145|0xffffffffffff6ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v146 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-37145|0xffffffffffff6ee7], long[0|0x0]] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i3 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i200 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v150 #falseSuccessor: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result int[-38169|0xffffffffffff6ae7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -38169
stableDimension: 0
stamp: i32 [-38169]
stampKind: i32
value: int[-38169|0xffffffffffff6ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v150 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38169|0xffffffffffff6ae7], long[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i24 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v154 #falseSuccessor: v155  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result int[-39193|0xffffffffffff66e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -39193
stableDimension: 0
stamp: i32 [-39193]
stampKind: i32
value: int[-39193|0xffffffffffff66e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v154 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39193|0xffffffffffff66e7], long[0|0x0]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i32
=== Inputs ===
x: i5 
y: i13 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i198 
y: i75 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i198 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v158 #falseSuccessor: v159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
result int[-40217|0xffffffffffff62e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -40217
stableDimension: 0
stamp: i32 [-40217]
stampKind: i32
value: int[-40217|0xffffffffffff62e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7], long[0|0x0]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: j194 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j194  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.getChars(String.java:1708) [bci: 3]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a199 
=== Succesors ===
=== Usages ===
j194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j194 <|@
result v16|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64
=== Inputs ===
object: a94 
=== Succesors ===
next: j196 
=== Usages ===
j195 
=== Predecessor ===
v159 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a94 #next: j196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j196 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64
=== Inputs ===
object: a4 
=== Succesors ===
next: v85 
=== Usages ===
j197 
=== Predecessor ===
j194 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a4 #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
j88 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j88 j89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j88 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64 [16 - 4294967311] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j202 
y: j78 
=== Succesors ===
=== Usages ===
j195 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j202 y: j78  <|@  <|@
f <@~|@floating>@ <|@
tid j195 <|@
result v20|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64
=== Inputs ===
x: j88 
y: j194 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j88 y: j194  <|@  <|@
f <@~|@floating>@ <|@
tid j203 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i5 
=== Succesors ===
=== Usages ===
j83 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j83 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j203 
y: i82 
=== Succesors ===
=== Usages ===
j89 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j203 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid j89 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j83 
y: j78 
=== Succesors ===
=== Usages ===
j197 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j83 y: j78  <|@  <|@
f <@~|@floating>@ <|@
tid j197 <|@
result v24|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
stamp: i64
=== Inputs ===
x: j89 
y: j196 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j89 y: j196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: char]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, char[], int, int) [bci: -1]
at java.lang.StringLatin1.getChars(StringLatin1.java:83) [bci: 8]
at java.lang.String.getChars(String.java:1711) [bci: 36]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j195 
dst: j197 
len: i13 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
j196 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j195 dst: j197 len: i13 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1715) [bci: 54]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1710) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.getChars(String.java:1708) [bci: 3]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result int[-36115|0xffffffffffff72ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
rawvalue: -36115
stableDimension: 0
stamp: i32 [-36115]
stampKind: i32
value: int[-36115|0xffffffffffff72ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[20|0x14]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i167 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: i32 [-40217 - -30995] bits:1...1xxxxxx101110x1x1
valueDescription: i32
=== Inputs ===
merge: v163 
values: i173 i176 i178 i180 i183 i185 i187 i189 i191 i193 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v163 values: i173 i176 i178 i180 i183 i185 i187 i189 i191 i193  <|@  <|@
f <@~|@floating>@ <|@
tid j168 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: i64 [0 - 1300] bits:0...0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v163 
values: j174 j174 j174 j181 j181 j166 j91 j166 j166 j166 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v163 values: j174 j174 j174 j181 j181 j166 j91 j166 j166 j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v172 v175 v177 v179 v182 v184 v186 v188 v190 v192 
=== Succesors ===
next: v169 
=== Usages ===
i167 j168 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v172 v175 v177 v179 v182 v184 v186 v188 v190 v192 #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:1709) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i167 
speculation: j168 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i167 speculation: j168  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30995|0xffffffffffff86ed], long[660|0x294]] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33043|0xffffffffffff7eed], long[660|0x294]] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-37145|0xffffffffffff6ee7], long[0|0x0]] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7], long[0|0x0]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39193|0xffffffffffff66e7], long[0|0x0]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[20|0x14]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38169|0xffffffffffff6ae7], long[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32019|0xffffffffffff82ed], long[660|0x294]] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34067|0xffffffffffff7aed], long[1300|0x514]] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30995|0xffffffffffff86ed], long[660|0x294]] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33043|0xffffffffffff7eed], long[660|0x294]] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-37145|0xffffffffffff6ee7], long[0|0x0]] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7], long[0|0x0]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39193|0xffffffffffff66e7], long[0|0x0]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[20|0x14]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38169|0xffffffffffff6ae7], long[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32019|0xffffffffffff82ed], long[660|0x294]] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34067|0xffffffffffff7aed], long[1300|0x514]] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30995|0xffffffffffff86ed], long[660|0x294]] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33043|0xffffffffffff7eed], long[660|0x294]] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-37145|0xffffffffffff6ee7], long[0|0x0]] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7], long[0|0x0]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39193|0xffffffffffff66e7], long[0|0x0]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[20|0x14]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38169|0xffffffffffff6ae7], long[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32019|0xffffffffffff82ed], long[660|0x294]] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34067|0xffffffffffff7aed], long[1300|0x514]] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30995|0xffffffffffff86ed], long[660|0x294]] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33043|0xffffffffffff7eed], long[660|0x294]] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-37145|0xffffffffffff6ee7], long[0|0x0]] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7], long[0|0x0]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39193|0xffffffffffff66e7], long[0|0x0]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[20|0x14]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38169|0xffffffffffff6ae7], long[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32019|0xffffffffffff82ed], long[660|0x294]] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34067|0xffffffffffff7aed], long[1300|0x514]] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30995|0xffffffffffff86ed], long[660|0x294]] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33043|0xffffffffffff7eed], long[660|0x294]] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-37145|0xffffffffffff6ee7], long[0|0x0]] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7], long[0|0x0]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39193|0xffffffffffff66e7], long[0|0x0]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[20|0x14]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38169|0xffffffffffff6ae7], long[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32019|0xffffffffffff82ed], long[660|0x294]] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-34067|0xffffffffffff7aed], long[1300|0x514]] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [int[-30995|0xffffffffffff86ed], long[660|0x294]] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [int[-33043|0xffffffffffff7eed], long[660|0x294]] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [int[-37145|0xffffffffffff6ee7], long[0|0x0]] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7], long[0|0x0]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [int[-39193|0xffffffffffff66e7], long[0|0x0]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[20|0x14]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [int[-38169|0xffffffffffff6ae7], long[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-32019|0xffffffffffff82ed], long[660|0x294]] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-34067|0xffffffffffff7aed], long[1300|0x514]] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [int[-30995|0xffffffffffff86ed], long[660|0x294]] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [int[-33043|0xffffffffffff7eed], long[660|0x294]] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [int[-37145|0xffffffffffff6ee7], long[0|0x0]] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7], long[0|0x0]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [int[-39193|0xffffffffffff66e7], long[0|0x0]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[20|0x14]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [int[-38169|0xffffffffffff6ae7], long[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-32019|0xffffffffffff82ed], long[660|0x294]] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-34067|0xffffffffffff7aed], long[1300|0x514]] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rcx|d fixed "[rcx|d]" rcx|d v8|d [0, 38[[82, 85[[272, 274[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v24|q [0, 36[[270, 275[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v20|q [0, 34[[268, 275[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  r8|q fixed "[r8|q]" r8|q -1 [0, 40[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 42[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [34, 192[[278, 399[34 MustHaveRegister 46 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [36, 254[[278, 399[36 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister 104 ShouldHaveRegister 254 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|d [38, 192[[278, 399[38 MustHaveRegister 62 ShouldHaveRegister 86 MustHaveRegister 104 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|q [40, 252[[278, 399[40 MustHaveRegister 44 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d r9|d [42, 260[[278, 399[42 MustHaveRegister 106 ShouldHaveRegister 124 ShouldHaveRegister 174 MustHaveRegister 188 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [44, 190[44 MustHaveRegister 106 ShouldHaveRegister 124 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [46, 248[46 MustHaveRegister 48 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [48, 162[48 MustHaveRegister 84 ShouldHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [80, 138[80 MustHaveRegister 82 ShouldHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v7|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v2|d [104, 272[104 MustHaveRegister 108 ShouldHaveRegister 126 MustHaveRegister 150 MustHaveRegister 188 ShouldHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v4|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v10|d [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v5|d [124, 126[124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v4|d [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v6|d [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v15|q [250, 258[250 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v3|q [252, 266[252 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [256, 258[256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v19|q [258, 268[258 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [260, 262[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v21|q [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v23|q [266, 270[266 MustHaveRegister 270 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [378, 394[394 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [378, 396[396 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rcx|d fixed "[rcx|d]" rcx|d v8|d [0, 38[[82, 85[[272, 274[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v24|q [0, 36[[270, 275[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v20|q [0, 34[[268, 275[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  r8|q fixed "[r8|q]" r8|q -1 [0, 40[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 42[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [34, 192[[278, 399[34 MustHaveRegister 46 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [36, 254[[278, 399[36 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister 104 ShouldHaveRegister 254 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|d [38, 192[[278, 399[38 MustHaveRegister 62 ShouldHaveRegister 86 MustHaveRegister 104 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|q [40, 252[[278, 399[40 MustHaveRegister 44 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [42, 260[[278, 399[42 MustHaveRegister 106 ShouldHaveRegister 124 ShouldHaveRegister 174 MustHaveRegister 188 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [44, 190[44 MustHaveRegister 106 ShouldHaveRegister 124 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [46, 248[46 MustHaveRegister 48 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [48, 162[48 MustHaveRegister 84 ShouldHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [80, 138[80 MustHaveRegister 82 ShouldHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbp|d]" v9|d v7|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v2|d [104, 272[104 MustHaveRegister 108 ShouldHaveRegister 126 MustHaveRegister 150 MustHaveRegister 188 ShouldHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d v4|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v10|d [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v5|d [124, 126[124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d v4|d [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q v6|d [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q v15|q [250, 258[250 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r8|q]" v17|q v3|q [252, 266[252 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [256, 258[256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q v19|q [258, 268[258 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q -1 [260, 262[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q v21|q [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q -1 [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdx|q]" v24|q v23|q [266, 270[266 MustHaveRegister 270 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r11|d]" v25|d -1 [378, 394[394 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q -1 [378, 396[396 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [int[-30995|0xffffffffffff86ed], long[660|0x294]] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [int[-33043|0xffffffffffff7eed], long[660|0x294]] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [int[-37145|0xffffffffffff6ee7], long[0|0x0]] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7], long[0|0x0]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [int[-39193|0xffffffffffff66e7], long[0|0x0]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[20|0x14]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [int[-38169|0xffffffffffff6ae7], long[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-32019|0xffffffffffff82ed], long[660|0x294]] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-34067|0xffffffffffff7aed], long[1300|0x514]] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rcx|d fixed "[rcx|d]" rcx|d v8|d [0, 38[[82, 85[[272, 274[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v24|q [0, 36[[270, 275[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v20|q [0, 34[[268, 275[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  r8|q fixed "[r8|q]" r8|q -1 [0, 40[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 42[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [34, 192[[278, 399[34 MustHaveRegister 46 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [36, 254[[278, 399[36 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister 104 ShouldHaveRegister 254 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|d [38, 192[[278, 399[38 MustHaveRegister 62 ShouldHaveRegister 86 MustHaveRegister 104 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|q [40, 252[[278, 399[40 MustHaveRegister 44 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [42, 260[[278, 399[42 MustHaveRegister 106 ShouldHaveRegister 124 ShouldHaveRegister 174 MustHaveRegister 188 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [44, 190[44 MustHaveRegister 106 ShouldHaveRegister 124 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [46, 248[46 MustHaveRegister 48 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [48, 162[48 MustHaveRegister 84 ShouldHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [80, 138[80 MustHaveRegister 82 ShouldHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbp|d]" v9|d v7|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v2|d [104, 272[104 MustHaveRegister 108 ShouldHaveRegister 126 MustHaveRegister 150 MustHaveRegister 188 ShouldHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d v4|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v10|d [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v5|d [124, 126[124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d v4|d [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q v6|d [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q v15|q [250, 258[250 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r8|q]" v17|q v3|q [252, 266[252 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [256, 258[256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q v19|q [258, 268[258 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q -1 [260, 262[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q v21|q [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q -1 [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdx|q]" v24|q v23|q [266, 270[266 MustHaveRegister 270 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r11|d]" v25|d -1 [378, 394[394 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q -1 [378, 396[396 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [int[-30995|0xffffffffffff86ed], long[660|0x294]] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [int[-33043|0xffffffffffff7eed], long[660|0x294]] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [int[-37145|0xffffffffffff6ee7], long[0|0x0]] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7], long[0|0x0]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [int[-39193|0xffffffffffff66e7], long[0|0x0]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [int[-36115|0xffffffffffff72ed], long[20|0x14]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [int[-38169|0xffffffffffff6ae7], long[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[-35091|0xffffffffffff76ed], long[1300|0x514]] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-32019|0xffffffffffff82ed], long[660|0x294]] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-34067|0xffffffffffff7aed], long[1300|0x514]] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rcx|d fixed "[rcx|d]" rcx|d v8|d [0, 38[[82, 85[[272, 274[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v24|q [0, 36[[270, 275[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v20|q [0, 34[[268, 275[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  r8|q fixed "[r8|q]" r8|q -1 [0, 40[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 42[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[274, 275[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [34, 192[[278, 399[34 MustHaveRegister 46 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [36, 254[[278, 399[36 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister 104 ShouldHaveRegister 254 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|d [38, 192[[278, 399[38 MustHaveRegister 62 ShouldHaveRegister 86 MustHaveRegister 104 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|q [40, 252[[278, 399[40 MustHaveRegister 44 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [42, 260[[278, 399[42 MustHaveRegister 106 ShouldHaveRegister 124 ShouldHaveRegister 174 MustHaveRegister 188 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [44, 190[44 MustHaveRegister 106 ShouldHaveRegister 124 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [46, 248[46 MustHaveRegister 48 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [48, 162[48 MustHaveRegister 84 ShouldHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [80, 138[80 MustHaveRegister 82 ShouldHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbp|d]" v9|d v7|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v2|d [104, 272[104 MustHaveRegister 108 ShouldHaveRegister 126 MustHaveRegister 150 MustHaveRegister 188 ShouldHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d v4|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v10|d [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v5|d [124, 126[124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d v4|d [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q v6|d [248, 250[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q v15|q [250, 258[250 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r8|q]" v17|q v3|q [252, 266[252 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [256, 258[256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q v19|q [258, 268[258 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q -1 [260, 262[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q v21|q [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q -1 [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdx|q]" v24|q v23|q [266, 270[266 MustHaveRegister 270 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r11|d]" v25|d -1 [378, 394[394 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q -1 [378, 396[396 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v3|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v9|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction v10|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v11|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|DWORD = OR (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction v13|DWORD = SUB (x: v5|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction v14|DWORD = ADD (x: v4|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction v16|QWORD[*] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction v17|QWORD[*] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction v19|QWORD = LEA address: [v18|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v21|QWORD = MOV value: v4|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction v22|QWORD = SHL value: v21|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction v23|QWORD = LEA address: [v22|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction v24|QWORD[*] = ADD (x: v23|QWORD, y: v17|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rsi:0, r8:0, r11:0]
live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rsi:0, r8:0, r11:0]
live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed] // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B12" "B20" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.lang.String.getChars(String.java:1708) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7] // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7] // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: invokevirtual #127        // length:()int
     6: invokestatic  #132        // checkBoundsBeginEnd:(int, int, int)void
     9: iload         4
    11: iload_2       
    12: iload_1       
    13: isub          
    14: aload_3       
    15: arraylength   
    16: invokestatic  #7          // checkBoundsOffCount:(int, int, int)int
    19: pop           
    20: aload_0       
    21: invokevirtual #122        // isLatin1:()boolean
    24: ifeq          42
    27: aload_0       
    28: getfield      #1          // value:byte[]
    31: iload_1       
    32: iload_2       
    33: aload_3       
    34: iload         4
    36: invokestatic  #133        // java.lang.StringLatin1.getChars:(byte[], int, int, char[], int)void
    39: goto          54
    42: aload_0       
    43: getfield      #1          // value:byte[]
    46: iload_1       
    47: iload_2       
    48: aload_3       
    49: iload         4
    51: invokestatic  #134        // java.lang.StringUTF16.getChars:(byte[], int, int, char[], int)void
    54: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85fa010000909090909090909090909090909048896c2410448bd1418b780c448b5e14428b1cdd0c00000085d20f8cec00000090909090413bd20f8f95010000909090909090900fbe46108bc88bebd3ed443bd50f8ff700000090909090909090418bca2bca418be90bef0be985ed0f8c7501000090909090908bef412be93bcd0f8f390100009090909085c00f85060100009090909085c90f8cc400000090909090443bd30f87ff000000909090904585c90f8cce0000009090909090418bd903d93bdf0f87aa00000090909090909090909090909090909090909090909090909090909049c1e3038bf2488d76104903f3418bd148d1e2488d52104903d0e800000000488b6c24104883c418493ba7500400000f87f4000000c5f877c390909048c7c19402000041bbed86ffff9090909090909045899f8404000049898f90040000e8000000000f1f84000000000090909048c7c19402000041bbed7effffebcc90909048c7c10000000041bbe76effffebba90909048c7c10000000041bbe762ffffeba890909048c7c10000000041bbe766ffffeb9690909048c7c11400000041bbed72ffffeb8490909048c7c10000000041bbe76affffe96fffffff90909048c7c11405000041bbed76ffffe95affffff90909048c7c19402000041bbed82ffffe945ffffff90909048c7c11405000041bbed7affffe930ffffff48896c2410e800000000e9f7fdfffff4488d0df8feffff49898f68040000e9a9fdfffff441c78784040000f597ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f593ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 77 32 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD  <||@
  Comment 77 38 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 80 44 rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 80 [rsi:0, r8:0]at java.lang.String.getChars(String.java:1708) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 46 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 88 48 rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 88 [rsi:0, r8:0, r11:0]at java.lang.String.getChars(String.java:1708) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 50 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 104 block B2 null  <||@
  Comment 104 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 54 NOP  <||@
  Comment 105 56 NOP  <||@
  Comment 106 58 NOP  <||@
  Comment 107 60 NOP  <||@
  Comment 108 62 CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 117 block B4 null  <||@
  Comment 117 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 117 66 NOP  <||@
  Comment 118 68 NOP  <||@
  Comment 119 70 NOP  <||@
  Comment 120 72 NOP  <||@
  Comment 121 74 NOP  <||@
  Comment 122 76 NOP  <||@
  Comment 123 78 NOP  <||@
  Comment 124 80 rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 128 82 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 130 84 rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 134 86 CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 143 block B6 null  <||@
  Comment 143 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 143 90 NOP  <||@
  Comment 144 92 NOP  <||@
  Comment 145 94 NOP  <||@
  Comment 146 96 NOP  <||@
  Comment 147 98 NOP  <||@
  Comment 148 100 NOP  <||@
  Comment 149 102 NOP  <||@
  Comment 150 104 rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 155 106 rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 160 108 rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 162 110 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 170 block B8 null  <||@
  Comment 170 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 170 114 NOP  <||@
  Comment 171 116 NOP  <||@
  Comment 172 118 NOP  <||@
  Comment 173 120 NOP  <||@
  Comment 174 122 NOP  <||@
  Comment 175 124 rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 180 126 CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 188 block B10 null  <||@
  Comment 188 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 188 130 NOP  <||@
  Comment 189 132 NOP  <||@
  Comment 190 134 NOP  <||@
  Comment 191 136 NOP  <||@
  Comment 192 138 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD  <||@
  Comment 200 block B11 null  <||@
  Comment 200 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 200 142 NOP  <||@
  Comment 201 144 NOP  <||@
  Comment 202 146 NOP  <||@
  Comment 203 148 NOP  <||@
  Comment 204 150 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD  <||@
  Comment 212 block B13 null  <||@
  Comment 212 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 212 154 NOP  <||@
  Comment 213 156 NOP  <||@
  Comment 214 158 NOP  <||@
  Comment 215 160 NOP  <||@
  Comment 216 162 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 225 block B15 null  <||@
  Comment 225 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 225 166 NOP  <||@
  Comment 226 168 NOP  <||@
  Comment 227 170 NOP  <||@
  Comment 228 172 NOP  <||@
  Comment 229 174 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 238 block B17 null  <||@
  Comment 238 176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 238 178 NOP  <||@
  Comment 239 180 NOP  <||@
  Comment 240 182 NOP  <||@
  Comment 241 184 NOP  <||@
  Comment 242 186 NOP  <||@
  Comment 243 188 rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 248 190 CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 256 block B19 null  <||@
  Comment 256 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 256 194 NOP  <||@
  Comment 257 196 NOP  <||@
  Comment 258 198 NOP  <||@
  Comment 259 200 NOP  <||@
  Comment 260 202 NOP  <||@
  Comment 261 204 NOP  <||@
  Comment 262 206 NOP  <||@
  Comment 263 208 NOP  <||@
  Comment 264 210 NOP  <||@
  Comment 265 212 NOP  <||@
  Comment 266 214 NOP  <||@
  Comment 267 216 NOP  <||@
  Comment 268 218 NOP  <||@
  Comment 269 220 NOP  <||@
  Comment 270 222 NOP  <||@
  Comment 271 224 NOP  <||@
  Comment 272 226 NOP  <||@
  Comment 273 228 NOP  <||@
  Comment 274 230 NOP  <||@
  Comment 275 232 NOP  <||@
  Comment 276 234 NOP  <||@
  Comment 277 236 NOP  <||@
  Comment 278 238 NOP  <||@
  Comment 279 240 NOP  <||@
  Comment 280 242 NOP  <||@
  Comment 281 244 NOP  <||@
  Comment 282 246 NOP  <||@
  Comment 283 248 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3  <||@
  Comment 287 250 r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 287 252 r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 287 254 rsi|QWORD = MOV value: rdx|DWORD size: DWORD  <||@
  Comment 289 256 rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 293 258 rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD  <||@
  Comment 296 260 rdx|QWORD = MOV value: r9|DWORD size: DWORD  <||@
  Comment 299 262 rdx|QWORD = SHL value: rdx|QWORD size: QWORD  <||@
  Comment 302 264 rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD  <||@
  Comment 306 266 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD  <||@
  Comment 309 268 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 309 270 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 309 274 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 309 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 314 276 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 323 POLL_RETURN_FAR  <||@
  Comment 340 block B1 null  <||@
  Comment 340 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 280 NOP  <||@
  Comment 341 282 NOP  <||@
  Comment 342 284 NOP  <||@
  Comment 343 -1 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 350 -1 r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed]  <||@
  Comment 356 286 JUMP ~outgoingValues: [] destination: B1 -> B21  <||@
  Comment 356 block B21 null  <||@
  Comment 356 378 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 356 380 NOP  <||@
  Comment 357 382 NOP  <||@
  Comment 358 384 NOP  <||@
  Comment 359 386 NOP  <||@
  Comment 360 388 NOP  <||@
  Comment 361 390 NOP  <||@
  Comment 362 392 NOP  <||@
  Comment 363 394 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 370 396 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 377 398 DEOPT info [bci:0]  <||@
  Comment 377 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 382 [rsi:0, r8:0]at java.lang.String.getChars(String.java:1708) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 390 block B5 null  <||@
  Comment 390 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 390 290 NOP  <||@
  Comment 391 292 NOP  <||@
  Comment 392 294 NOP  <||@
  Comment 393 -1 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 400 -1 r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed]  <||@
  Comment 406 296 JUMP ~outgoingValues: [] destination: B5 -> B21  <||@
  Comment 408 block B12 null  <||@
  Comment 408 298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 408 300 NOP  <||@
  Comment 409 302 NOP  <||@
  Comment 410 304 NOP  <||@
  Comment 411 -1 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 418 -1 r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7]  <||@
  Comment 424 306 JUMP ~outgoingValues: [] destination: B12 -> B21  <||@
  Comment 426 block B18 null  <||@
  Comment 426 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 426 310 NOP  <||@
  Comment 427 312 NOP  <||@
  Comment 428 314 NOP  <||@
  Comment 429 -1 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 436 -1 r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7]  <||@
  Comment 442 316 JUMP ~outgoingValues: [] destination: B18 -> B21  <||@
  Comment 444 block B16 null  <||@
  Comment 444 318 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 444 320 NOP  <||@
  Comment 445 322 NOP  <||@
  Comment 446 324 NOP  <||@
  Comment 447 -1 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 454 -1 r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7]  <||@
  Comment 460 326 JUMP ~outgoingValues: [] destination: B16 -> B21  <||@
  Comment 462 block B20 null  <||@
  Comment 462 328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 462 330 NOP  <||@
  Comment 463 332 NOP  <||@
  Comment 464 334 NOP  <||@
  Comment 465 -1 rcx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 472 -1 r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed]  <||@
  Comment 478 336 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 480 block B14 null  <||@
  Comment 480 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 480 340 NOP  <||@
  Comment 481 342 NOP  <||@
  Comment 482 344 NOP  <||@
  Comment 483 -1 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 490 -1 r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7]  <||@
  Comment 496 346 JUMP ~outgoingValues: [] destination: B14 -> B21  <||@
  Comment 501 block B9 null  <||@
  Comment 501 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 501 350 NOP  <||@
  Comment 502 352 NOP  <||@
  Comment 503 354 NOP  <||@
  Comment 504 -1 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 511 -1 r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed]  <||@
  Comment 517 356 JUMP ~outgoingValues: [] destination: B9 -> B21  <||@
  Comment 522 block B3 null  <||@
  Comment 522 358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 522 360 NOP  <||@
  Comment 523 362 NOP  <||@
  Comment 524 364 NOP  <||@
  Comment 525 -1 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 532 -1 r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed]  <||@
  Comment 538 366 JUMP ~outgoingValues: [] destination: B3 -> B21  <||@
  Comment 543 block B7 null  <||@
  Comment 543 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 543 370 NOP  <||@
  Comment 544 372 NOP  <||@
  Comment 545 374 NOP  <||@
  Comment 546 -1 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 553 -1 r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed]  <||@
  Comment 559 376 JUMP ~outgoingValues: [] destination: B7 -> B21  <||@
  Comment 569 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 594 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 622 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 627 [rsi:0, r8:0]at java.lang.String.getChars(String.java:1708) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 657 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 662 [rsi:0, r8:0, r11:0]at java.lang.String.getChars(String.java:1708) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 670 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 670 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 676 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 676 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4646[java.lang.String.getChars(int, int, char[], int)]"
  method "HotSpotCompilation-4646[java.lang.String.getChars(int, int, char[], int)]"
  date 1724269755467
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af05d00 448b560849bc0000002b787f00004d03d44d33e4493bc20f8563f387fe66669089842400c0feff4883ec189041817f20000000000f85fa010000909090909090909090909090909048896c2410448bd1418b780c448b5e14428b1cdd0c00000085d20f8cec00000090909090413bd20f8f95010000909090909090900fbe46108bc88bebd3ed443bd50f8ff700000090909090909090418bca2bca418be90bef0be985ed0f8c7501000090909090908bef412be93bcd0f8f390100009090909085c00f85060100009090909085c90f8cc400000090909090443bd30f87ff000000909090904585c90f8cce0000009090909090418bd903d93bdf0f87aa00000090909090909090909090909090909090909090909090909090909049c1e3038bf2488d76104903f3418bd148d1e2488d52104903d0e8c64f9dfe488b6c24104883c418493ba7500400000f87f4000000c5f877c390909048c7c19402000041bbed86ffff9090909090909045899f8404000049898f90040000e8fc5288fe0f1f84000000000090909048c7c19402000041bbed7effffebcc90909048c7c10000000041bbe76effffebba90909048c7c10000000041bbe762ffffeba890909048c7c10000000041bbe766ffffeb9690909048c7c11400000041bbed72ffffeb8490909048c7c10000000041bbe76affffe96fffffff90909048c7c11405000041bbed76ffffe95affffff90909048c7c19402000041bbed82ffffe945ffffff90909048c7c11405000041bbed7affffe930ffffff48896c2410e8e25286fee9f7fdfffff4488d0df8feffff49898f68040000e9a96088fef441c78784040000f597ffff49c7879004000000000000e8075288fe0f1f84000000000041c78784040000f593ffff49c7879004000000000000e8e45188fe0f1f840000000000e85df39bfef4e8774f88fef4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 77 32 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3275a4b7 slotKind: QWORD  <||@
  Comment 77 38 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 80 44 rdi|DWORD = MOV input: [r8|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 80 [rsi:0, r8:0]at java.lang.String.getChars(String.java:1708) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 46 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 88 48 rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 88 [rsi:0, r8:0, r11:0]at java.lang.String.getChars(String.java:1708) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 50 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 104 block B2 null  <||@
  Comment 104 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 54 NOP  <||@
  Comment 105 56 NOP  <||@
  Comment 106 58 NOP  <||@
  Comment 107 60 NOP  <||@
  Comment 108 62 CMPBRANCH (x: rdx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 117 block B4 null  <||@
  Comment 117 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 117 66 NOP  <||@
  Comment 118 68 NOP  <||@
  Comment 119 70 NOP  <||@
  Comment 120 72 NOP  <||@
  Comment 121 74 NOP  <||@
  Comment 122 76 NOP  <||@
  Comment 123 78 NOP  <||@
  Comment 124 80 rax|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 128 82 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 130 84 rbp|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 134 86 CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 143 block B6 null  <||@
  Comment 143 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 143 90 NOP  <||@
  Comment 144 92 NOP  <||@
  Comment 145 94 NOP  <||@
  Comment 146 96 NOP  <||@
  Comment 147 98 NOP  <||@
  Comment 148 100 NOP  <||@
  Comment 149 102 NOP  <||@
  Comment 150 104 rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 155 106 rbp|DWORD = OR (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 160 108 rbp|DWORD = OR (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 162 110 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 170 block B8 null  <||@
  Comment 170 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 170 114 NOP  <||@
  Comment 171 116 NOP  <||@
  Comment 172 118 NOP  <||@
  Comment 173 120 NOP  <||@
  Comment 174 122 NOP  <||@
  Comment 175 124 rbp|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 180 126 CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 188 block B10 null  <||@
  Comment 188 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 188 130 NOP  <||@
  Comment 189 132 NOP  <||@
  Comment 190 134 NOP  <||@
  Comment 191 136 NOP  <||@
  Comment 192 138 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 size: DWORD  <||@
  Comment 200 block B11 null  <||@
  Comment 200 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 200 142 NOP  <||@
  Comment 201 144 NOP  <||@
  Comment 202 146 NOP  <||@
  Comment 203 148 NOP  <||@
  Comment 204 150 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD  <||@
  Comment 212 block B13 null  <||@
  Comment 212 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 212 154 NOP  <||@
  Comment 213 156 NOP  <||@
  Comment 214 158 NOP  <||@
  Comment 215 160 NOP  <||@
  Comment 216 162 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 225 block B15 null  <||@
  Comment 225 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 225 166 NOP  <||@
  Comment 226 168 NOP  <||@
  Comment 227 170 NOP  <||@
  Comment 228 172 NOP  <||@
  Comment 229 174 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 238 block B17 null  <||@
  Comment 238 176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 238 178 NOP  <||@
  Comment 239 180 NOP  <||@
  Comment 240 182 NOP  <||@
  Comment 241 184 NOP  <||@
  Comment 242 186 NOP  <||@
  Comment 243 188 rbx|DWORD = ADD (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 248 190 CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 256 block B19 null  <||@
  Comment 256 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 256 194 NOP  <||@
  Comment 257 196 NOP  <||@
  Comment 258 198 NOP  <||@
  Comment 259 200 NOP  <||@
  Comment 260 202 NOP  <||@
  Comment 261 204 NOP  <||@
  Comment 262 206 NOP  <||@
  Comment 263 208 NOP  <||@
  Comment 264 210 NOP  <||@
  Comment 265 212 NOP  <||@
  Comment 266 214 NOP  <||@
  Comment 267 216 NOP  <||@
  Comment 268 218 NOP  <||@
  Comment 269 220 NOP  <||@
  Comment 270 222 NOP  <||@
  Comment 271 224 NOP  <||@
  Comment 272 226 NOP  <||@
  Comment 273 228 NOP  <||@
  Comment 274 230 NOP  <||@
  Comment 275 232 NOP  <||@
  Comment 276 234 NOP  <||@
  Comment 277 236 NOP  <||@
  Comment 278 238 NOP  <||@
  Comment 279 240 NOP  <||@
  Comment 280 242 NOP  <||@
  Comment 281 244 NOP  <||@
  Comment 282 246 NOP  <||@
  Comment 283 248 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2da609a4 encoding: base: 0 shift: 3  <||@
  Comment 287 250 r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 287 252 r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 287 254 rsi|QWORD = MOV value: rdx|DWORD size: DWORD  <||@
  Comment 289 256 rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 293 258 rsi|QWORD[*] = ADD (x: rsi|QWORD, y: r11|QWORD[*]) size: QWORD  <||@
  Comment 296 260 rdx|QWORD = MOV value: r9|DWORD size: DWORD  <||@
  Comment 299 262 rdx|QWORD = SHL value: rdx|QWORD size: QWORD  <||@
  Comment 302 264 rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD  <||@
  Comment 306 266 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD  <||@
  Comment 309 268 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 309 270 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 309 274 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 309 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 314 276 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 323 POLL_RETURN_FAR  <||@
  Comment 340 block B1 null  <||@
  Comment 340 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 280 NOP  <||@
  Comment 341 282 NOP  <||@
  Comment 342 284 NOP  <||@
  Comment 343 -1 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 350 -1 r11|DWORD = MOVE input: int[-30995|0xffffffffffff86ed]  <||@
  Comment 356 286 JUMP ~outgoingValues: [] destination: B1 -> B21  <||@
  Comment 356 block B21 null  <||@
  Comment 356 378 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 356 380 NOP  <||@
  Comment 357 382 NOP  <||@
  Comment 358 384 NOP  <||@
  Comment 359 386 NOP  <||@
  Comment 360 388 NOP  <||@
  Comment 361 390 NOP  <||@
  Comment 362 392 NOP  <||@
  Comment 363 394 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 370 396 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 377 398 DEOPT info [bci:0]  <||@
  Comment 377 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 382 [rsi:0, r8:0]at java.lang.String.getChars(String.java:1708) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 390 block B5 null  <||@
  Comment 390 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 390 290 NOP  <||@
  Comment 391 292 NOP  <||@
  Comment 392 294 NOP  <||@
  Comment 393 -1 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 400 -1 r11|DWORD = MOVE input: int[-33043|0xffffffffffff7eed]  <||@
  Comment 406 296 JUMP ~outgoingValues: [] destination: B5 -> B21  <||@
  Comment 408 block B12 null  <||@
  Comment 408 298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 408 300 NOP  <||@
  Comment 409 302 NOP  <||@
  Comment 410 304 NOP  <||@
  Comment 411 -1 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 418 -1 r11|DWORD = MOVE input: int[-37145|0xffffffffffff6ee7]  <||@
  Comment 424 306 JUMP ~outgoingValues: [] destination: B12 -> B21  <||@
  Comment 426 block B18 null  <||@
  Comment 426 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 426 310 NOP  <||@
  Comment 427 312 NOP  <||@
  Comment 428 314 NOP  <||@
  Comment 429 -1 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 436 -1 r11|DWORD = MOVE input: int[-40217|0xffffffffffff62e7]  <||@
  Comment 442 316 JUMP ~outgoingValues: [] destination: B18 -> B21  <||@
  Comment 444 block B16 null  <||@
  Comment 444 318 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 444 320 NOP  <||@
  Comment 445 322 NOP  <||@
  Comment 446 324 NOP  <||@
  Comment 447 -1 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 454 -1 r11|DWORD = MOVE input: int[-39193|0xffffffffffff66e7]  <||@
  Comment 460 326 JUMP ~outgoingValues: [] destination: B16 -> B21  <||@
  Comment 462 block B20 null  <||@
  Comment 462 328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 462 330 NOP  <||@
  Comment 463 332 NOP  <||@
  Comment 464 334 NOP  <||@
  Comment 465 -1 rcx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 472 -1 r11|DWORD = MOVE input: int[-36115|0xffffffffffff72ed]  <||@
  Comment 478 336 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 480 block B14 null  <||@
  Comment 480 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 480 340 NOP  <||@
  Comment 481 342 NOP  <||@
  Comment 482 344 NOP  <||@
  Comment 483 -1 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 490 -1 r11|DWORD = MOVE input: int[-38169|0xffffffffffff6ae7]  <||@
  Comment 496 346 JUMP ~outgoingValues: [] destination: B14 -> B21  <||@
  Comment 501 block B9 null  <||@
  Comment 501 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 501 350 NOP  <||@
  Comment 502 352 NOP  <||@
  Comment 503 354 NOP  <||@
  Comment 504 -1 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 511 -1 r11|DWORD = MOVE input: int[-35091|0xffffffffffff76ed]  <||@
  Comment 517 356 JUMP ~outgoingValues: [] destination: B9 -> B21  <||@
  Comment 522 block B3 null  <||@
  Comment 522 358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 522 360 NOP  <||@
  Comment 523 362 NOP  <||@
  Comment 524 364 NOP  <||@
  Comment 525 -1 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 532 -1 r11|DWORD = MOVE input: int[-32019|0xffffffffffff82ed]  <||@
  Comment 538 366 JUMP ~outgoingValues: [] destination: B3 -> B21  <||@
  Comment 543 block B7 null  <||@
  Comment 543 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 543 370 NOP  <||@
  Comment 544 372 NOP  <||@
  Comment 545 374 NOP  <||@
  Comment 546 -1 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 553 -1 r11|DWORD = MOVE input: int[-34067|0xffffffffffff7aed]  <||@
  Comment 559 376 JUMP ~outgoingValues: [] destination: B7 -> B21  <||@
  Comment 569 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 594 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 622 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 627 [rsi:0, r8:0]at java.lang.String.getChars(String.java:1708) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 657 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 662 [rsi:0, r8:0, r11:0]at java.lang.String.getChars(String.java:1708) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 670 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 670 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 676 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 676 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
