begin_compilation
  name " HotSpotCompilation-10724[java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)]"
  method "HotSpotCompilation-10724[java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)]"
  date 1724269767867
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a246 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a246  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.ThreadLocal$ThreadLocalMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v257 v262 v128 ?56 v125 ?168 ?167 v261 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a246 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ThreadLocal$ThreadLocalMap$Entry[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 1]
stamp: n# java.lang.ThreadLocal$ThreadLocalMap$Entry[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
lastLocationAccess: - 
=== Succesors ===
next: i247 
=== Usages ===
a84 v258 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v257 lastLocationAccess: - #next: i247  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.ThreadLocal
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v259 v77 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a134 v107 v190 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>
localsSize: 7
locksSize: 0
sourceFile: ThreadLocal.java
sourceLine: 545
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v178 v255 a206 i247 i248 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a246 
=== Succesors ===
=== Usages ===
i247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i247 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-22027|0xffffffffffffa9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v258 
lastLocationAccess: - 
=== Succesors ===
next: i248 
=== Usages ===
i10 v109 
=== Predecessor ===
a246 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v258 lastLocationAccess: - #next: i248  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-23307|0xffffffffffffa4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ThreadLocal.threadLocalHashCode
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:547) [bci: 10]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v259 
lastLocationAccess: - 
=== Succesors ===
next: v158 
=== Usages ===
i11 
=== Predecessor ===
i247 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v259 lastLocationAccess: - #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:547) [bci: 16]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:547) [bci: 16]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i247 
y: i9 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i247 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:547) [bci: 17]
stamp: i32
=== Inputs ===
x: i10 
y: i248 
=== Succesors ===
=== Usages ===
j138 ?167 ?167 v125 v109 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i10 y: i248  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 94]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i247 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i11 y: i247  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 v232 j177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
i248 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v155 #falseSuccessor: v157  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a249 
=== Usages ===
v120 
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a249  <|@  <|@
f <@~|@floating>@ <|@
tid a84 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 1]
op: Uncompress
stamp: a# java.lang.ThreadLocal$ThreadLocalMap$Entry[]
=== Inputs ===
value: a246 
=== Succesors ===
=== Usages ===
v260 ?167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a246  <|@  <|@
f <@~|@floating>@ <|@
tid j138 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i11 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a84 
index: j138 
=== Succesors ===
=== Usages ===
a249 v120 v185 v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a84 index: j138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a249 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ThreadLocal$ThreadLocalMap$Entry
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
stamp: n# java.lang.ThreadLocal$ThreadLocalMap$Entry
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v260 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
a106 v131 v256 v263 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v260 lastLocationAccess: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 43]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a249 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a249  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:550) [bci: 28]
profileData: PROFILED designatedSuccessorProbability: 2.5677530163965295E-5
stamp: void
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
a249 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v73 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: j193 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j193 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j223 
=== Usages ===
v264 v265 
=== Predecessor ===
v243 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j223  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
j223 v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j223 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
lastLocationAccess: - 
=== Succesors ===
next: j224 
=== Usages ===
j196 v266 v267 a205 v268 v269 v270 v271 
=== Predecessor ===
j193 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v264 lastLocationAccess: - #next: j224  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
j224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j224 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v265 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
v197 
=== Predecessor ===
j223 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v265 lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid j192 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
rawvalue: 32
stableDimension: 0
stamp: i64 [32]
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: i64
=== Inputs ===
x: j223 
y: j192 
=== Succesors ===
=== Usages ===
v197 v225 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j223 y: j192  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j224 
y: j196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j224 y: j196  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 37]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 v231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
j224 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v199 #falseSuccessor: v198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: a206 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a206  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
rawvalue: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a206 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v191 
=== Succesors ===
next: v255 
=== Usages ===
v255 a221 
=== Predecessor ===
v199 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v191 #next: v255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-61297|0xffffffffffff108f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a206 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
a206 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a206 #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v255 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
lastLocationAccess: - 
value: j196 
stateAfter: - 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v264 lastLocationAccess: - value: j196 stateAfter: - #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
displacement: 288
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
address: v268 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v268 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
lastLocationAccess: - 
value: j201 
stateAfter: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 lastLocationAccess: - value: j201 stateAfter: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
rawvalue: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v271 
lastLocationAccess: - 
value: v245 
stateAfter: - 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v271 lastLocationAccess: - value: v245 stateAfter: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v267 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v267 lastLocationAccess: - value: i34 stateAfter: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v269 
lastLocationAccess: - 
value: j175 
stateAfter: - 
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v269 lastLocationAccess: - value: j175 stateAfter: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v270 
lastLocationAccess: - 
value: j175 
stateAfter: - 
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v270 lastLocationAccess: - value: j175 stateAfter: - #next: v204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:277) [bci: 33]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: a205 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j223 
=== Succesors ===
next: v208 
=== Usages ===
a221 
=== Predecessor ===
v204 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j223 #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
a205 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v209 
values: a205 a206 
=== Succesors ===
=== Usages ===
?167 a119 v107 v187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: a205 a206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v208 v210 
=== Succesors ===
next: v46 
=== Usages ===
a221 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v208 v210 #next: v46  <|@  <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>, UnresolvedJavaType<Ljava/lang/ThreadLocal;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)>
=== Inputs ===
arguments: a221 a2 a3 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a221 a2 a3  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 91
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>
localsSize: 7
locksSize: 0
sourceFile: ThreadLocal.java
sourceLine: 563
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a84 i11 a221 a1 - - - - i11 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a84 i11 a221 a1 - - - - i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
bci: 91
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
polymorphic: false
stamp: void
targetMethod: Direct#ThreadLocal$ThreadLocalMap$Entry.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v107 
stateDuring: ?167 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v107 stateDuring: ?167 #next: v185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 94]
precise: true
stamp: void
=== Inputs ===
address: v260 
value: - 
stateBefore: - 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v260 value: - stateBefore: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid a119 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 94]
op: Compress
stamp: n!# java.lang.ThreadLocal$ThreadLocalMap$Entry
=== Inputs ===
value: a221 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 94]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v155 
address: v260 
lastLocationAccess: - 
value: a119 
stateAfter: - 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v155 address: v260 lastLocationAccess: - value: a119 stateAfter: - #next: v187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 94]
precise: true
stamp: void
=== Inputs ===
address: v260 
value: a221 
object: - 
=== Succesors ===
next: i250 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v260 value: a221 object: - #next: i250  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i250 v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ThreadLocal$ThreadLocalMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:564) [bci: 97]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v261 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
i51 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v261 lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:547) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:564) [bci: 101]
stamp: i32
=== Inputs ===
x: i250 
y: i8 
=== Succesors ===
=== Usages ===
v124 ?168 v125 ?56 v60 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i250 y: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ThreadLocal$ThreadLocalMap.size
location: ThreadLocal$ThreadLocalMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:564) [bci: 103]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v261 
lastLocationAccess: - 
value: i51 
stateAfter: - 
=== Succesors ===
next: i55 
=== Usages ===
=== Predecessor ===
i250 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v261 lastLocationAccess: - value: i51 stateAfter: - #next: i55  <|@  <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)>
=== Inputs ===
arguments: a1 i11 i51 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i11 i51  <|@  <|@
tid ?168 <|@
d <@d|@=== Debug Properties ===
bci: 113
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>
localsSize: 7
locksSize: 0
sourceFile: ThreadLocal.java
sourceLine: 565
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - i51 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
bci: 113
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ThreadLocal$ThreadLocalMap.cleanSomeSlots
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v125 
stateDuring: ?168 
=== Succesors ===
next: v162 
=== Usages ===
?56 v57 
=== Predecessor ===
v124 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v125 stateDuring: ?168 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i55 
y: i34 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i55 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
i55 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v160 #falseSuccessor: v161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: i251 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i251  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ThreadLocal$ThreadLocalMap.threshold
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 122]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
lastLocationAccess: - 
=== Succesors ===
next: v63 
=== Usages ===
v60 
=== Predecessor ===
v160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v262 lastLocationAccess: - #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 125]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i251 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i251  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 125]
profileData: PROFILED designatedSuccessorProbability: 0.8888888888888888
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
i251 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v62 #falseSuccessor: v61  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:567) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:567) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap;, resolved>]
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
bci: 129
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>
localsSize: 7
locksSize: 0
sourceFile: ThreadLocal.java
sourceLine: 566
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
bci: 129
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
polymorphic: false
stamp: void
targetMethod: Direct#ThreadLocal$ThreadLocalMap.rehash
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v128 
stateDuring: ?169 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v128 stateDuring: ?169 #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:567) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v65 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:567) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v69 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v69 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:567) [bci: 132]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 116
bytecode: ifne
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
sourceFile: ThreadLocal.java
sourceLine: 565
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i55 a1 - - - - - i51 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i55 a1 - - - - - i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x819eff4e]: UnreachedCode@6[HotSpotMethod<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>, 132]}
stamp: void
=== Inputs ===
stateBefore: ?56 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?56  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a129 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a129  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a249 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: WEAK_REFERS_TO
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Reference.referent
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 34]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v256 
lastLocationAccess: - 
=== Succesors ===
next: v166 
=== Usages ===
a130 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v256 lastLocationAccess: - #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid a130 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 34]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a129 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a129  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a130 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a130  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
a129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a249 
=== Succesors ===
=== Usages ===
v137 v188 v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v263 
value: - 
stateBefore: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v263 value: - stateBefore: - #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid a134 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 43]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ThreadLocal$ThreadLocalMap$Entry.value
location: ThreadLocal$ThreadLocalMap$Entry.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
lastLocationAccess: - 
value: a134 
stateAfter: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v263 lastLocationAccess: - value: a134 stateAfter: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid a106 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
op: Uncompress
stamp: a# java.lang.ThreadLocal$ThreadLocalMap$Entry
=== Inputs ===
value: a249 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 43]
precise: false
stamp: void
=== Inputs ===
address: v263 
value: a3 
object: a106 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v263 value: a3 object: a106 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:554) [bci: 46]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
rawvalue: -41747
stableDimension: 0
stamp: i32 [-41747]
stampKind: i32
value: int[-41747|0xffffffffffff5ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v165 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
rawvalue: -24859
stableDimension: 0
stamp: i32 [-24859]
stampKind: i32
value: int[-24859|0xffffffffffff9ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: i32 [-41747 - -24859] bits:1...1xx0111x01110x101
valueDescription: i32
=== Inputs ===
merge: v172 
values: i182 i184 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v172 values: i182 i184  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v172 
values: j175 j81 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v172 values: j175 j81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v181 v183 
=== Succesors ===
next: v178 
=== Usages ===
i176 j177 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v181 v183 #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i176 
speculation: j177 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i176 speculation: j177  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41747|0xffffffffffff5ced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a246 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a246  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.ThreadLocal$ThreadLocalMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v257 v262 v128 ?56 v125 ?168 ?167 v261 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a246 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ThreadLocal$ThreadLocalMap$Entry[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 1]
stamp: n# java.lang.ThreadLocal$ThreadLocalMap$Entry[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
lastLocationAccess: - 
=== Succesors ===
next: i247 
=== Usages ===
a84 v258 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v257 lastLocationAccess: - #next: i247  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.ThreadLocal
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v259 v77 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a134 v107 v190 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>
localsSize: 7
locksSize: 0
sourceFile: ThreadLocal.java
sourceLine: 545
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v178 v255 a206 i247 i248 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a246 
=== Succesors ===
=== Usages ===
i247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i247 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-22027|0xffffffffffffa9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v258 
lastLocationAccess: - 
=== Succesors ===
next: i248 
=== Usages ===
i10 v109 
=== Predecessor ===
a246 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v258 lastLocationAccess: - #next: i248  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i248 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-23307|0xffffffffffffa4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ThreadLocal.threadLocalHashCode
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:547) [bci: 10]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v259 
lastLocationAccess: - 
=== Succesors ===
next: v158 
=== Usages ===
i11 
=== Predecessor ===
i247 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v259 lastLocationAccess: - #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:547) [bci: 16]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:547) [bci: 16]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i247 
y: i9 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i247 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:547) [bci: 17]
stamp: i32
=== Inputs ===
x: i10 
y: i248 
=== Succesors ===
=== Usages ===
j138 ?167 ?167 v125 v109 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i10 y: i248  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 94]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i247 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i11 y: i247  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 v232 j177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
i248 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v155 #falseSuccessor: v157  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a249 
=== Usages ===
v120 
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a249  <|@  <|@
f <@~|@floating>@ <|@
tid a84 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 1]
op: Uncompress
stamp: a# java.lang.ThreadLocal$ThreadLocalMap$Entry[]
=== Inputs ===
value: a246 
=== Succesors ===
=== Usages ===
v260 ?167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a246  <|@  <|@
f <@~|@floating>@ <|@
tid j138 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i11 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
result [v7|QWORD[.] + v6|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a84 
index: j138 
=== Succesors ===
=== Usages ===
a249 v120 v185 v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a84 index: j138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a249 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ThreadLocal$ThreadLocalMap$Entry
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
stamp: n# java.lang.ThreadLocal$ThreadLocalMap$Entry
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v260 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
a106 v131 v256 v263 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v260 lastLocationAccess: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 43]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a249 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a249  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:550) [bci: 28]
profileData: PROFILED designatedSuccessorProbability: 2.5677530163965295E-5
stamp: void
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
a249 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v73 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: j193 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j193 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j223 
=== Usages ===
v264 v265 
=== Predecessor ===
v243 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j223  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
j223 v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j223 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
lastLocationAccess: - 
=== Succesors ===
next: j224 
=== Usages ===
j196 v266 v267 a205 v268 v269 v270 v271 
=== Predecessor ===
j193 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v264 lastLocationAccess: - #next: j224  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j193 
index: - 
=== Succesors ===
=== Usages ===
j224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j193 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j224 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v265 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
v197 
=== Predecessor ===
j223 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v265 lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid j192 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
rawvalue: 32
stableDimension: 0
stamp: i64 [32]
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j196 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: i64
=== Inputs ===
x: j223 
y: j192 
=== Succesors ===
=== Usages ===
v197 v225 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j223 y: j192  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j224 
y: j196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j224 y: j196  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 37]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 v231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
j224 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v199 #falseSuccessor: v198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: a206 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a206  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
rawvalue: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a206 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v191 
=== Succesors ===
next: v255 
=== Usages ===
v255 a221 
=== Predecessor ===
v199 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v191 #next: v255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-61297|0xffffffffffff108f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a206 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
a206 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a206 #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v255 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
lastLocationAccess: - 
value: j196 
stateAfter: - 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v264 lastLocationAccess: - value: j196 stateAfter: - #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
result [v9|QWORD + 288] <|@
d <@d|@=== Debug Properties ===
displacement: 288
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
address: v268 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v268 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
result [v9|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
lastLocationAccess: - 
value: j201 
stateAfter: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 lastLocationAccess: - value: j201 stateAfter: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
result [v9|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
result meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
rawvalue: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v271 
lastLocationAccess: - 
value: v245 
stateAfter: - 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v271 lastLocationAccess: - value: v245 stateAfter: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
result [v9|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v267 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v267 lastLocationAccess: - value: i34 stateAfter: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
result [v9|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v269 
lastLocationAccess: - 
value: j175 
stateAfter: - 
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v269 lastLocationAccess: - value: j175 stateAfter: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
result [v9|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j223 
index: - 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v270 
lastLocationAccess: - 
value: j175 
stateAfter: - 
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v270 lastLocationAccess: - value: j175 stateAfter: - #next: v204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:277) [bci: 33]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: a205 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j223 
=== Succesors ===
next: v208 
=== Usages ===
a221 
=== Predecessor ===
v204 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j223 #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
a205 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a221 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v209 
values: a205 a206 
=== Succesors ===
=== Usages ===
?167 a119 v107 v187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: a205 a206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 85]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v208 v210 
=== Succesors ===
next: v46 
=== Usages ===
a221 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v208 v210 #next: v46  <|@  <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>, UnresolvedJavaType<Ljava/lang/ThreadLocal;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)>
=== Inputs ===
arguments: a221 a2 a3 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a221 a2 a3  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 91
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>
localsSize: 7
locksSize: 0
sourceFile: ThreadLocal.java
sourceLine: 563
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a84 i11 a221 a1 - - - - i11 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a84 i11 a221 a1 - - - - i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
bci: 91
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
polymorphic: false
stamp: void
targetMethod: Direct#ThreadLocal$ThreadLocalMap$Entry.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v107 
stateDuring: ?167 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v107 stateDuring: ?167 #next: v185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 94]
precise: true
stamp: void
=== Inputs ===
address: v260 
value: - 
stateBefore: - 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v260 value: - stateBefore: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid a119 <|@
result v18|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 94]
op: Compress
stamp: n!# java.lang.ThreadLocal$ThreadLocalMap$Entry
=== Inputs ===
value: a221 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 94]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v155 
address: v260 
lastLocationAccess: - 
value: a119 
stateAfter: - 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v155 address: v260 lastLocationAccess: - value: a119 stateAfter: - #next: v187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 94]
precise: true
stamp: void
=== Inputs ===
address: v260 
value: a221 
object: - 
=== Succesors ===
next: i250 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v260 value: a221 object: - #next: i250  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i250 v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ThreadLocal$ThreadLocalMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:564) [bci: 97]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v261 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
i51 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v261 lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:547) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:564) [bci: 101]
stamp: i32
=== Inputs ===
x: i250 
y: i8 
=== Succesors ===
=== Usages ===
v124 ?168 v125 ?56 v60 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i250 y: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ThreadLocal$ThreadLocalMap.size
location: ThreadLocal$ThreadLocalMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:564) [bci: 103]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v261 
lastLocationAccess: - 
value: i51 
stateAfter: - 
=== Succesors ===
next: i55 
=== Usages ===
=== Predecessor ===
i250 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v261 lastLocationAccess: - value: i51 stateAfter: - #next: i55  <|@  <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)>
=== Inputs ===
arguments: a1 i11 i51 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i11 i51  <|@  <|@
tid ?168 <|@
d <@d|@=== Debug Properties ===
bci: 113
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>
localsSize: 7
locksSize: 0
sourceFile: ThreadLocal.java
sourceLine: 565
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - i51 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i55 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 113
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ThreadLocal$ThreadLocalMap.cleanSomeSlots
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v125 
stateDuring: ?168 
=== Succesors ===
next: v162 
=== Usages ===
?56 v57 
=== Predecessor ===
v124 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v125 stateDuring: ?168 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i55 
y: i34 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i55 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
i55 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v160 #falseSuccessor: v161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: i251 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i251  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ThreadLocal$ThreadLocalMap.threshold
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 122]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
lastLocationAccess: - 
=== Succesors ===
next: v63 
=== Usages ===
v60 
=== Predecessor ===
v160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v262 lastLocationAccess: - #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 125]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i251 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i251  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 125]
profileData: PROFILED designatedSuccessorProbability: 0.8888888888888888
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
i251 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v62 #falseSuccessor: v61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:567) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:567) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap;, resolved>]
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
bci: 129
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>
localsSize: 7
locksSize: 0
sourceFile: ThreadLocal.java
sourceLine: 566
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
bci: 129
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
polymorphic: false
stamp: void
targetMethod: Direct#ThreadLocal$ThreadLocalMap.rehash
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v128 
stateDuring: ?169 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v128 stateDuring: ?169 #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:567) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v65 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:567) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v69 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v69 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:567) [bci: 132]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 116
bytecode: ifne
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
sourceFile: ThreadLocal.java
sourceLine: 565
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i55 a1 - - - - - i51 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i55 a1 - - - - - i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x819eff4e]: UnreachedCode@6[HotSpotMethod<ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)>, 132]}
stamp: void
=== Inputs ===
stateBefore: ?56 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?56  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a129 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a129  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
result [v8|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a249 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
result v25|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: WEAK_REFERS_TO
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Reference.referent
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 34]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v256 
lastLocationAccess: - 
=== Succesors ===
next: v166 
=== Usages ===
a130 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v256 lastLocationAccess: - #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid a130 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 34]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a129 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a129  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ref.Reference.refersTo0(Object) [bci: -1]
at java.lang.ref.Reference.refersToImpl(Reference.java:384) [bci: 2]
at java.lang.ref.Reference.refersTo(Reference.java:375) [bci: 2]
at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a130 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a130  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
a129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
result [v8|DWORD[_] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a249 
=== Succesors ===
=== Usages ===
v137 v188 v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v263 
value: - 
stateBefore: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v263 value: - stateBefore: - #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid a134 <|@
result v29|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 43]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ThreadLocal$ThreadLocalMap$Entry.value
location: ThreadLocal$ThreadLocalMap$Entry.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
lastLocationAccess: - 
value: a134 
stateAfter: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v263 lastLocationAccess: - value: a134 stateAfter: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid a106 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
op: Uncompress
stamp: a# java.lang.ThreadLocal$ThreadLocalMap$Entry
=== Inputs ===
value: a249 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:553) [bci: 43]
precise: false
stamp: void
=== Inputs ===
address: v263 
value: a3 
object: a106 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v263 value: a3 object: a106 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:554) [bci: 46]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:552) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result int[-41747|0xffffffffffff5ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
rawvalue: -41747
stableDimension: 0
stamp: i32 [-41747]
stampKind: i32
value: int[-41747|0xffffffffffff5ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v165 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41747|0xffffffffffff5ced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:549) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result int[-24859|0xffffffffffff9ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
rawvalue: -24859
stableDimension: 0
stamp: i32 [-24859]
stampKind: i32
value: int[-24859|0xffffffffffff9ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i176 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: i32 [-41747 - -24859] bits:1...1xx0111x01110x101
valueDescription: i32
=== Inputs ===
merge: v172 
values: i182 i184 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v172 values: i182 i184  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v172 
values: j175 j81 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v172 values: j175 j81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v181 v183 
=== Succesors ===
next: v178 
=== Usages ===
i176 j177 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v181 v183 #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:546) [bci: 6]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i176 
speculation: j177 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i176 speculation: j177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41747|0xffffffffffff5ced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41747|0xffffffffffff5ced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41747|0xffffffffffff5ced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41747|0xffffffffffff5ced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41747|0xffffffffffff5ced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  220  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  250  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr  282  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  286  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  296  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  458  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  460  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  464  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  468  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  470  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  482  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  574  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [int[-41747|0xffffffffffff5ced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  220  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  250  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr  282  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  286  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  296  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  458  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  460  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  464  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  468  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  470  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  482  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  574  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [int[-41747|0xffffffffffff5ced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[456, 457[[480, 482[[526, 527[[572, 574[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 36[[454, 457[[478, 481[[526, 527[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 34[[452, 457[[476, 481[[526, 527[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[456, 457[[480, 481[[526, 527[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v15|q [0, 32[[450, 457[[474, 481[[524, 527[[570, 572[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [32, 92[[230, 498[[508, 524[[548, 611[[612, 643[32 MustHaveRegister 38 MustHaveRegister 470 MustHaveRegister 472 MustHaveRegister 474 ShouldHaveRegister 496 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [34, 92[[230, 452[[548, 590[[612, 643[34 MustHaveRegister 44 MustHaveRegister 90 ShouldHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [36, 227[[230, 454[[548, 590[[612, 643[36 MustHaveRegister 220 MustHaveRegister 226 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [38, 64[38 MustHaveRegister 40 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [40, 46[40 MustHaveRegister 42 ShouldHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v4|d [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v5|d [44, 70[[230, 476[[548, 580[44 MustHaveRegister 46 ShouldHaveRegister 66 MustHaveRegister 458 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 476 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v3|d [64, 70[[230, 464[[548, 580[64 MustHaveRegister 66 MustHaveRegister 458 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [66, 224[66 MustHaveRegister 68 MustHaveRegister 86 MustHaveRegister 218 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [248, 292[248 MustHaveRegister 250 MustHaveRegister 280 MustHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 288 MustHaveRegister 290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [250, 278[250 MustHaveRegister 252 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [568, 570[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q rax|q [574, 579[574 MustHaveRegister 576 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v9|q [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v14|q [296, 467[450 ShouldHaveRegister 460 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [458, 459[458 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[v17|q]" v17|q -1 [458, 459[458 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[v18|d]" v18|d v15|q [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [464, 467[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [466, 467[466 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[v21|q]" v21|q -1 [466, 467[466 MustHaveRegister  "NoDefinitionFound"
  v22|d DWORD "[v22|d]" v22|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v22|d [470, 496[[590, 611[470 MustHaveRegister 472 MustHaveRegister 478 ShouldHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d rax|q [482, 486[[590, 611[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v25|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [218, 219[218 MustHaveRegister  "NoDefinitionFound"
  v28|q QWORD "[v28|q]" v28|q -1 [218, 219[218 MustHaveRegister  "NoDefinitionFound"
  v29|d DWORD "[v29|d]" v29|d v2|q [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v8|d [224, 227[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v32|q QWORD "[v32|q]" v32|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v33|d DWORD "[v33|d]" v33|d -1 [622, 638[638 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [622, 640[640 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[456, 457[[480, 482[[526, 527[[572, 574[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 36[[454, 457[[478, 481[[526, 527[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 34[[452, 457[[476, 481[[526, 527[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[456, 457[[480, 481[[526, 527[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v15|q [0, 32[[450, 457[[474, 481[[524, 527[[570, 572[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 92[[230, 296[32 MustHaveRegister 38 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [34, 92[[230, 452[[548, 590[[612, 643[34 MustHaveRegister 44 MustHaveRegister 90 ShouldHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [36, 227[[230, 454[[548, 590[[612, 643[36 MustHaveRegister 220 MustHaveRegister 226 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [38, 64[38 MustHaveRegister 40 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [40, 46[40 MustHaveRegister 42 ShouldHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d v4|d [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v5|d [44, 70[[230, 296[44 MustHaveRegister 46 ShouldHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v7|q QWORD "[r10|q]" v7|q v3|d [64, 70[[230, 296[64 MustHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[r11|d]" v8|d -1 [66, 224[66 MustHaveRegister 68 MustHaveRegister 86 MustHaveRegister 218 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [248, 292[248 MustHaveRegister 250 MustHaveRegister 280 MustHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 288 MustHaveRegister 290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r9|q]" v10|q -1 [250, 278[250 MustHaveRegister 252 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [568, 570[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [574, 579[574 MustHaveRegister 576 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v9|q [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q v14|q [296, 455[450 ShouldHaveRegister  "OneSpillStore"
  v16|q QWORD "[rsi|q]" v16|q -1 [458, 459[458 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[rdx|q]" v17|q -1 [458, 459[458 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[rsi|d]" v18|d v15|q [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [464, 467[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q -1 [466, 467[466 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[rcx|q]" v21|q -1 [466, 467[466 MustHaveRegister  "NoDefinitionFound"
  v22|d DWORD "[rsi|d]" v22|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d v22|d [470, 473[470 MustHaveRegister 472 MustHaveRegister  "OneSpillStore"
  v24|d DWORD "[rax|d]" v24|d rax|q [482, 486[[590, 611[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d -1 [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q v25|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [218, 219[218 MustHaveRegister  "NoDefinitionFound"
  v28|q QWORD "[rdx|q]" v28|q -1 [218, 219[218 MustHaveRegister  "NoDefinitionFound"
  v29|d DWORD "[rsi|d]" v29|d v2|q [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r11|q]" v30|q v8|d [224, 227[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v32|q QWORD "[rdx|q]" v32|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v33|d DWORD "[r10|d]" v33|d -1 [622, 638[638 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r8|q]" v34|q -1 [622, 640[640 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[vstack:3|q]" v0|q v0|q [296, 449[ "SpillInDominator"
  v36|d DWORD "[vstack:0|d]" v6|d v6|d [296, 455[ "OneSpillStore"
  v37|q QWORD "[vstack:1|q]" v7|q v7|q [296, 455[ "OneSpillStore"
  v38|q QWORD "[vstack:2|q]" v15|q v15|q [455, 459[ "OneSpillStore"
  v39|q QWORD "[vstack:1|q]" v7|q v7|q [455, 457[ "OneSpillStore"
  v40|d DWORD "[vstack:0|d]" v6|d v6|d [455, 457[ "OneSpillStore"
  v41|q QWORD "[vstack:3|q]" v0|q v0|q [449, 455[ "SpillInDominator"
  v42|q QWORD "[vstack:3|q]" v0|q v0|q [455, 469[ "SpillInDominator"
  v43|d DWORD "[r8|d]" v6|d v6|d [457, 476[[548, 580[458 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 476 ShouldHaveRegister  "OneSpillStore"
  v44|q QWORD "[r10|q]" v7|q v7|q [457, 464[[548, 580[458 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister  "OneSpillStore"
  v45|q QWORD "[r11|q]" v15|q v15|q [459, 467[460 MustHaveRegister 466 MustHaveRegister  "OneSpillStore"
  v46|q QWORD "[r10|q]" v0|q v0|q [469, 479[470 MustHaveRegister 472 MustHaveRegister 474 ShouldHaveRegister  "SpillInDominator"
  v47|q QWORD "[vstack:3|q]" v0|q v0|q [479, 486[ "SpillInDominator"
  v48|d DWORD "[r11|d]" v23|d v23|d [473, 479[478 ShouldHaveRegister  "OneSpillStore"
  v49|d DWORD "[vstack:6|d]" v23|d v23|d [479, 486[ "OneSpillStore"
  v50|d DWORD "[rsi|d]" v23|d v23|d [486, 496[[590, 611[496 MustHaveRegister  "OneSpillStore"
  v51|q QWORD "[r11|q]" v0|q v0|q [486, 498[[508, 524[[548, 611[[612, 643[496 MustHaveRegister 524 ShouldHaveRegister  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  220  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  250  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr  282  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  286  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  296  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = STACKMOVE (input: v41|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = STACKMOVE (input: v37|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = STACKMOVE (input: v36|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  464  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  468  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  482  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  574  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [int[-41747|0xffffffffffff5ced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[456, 457[[480, 482[[526, 527[[572, 574[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 36[[454, 457[[478, 481[[526, 527[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 34[[452, 457[[476, 481[[526, 527[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[456, 457[[480, 481[[526, 527[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v15|q [0, 32[[450, 457[[474, 481[[524, 527[[570, 572[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 92[[230, 296[32 MustHaveRegister 38 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [34, 92[[230, 452[[548, 590[[612, 643[34 MustHaveRegister 44 MustHaveRegister 90 ShouldHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [36, 227[[230, 454[[548, 590[[612, 643[36 MustHaveRegister 220 MustHaveRegister 226 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [38, 64[38 MustHaveRegister 40 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [40, 46[40 MustHaveRegister 42 ShouldHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d v4|d [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v5|d [44, 70[[230, 296[44 MustHaveRegister 46 ShouldHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v7|q QWORD "[r10|q]" v7|q v3|d [64, 70[[230, 296[64 MustHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[r11|d]" v8|d -1 [66, 224[66 MustHaveRegister 68 MustHaveRegister 86 MustHaveRegister 218 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [248, 292[248 MustHaveRegister 250 MustHaveRegister 280 MustHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 288 MustHaveRegister 290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r9|q]" v10|q -1 [250, 278[250 MustHaveRegister 252 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [568, 570[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [574, 579[574 MustHaveRegister 576 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v9|q [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q v14|q [296, 455[450 ShouldHaveRegister  "OneSpillStore"
  v16|q QWORD "[rsi|q]" v16|q -1 [458, 459[458 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[rdx|q]" v17|q -1 [458, 459[458 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[rsi|d]" v18|d v15|q [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [464, 467[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q -1 [466, 467[466 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[rcx|q]" v21|q -1 [466, 467[466 MustHaveRegister  "NoDefinitionFound"
  v22|d DWORD "[rsi|d]" v22|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d v22|d [470, 473[470 MustHaveRegister 472 MustHaveRegister  "OneSpillStore"
  v24|d DWORD "[rax|d]" v24|d rax|q [482, 486[[590, 611[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d -1 [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q v25|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [218, 219[218 MustHaveRegister  "NoDefinitionFound"
  v28|q QWORD "[rdx|q]" v28|q -1 [218, 219[218 MustHaveRegister  "NoDefinitionFound"
  v29|d DWORD "[rsi|d]" v29|d v2|q [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r11|q]" v30|q v8|d [224, 227[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v32|q QWORD "[rdx|q]" v32|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v33|d DWORD "[r10|d]" v33|d -1 [622, 638[638 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r8|q]" v34|q -1 [622, 640[640 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[vstack:3|q]" v0|q v0|q [296, 449[ "SpillInDominator"
  v36|d DWORD "[vstack:0|d]" v6|d v6|d [296, 455[ "OneSpillStore"
  v37|q QWORD "[vstack:1|q]" v7|q v7|q [296, 455[ "OneSpillStore"
  v38|q QWORD "[vstack:2|q]" v15|q v15|q [455, 459[ "OneSpillStore"
  v39|q QWORD "[vstack:1|q]" v7|q v7|q [455, 457[ "OneSpillStore"
  v40|d DWORD "[vstack:0|d]" v6|d v6|d [455, 457[ "OneSpillStore"
  v41|q QWORD "[vstack:3|q]" v0|q v0|q [449, 455[ "SpillInDominator"
  v42|q QWORD "[vstack:3|q]" v0|q v0|q [455, 469[ "SpillInDominator"
  v43|d DWORD "[r8|d]" v6|d v6|d [457, 476[[548, 580[458 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 476 ShouldHaveRegister  "OneSpillStore"
  v44|q QWORD "[r10|q]" v7|q v7|q [457, 464[[548, 580[458 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister  "OneSpillStore"
  v45|q QWORD "[r11|q]" v15|q v15|q [459, 467[460 MustHaveRegister 466 MustHaveRegister  "OneSpillStore"
  v46|q QWORD "[r10|q]" v0|q v0|q [469, 479[470 MustHaveRegister 472 MustHaveRegister 474 ShouldHaveRegister  "SpillInDominator"
  v47|q QWORD "[vstack:3|q]" v0|q v0|q [479, 486[ "SpillInDominator"
  v48|d DWORD "[r11|d]" v23|d v23|d [473, 479[478 ShouldHaveRegister  "OneSpillStore"
  v49|d DWORD "[vstack:6|d]" v23|d v23|d [479, 486[ "OneSpillStore"
  v50|d DWORD "[rsi|d]" v23|d v23|d [486, 496[[590, 611[496 MustHaveRegister  "OneSpillStore"
  v51|q QWORD "[r11|q]" v0|q v0|q [486, 498[[508, 524[[548, 611[[612, 643[496 MustHaveRegister 524 ShouldHaveRegister  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  220  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  250  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr  282  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  286  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  296  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = STACKMOVE (input: v41|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = STACKMOVE (input: v37|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = STACKMOVE (input: v36|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  464  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  468  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  482  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  574  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [int[-41747|0xffffffffffff5ced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[456, 457[[480, 482[[526, 527[[572, 574[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 36[[454, 457[[478, 481[[526, 527[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 34[[452, 457[[476, 481[[526, 527[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[456, 457[[480, 481[[526, 527[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v15|q [0, 32[[450, 457[[474, 481[[524, 527[[570, 572[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[456, 457[[480, 481[[526, 527[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 92[[230, 296[32 MustHaveRegister 38 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [34, 92[[230, 452[[548, 590[[612, 643[34 MustHaveRegister 44 MustHaveRegister 90 ShouldHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [36, 227[[230, 454[[548, 590[[612, 643[36 MustHaveRegister 220 MustHaveRegister 226 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [38, 64[38 MustHaveRegister 40 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [40, 46[40 MustHaveRegister 42 ShouldHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d v4|d [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v5|d [44, 70[[230, 296[44 MustHaveRegister 46 ShouldHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v7|q QWORD "[r10|q]" v7|q v3|d [64, 70[[230, 296[64 MustHaveRegister 66 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[r11|d]" v8|d -1 [66, 224[66 MustHaveRegister 68 MustHaveRegister 86 MustHaveRegister 218 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [248, 292[248 MustHaveRegister 250 MustHaveRegister 280 MustHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 288 MustHaveRegister 290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r9|q]" v10|q -1 [250, 278[250 MustHaveRegister 252 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [568, 570[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [574, 579[574 MustHaveRegister 576 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v9|q [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q v14|q [296, 455[450 ShouldHaveRegister  "OneSpillStore"
  v16|q QWORD "[rsi|q]" v16|q -1 [458, 459[458 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[rdx|q]" v17|q -1 [458, 459[458 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[rsi|d]" v18|d v15|q [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [464, 467[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q -1 [466, 467[466 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[rcx|q]" v21|q -1 [466, 467[466 MustHaveRegister  "NoDefinitionFound"
  v22|d DWORD "[rsi|d]" v22|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d v22|d [470, 473[470 MustHaveRegister 472 MustHaveRegister  "OneSpillStore"
  v24|d DWORD "[rax|d]" v24|d rax|q [482, 486[[590, 611[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d -1 [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r10|q]" v26|q v25|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [218, 219[218 MustHaveRegister  "NoDefinitionFound"
  v28|q QWORD "[rdx|q]" v28|q -1 [218, 219[218 MustHaveRegister  "NoDefinitionFound"
  v29|d DWORD "[rsi|d]" v29|d v2|q [220, 222[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r11|q]" v30|q v8|d [224, 227[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v32|q QWORD "[rdx|q]" v32|q -1 [226, 227[226 MustHaveRegister  "NoDefinitionFound"
  v33|d DWORD "[r10|d]" v33|d -1 [622, 638[638 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r8|q]" v34|q -1 [622, 640[640 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[vstack:3|q]" v0|q v0|q [296, 449[ "SpillInDominator"
  v36|d DWORD "[vstack:0|d]" v6|d v6|d [296, 455[ "OneSpillStore"
  v37|q QWORD "[vstack:1|q]" v7|q v7|q [296, 455[ "OneSpillStore"
  v38|q QWORD "[vstack:2|q]" v15|q v15|q [455, 459[ "OneSpillStore"
  v39|q QWORD "[vstack:1|q]" v7|q v7|q [455, 457[ "OneSpillStore"
  v40|d DWORD "[vstack:0|d]" v6|d v6|d [455, 457[ "OneSpillStore"
  v41|q QWORD "[vstack:3|q]" v0|q v0|q [449, 455[ "SpillInDominator"
  v42|q QWORD "[vstack:3|q]" v0|q v0|q [455, 469[ "SpillInDominator"
  v43|d DWORD "[r8|d]" v6|d v6|d [457, 476[[548, 580[458 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister 476 ShouldHaveRegister  "OneSpillStore"
  v44|q QWORD "[r10|q]" v7|q v7|q [457, 464[[548, 580[458 MustHaveRegister 462 MustHaveRegister 464 MustHaveRegister  "OneSpillStore"
  v45|q QWORD "[r11|q]" v15|q v15|q [459, 467[460 MustHaveRegister 466 MustHaveRegister  "OneSpillStore"
  v46|q QWORD "[r10|q]" v0|q v0|q [469, 479[470 MustHaveRegister 472 MustHaveRegister 474 ShouldHaveRegister  "SpillInDominator"
  v47|q QWORD "[vstack:3|q]" v0|q v0|q [479, 486[ "SpillInDominator"
  v48|d DWORD "[r11|d]" v23|d v23|d [473, 479[478 ShouldHaveRegister  "OneSpillStore"
  v49|d DWORD "[vstack:6|d]" v23|d v23|d [479, 486[ "OneSpillStore"
  v50|d DWORD "[rsi|d]" v23|d v23|d [486, 496[[590, 611[496 MustHaveRegister  "OneSpillStore"
  v51|q QWORD "[r11|q]" v0|q v0|q [486, 498[[508, 524[[548, 611[[612, 643[496 MustHaveRegister 524 ShouldHaveRegister  "SpillInDominator"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  220  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  250  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr  282  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  286  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  296  <|@ instruction [v15|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = STACKMOVE (input: v41|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = STACKMOVE (input: v37|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = STACKMOVE (input: v36|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  464  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  468  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  482  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  574  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v1|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v8|DWORD[_] = MOV input: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v25|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v26|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v8|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: v27|QWORD, temp2: v28|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  220  <|@ instruction v29|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 28], y: v29|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v30|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v31|QWORD, temp2: v32|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  250  <|@ instruction v10|QWORD = LEA address: [v9|QWORD + 32] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction MOV (x: [r15|QWORD + 440], y: v10|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction AMD64PREFETCH ~address: [v9|QWORD + 288] instr: 0 <|@ <|@
      nr  282  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  286  <|@ instruction MOV x: [v9|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV x: [v9|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV x: [v9|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction v14|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = STACKMOVE (input: v37|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = STACKMOVE (input: v36|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: v7|QWORD[.] v6|DWORD v15|QWORD[.] 
locals: v0|QWORD[.] - - - - v6|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v7|QWORD[.] + v6|DWORD * 4 + 16], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v15|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 4 + 16], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  464  <|@ instruction v19|QWORD[.+] = LEA address: [v7|QWORD[.] + v6|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v19|QWORD[.+], ~newValue: v15|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  468  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  482  <|@ instruction v24|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction CMPBRANCH (x: v23|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE input: v11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  574  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: v24|DWORD 
locals: v0|QWORD[.] - - - - - v23|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  220  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  250  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  282  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  286  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: vstack:1|QWORD[.] vstack:0|DWORD vstack:2|QWORD[.] 
locals: vstack:3|QWORD[.] - - - - vstack:0|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  464  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  468  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: vstack:3|QWORD[.] - - - - - vstack:6|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  572  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  576  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  220  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  228  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  250  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  282  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  286  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: vstack:1|QWORD[.] vstack:0|DWORD vstack:2|QWORD[.] 
locals: vstack:3|QWORD[.] - - - - vstack:0|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  464  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  468  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: vstack:3|QWORD[.] - - - - - vstack:6|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  484  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  572  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  576  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction vstack:2|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: vstack:1|QWORD[.] vstack:0|DWORD vstack:2|QWORD[.] 
locals: vstack:3|QWORD[.] - - - - vstack:0|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction vstack:6|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: vstack:3|QWORD[.] - - - - - vstack:6|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [120, 332[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [118, 334[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [328, 338[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [66, 440[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [364, 438[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [120, 332[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:48|q]" vstack:1|q -1 [118, 334[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:56|q]" vstack:2|q -1 [328, 338[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:40|q]" vstack:3|q -1 [66, 440[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:28|d]" vstack:6|d -1 [364, 438[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: stack:40|QWORD[.] - - - - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: stack:40|QWORD[.] - - - - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: stack:40|QWORD[.] - - - - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: stack:40|QWORD[.] - - - - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: stack:40|QWORD[.] - - - - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: stack:40|QWORD[.] - - - - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: stack:40|QWORD[.] - - - - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: stack:40|QWORD[.] - - - - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: stack:40|QWORD[.] - - - - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: stack:40|QWORD[.] - - - - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r11:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182187517386852
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  612  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  614  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  616  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  620  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4538124107680412237
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV x: [r11|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91]
stack: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91] <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  338  <|@ instruction r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1 <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113]
locals: stack:40|QWORD[.] - - - - - stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113] <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4538199894372792977
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4537357820013006977
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4538199894372792978
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4523847021130895492
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129]
locals: - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129] <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4508449975682863365
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>} <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  118  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r11:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0]
locals: r11|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116]
stack: rax|DWORD 
locals: r11|QWORD[.] - - - - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  636  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // table:java.lang.ThreadLocal$ThreadLocalMap$Entry[]
     4: astore_3      
     5: aload_3       
     6: arraylength   
     7: istore        4
     9: aload_1       
    10: getfield      #4          // java.lang.ThreadLocal.threadLocalHashCode:int
    13: iload         4
    15: iconst_1      
    16: isub          
    17: iand          
    18: istore        5
    20: aload_3       
    21: iload         5
    23: aaload        
    24: astore        6
    26: aload         6
    28: ifnull        82
    31: aload         6
    33: aload_1       
    34: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    37: ifeq          47
    40: aload         6
    42: aload_2       
    43: putfield      #8          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    46: return        
    47: aload         6
    49: aconst_null   
    50: invokevirtual #11         // java.lang.ref.Reference.refersTo:(java.lang.Object)boolean
    53: ifeq          65
    56: aload_0       
    57: aload_1       
    58: aload_2       
    59: iload         5
    61: invokevirtual #14         // replaceStaleEntry:(java.lang.ThreadLocal, java.lang.Object, int)void
    64: return        
    65: aload_3       
    66: iload         5
    68: iload         4
    70: invokestatic  #10         // nextIndex:(int, int)int
    73: dup           
    74: istore        5
    76: aaload        
    77: astore        6
    79: goto          26
    82: aload_3       
    83: iload         5
    85: new           #16         // java.lang.ThreadLocal$ThreadLocalMap$Entry
    88: dup           
    89: aload_1       
    90: aload_2       
    91: invokespecial #5          // java.lang.ThreadLocal$ThreadLocalMap$Entry.<init>:(java.lang.ThreadLocal, java.lang.Object)void
    94: aastore       
    95: aload_0       
    96: dup           
    97: getfield      #2          // size:int
   100: iconst_1      
   101: iadd          
   102: dup_x1        
   103: putfield      #2          // size:int
   106: istore        6
   108: aload_0       
   109: iload         5
   111: iload         6
   113: invokevirtual #15         // cleanSomeSlots:(int, int)boolean
   116: ifne          132
   119: iload         6
   121: aload_0       
   122: getfield      #0          // threshold:int
   125: if_icmplt     132
   128: aload_0       
   129: invokevirtual #16         // rehash:()void
   132: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f85280400009090909090909090909090909048896c2430448b5614468b1cd50c000000458bc341ffc84423420c453bd80f867a0300009090909090909049c1e203478b5c82104585db0f841f01000090909090909090468b14dd0c00000049c1e2034c3bd20f85ad030000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000428b14dd1c00000048c1e2034885d20f841d000000498b77284883fe000f84660300004883ee084989772849037738488916488bf148c1ee03428934dd1c00000049c1e303498bf34833f148c1ee160f844b0000004885c90f8442000000498bf348c1ee0948ba00e0368d787f00004803f2803e027429f083042400803e00741fc60600498b57484885d20f84070300004883ea084989574849035758488932488b6c24304883c438493ba7500400000f87f1020000c5f877c3488974241890909090909090904d8b9fb80100004d8d4b204d3b8fc80100000f87e601000090909090909090909090904d898fb8010000410f18832001000049c7030100000041c74308addeadde41c7430c0000000049c743100000000049c74318000000004c89542410448944242490909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090498bf34c895c2408e8000000000f1f840000000000448b4424244c8b54241041807f40000f842f000000438b54821048c1e2034885d20f841d000000498b77284883fe000f84fb0100004883ee0849897728490377384889164c8b5c2408498bf348c1ee0343897482104b8d748210488bd64933d348c1ea160f8442000000488bd648c1ea0948b900e0368d787f00004803d1803a027429f083042400803a00741fc60200498b4f484885c90f84a20100004883e90849894f4849034f58488911be010000004c8b5424184103720c4189720c448bde498bf2418bd0418bcb44895c2424e8000000000f1f84000000000085c00f85c20000008b7424244c8b5c241890909090413b73100f8d2400000090909090909090909090488b6c24304883c438493ba7500400000f8733010000c5f877c390909090909090498bf36690e8000000000f1f840000000000ebc44c8bde90909090909090909048beaddeaddeaddeaddee8000000000f1f84000000000085004c8954241044894424244c8bd8e92efeffff4c8bde90909049c7c00000000041bae59effff90909090909090458997840400004d898790040000e8000000000f1f8400000000008b7424244c8b5c24189090909090909041c78784040000ed60ffff49c7879004000094020000e8000000000f1f8400000000004c8bde90909049c7c01400000041baed5cffffeb9648896c2430e800000000e9c9fbfffff448891424e800000000e99bfcfffff448893424e800000000e9fafcfffff4488d0dfbfcffff49898f68040000e95dfbfffff448891424e800000000e906fefffff448891424e800000000e95ffefffff4488d0db9feffff49898f68040000e92bfbfffff441c78784040000f5a9ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5a4ffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f10ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD  <||@
  Comment 76 32 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 80 34 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 80 [rcx:0, rdx:0, rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 36 r8|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 94 38 r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0]  <||@
  Comment 94 [rcx:0, rdx:0, rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 94 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 98 40 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD  <||@
  Comment 107 block B1 null  <||@
  Comment 107 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 107 44 NOP  <||@
  Comment 108 46 NOP  <||@
  Comment 109 48 NOP  <||@
  Comment 110 50 NOP  <||@
  Comment 111 52 NOP  <||@
  Comment 112 54 NOP  <||@
  Comment 113 56 NOP  <||@
  Comment 114 58 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3  <||@
  Comment 118 60 r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 123 62 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD  <||@
  Comment 132 block B11 null  <||@
  Comment 132 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 464 NOP  <||@
  Comment 133 466 NOP  <||@
  Comment 134 468 NOP  <||@
  Comment 135 470 NOP  <||@
  Comment 136 472 NOP  <||@
  Comment 137 474 NOP  <||@
  Comment 138 476 NOP  <||@
  Comment 139 478 r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 147 480 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3  <||@
  Comment 151 482 CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD  <||@
  Comment 160 block B12 null  <||@
  Comment 160 484 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 160 486 NOP  <||@
  Comment 161 488 NOP  <||@
  Comment 162 490 NOP  <||@
  Comment 163 492 NOP  <||@
  Comment 164 494 NOP  <||@
  Comment 165 496 NOP  <||@
  Comment 166 498 NOP  <||@
  Comment 167 500 NOP  <||@
  Comment 168 502 NOP  <||@
  Comment 169 504 NOP  <||@
  Comment 170 506 NOP  <||@
  Comment 171 508 NOP  <||@
  Comment 172 510 NOP  <||@
  Comment 173 512 NOP  <||@
  Comment 174 514 NOP  <||@
  Comment 175 516 NOP  <||@
  Comment 176 518 NOP  <||@
  Comment 177 520 NOP  <||@
  Comment 178 522 NOP  <||@
  Comment 179 524 NOP  <||@
  Comment 180 526 NOP  <||@
  Comment 181 528 NOP  <||@
  Comment 182 530 NOP  <||@
  Comment 183 532 NOP  <||@
  Comment 184 534 NOP  <||@
  Comment 185 536 NOP  <||@
  Comment 186 538 NOP  <||@
  Comment 187 540 NOP  <||@
  Comment 188 542 NOP  <||@
  Comment 189 544 NOP  <||@
  Comment 190 546 NOP  <||@
  Comment 191 548 NOP  <||@
  Comment 192 550 NOP  <||@
  Comment 193 552 NOP  <||@
  Comment 194 554 NOP  <||@
  Comment 195 556 NOP  <||@
  Comment 196 558 NOP  <||@
  Comment 197 560 NOP  <||@
  Comment 198 562 NOP  <||@
  Comment 199 564 NOP  <||@
  Comment 200 566 NOP  <||@
  Comment 201 568 NOP  <||@
  Comment 202 570 NOP  <||@
  Comment 203 572 NOP  <||@
  Comment 204 574 NOP  <||@
  Comment 205 576 NOP  <||@
  Comment 206 578 NOP  <||@
  Comment 207 580 NOP  <||@
  Comment 208 582 NOP  <||@
  Comment 209 584 NOP  <||@
  Comment 210 586 NOP  <||@
  Comment 211 588 NOP  <||@
  Comment 212 590 NOP  <||@
  Comment 213 592 NOP  <||@
  Comment 214 594 NOP  <||@
  Comment 215 596 NOP  <||@
  Comment 216 598 NOP  <||@
  Comment 217 600 NOP  <||@
  Comment 218 602 NOP  <||@
  Comment 219 604 NOP  <||@
  Comment 220 606 NOP  <||@
  Comment 221 608 NOP  <||@
  Comment 222 610 AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1  <||@
  Comment 283 612 rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3  <||@
  Comment 290 614 MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 298 616 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3  <||@
  Comment 302 618 AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1  <||@
  Comment 393 620 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 402 POLL_RETURN_FAR  <||@
  Comment 419 block B2 null  <||@
  Comment 419 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 419 66 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 424 68 NOP  <||@
  Comment 425 70 NOP  <||@
  Comment 426 72 NOP  <||@
  Comment 427 74 NOP  <||@
  Comment 428 76 NOP  <||@
  Comment 429 78 NOP  <||@
  Comment 430 80 NOP  <||@
  Comment 431 82 NOP  <||@
  Comment 432 84 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 439 86 r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD  <||@
  Comment 443 88 CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 456 block B4 null  <||@
  Comment 456 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 456 128 NOP  <||@
  Comment 457 130 NOP  <||@
  Comment 458 132 NOP  <||@
  Comment 459 134 NOP  <||@
  Comment 460 136 NOP  <||@
  Comment 461 138 NOP  <||@
  Comment 462 140 NOP  <||@
  Comment 463 142 NOP  <||@
  Comment 464 144 NOP  <||@
  Comment 465 146 NOP  <||@
  Comment 466 148 NOP  <||@
  Comment 467 150 MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD  <||@
  Comment 474 152 AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0  <||@
  Comment 482 154 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 489 156 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed}  <||@
  Comment 489 {meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed}}  <||@
  Comment 497 158 MOV x: [r11|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 505 160 MOV x: [r11|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 513 162 MOV x: [r11|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 521 164 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 521 166 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 526 168 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 531 170 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 531 block B5 null  <||@
  Comment 531 172 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 531 174 NOP  <||@
  Comment 532 176 NOP  <||@
  Comment 533 178 NOP  <||@
  Comment 534 180 NOP  <||@
  Comment 535 182 NOP  <||@
  Comment 536 184 NOP  <||@
  Comment 537 186 NOP  <||@
  Comment 538 188 NOP  <||@
  Comment 539 190 NOP  <||@
  Comment 540 192 NOP  <||@
  Comment 541 194 NOP  <||@
  Comment 542 196 NOP  <||@
  Comment 543 198 NOP  <||@
  Comment 544 200 NOP  <||@
  Comment 545 202 NOP  <||@
  Comment 546 204 NOP  <||@
  Comment 547 206 NOP  <||@
  Comment 548 208 NOP  <||@
  Comment 549 210 NOP  <||@
  Comment 550 212 NOP  <||@
  Comment 551 214 NOP  <||@
  Comment 552 216 NOP  <||@
  Comment 553 218 NOP  <||@
  Comment 554 220 NOP  <||@
  Comment 555 222 NOP  <||@
  Comment 556 224 NOP  <||@
  Comment 557 226 NOP  <||@
  Comment 558 228 NOP  <||@
  Comment 559 230 NOP  <||@
  Comment 560 232 NOP  <||@
  Comment 561 234 NOP  <||@
  Comment 562 236 NOP  <||@
  Comment 563 238 NOP  <||@
  Comment 564 240 NOP  <||@
  Comment 565 242 NOP  <||@
  Comment 566 244 NOP  <||@
  Comment 567 246 NOP  <||@
  Comment 568 248 NOP  <||@
  Comment 569 250 NOP  <||@
  Comment 570 252 NOP  <||@
  Comment 571 254 NOP  <||@
  Comment 572 256 NOP  <||@
  Comment 573 258 NOP  <||@
  Comment 574 260 NOP  <||@
  Comment 575 262 NOP  <||@
  Comment 576 264 NOP  <||@
  Comment 577 266 NOP  <||@
  Comment 578 268 NOP  <||@
  Comment 579 270 NOP  <||@
  Comment 580 272 NOP  <||@
  Comment 581 274 NOP  <||@
  Comment 582 276 NOP  <||@
  Comment 583 278 NOP  <||@
  Comment 584 280 NOP  <||@
  Comment 585 282 NOP  <||@
  Comment 586 284 NOP  <||@
  Comment 587 286 NOP  <||@
  Comment 588 288 NOP  <||@
  Comment 589 290 NOP  <||@
  Comment 590 292 NOP  <||@
  Comment 591 294 NOP  <||@
  Comment 592 296 NOP  <||@
  Comment 593 298 NOP  <||@
  Comment 594 300 NOP  <||@
  Comment 595 302 NOP  <||@
  Comment 596 304 NOP  <||@
  Comment 597 306 NOP  <||@
  Comment 598 308 NOP  <||@
  Comment 599 310 NOP  <||@
  Comment 600 312 NOP  <||@
  Comment 601 314 NOP  <||@
  Comment 602 316 NOP  <||@
  Comment 603 318 NOP  <||@
  Comment 604 320 NOP  <||@
  Comment 605 322 NOP  <||@
  Comment 606 324 NOP  <||@
  Comment 607 326 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 610 328 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 615 330 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91]  <||@
  Comment 615 {HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)>}  <||@
  Comment 615 INVOKESPECIAL  <||@
  Comment 620 [stack:8, stack:16, stack:24]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3  |4  |5               |6 
     locals:  |stack:40|QWORD[.]  |-               |-                  |-  |-  |stack:28|DWORD  |- 
     stack:   |stack:48|QWORD[.]  |stack:28|DWORD  |stack:56|QWORD[.]  |   |   |                |    <||@
  Comment 628 332 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 633 334 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 638 336 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1  <||@
  Comment 696 338 r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 701 340 rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3  <||@
  Comment 708 342 MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 713 344 rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 718 346 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1  <||@
  Comment 800 348 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 805 350 r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 810 352 rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 814 354 MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 818 356 r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 821 358 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 824 360 rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 827 362 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 830 364 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 835 366 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113]  <||@
  Comment 835 {HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)>}  <||@
  Comment 835 INVOKESPECIAL  <||@
  Comment 840 [stack:24]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6              
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |stack:28|DWORD   <||@
  Comment 848 368 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD  <||@
  Comment 856 block B6 null  <||@
  Comment 856 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 856 372 rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 860 374 r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 865 376 NOP  <||@
  Comment 866 378 NOP  <||@
  Comment 867 380 NOP  <||@
  Comment 868 382 NOP  <||@
  Comment 869 384 CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 879 block B7 null  <||@
  Comment 879 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 879 388 NOP  <||@
  Comment 880 390 NOP  <||@
  Comment 881 392 NOP  <||@
  Comment 882 394 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 882 block B9 null  <||@
  Comment 882 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 882 420 NOP  <||@
  Comment 883 422 NOP  <||@
  Comment 884 424 NOP  <||@
  Comment 885 426 NOP  <||@
  Comment 886 428 NOP  <||@
  Comment 887 430 NOP  <||@
  Comment 888 432 NOP  <||@
  Comment 889 434 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 898 POLL_RETURN_FAR  <||@
  Comment 915 block B8 null  <||@
  Comment 915 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 915 398 NOP  <||@
  Comment 916 400 NOP  <||@
  Comment 917 402 NOP  <||@
  Comment 918 404 NOP  <||@
  Comment 919 406 NOP  <||@
  Comment 920 408 NOP  <||@
  Comment 921 410 NOP  <||@
  Comment 922 412 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 925 414 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129]  <||@
  Comment 927 {HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()>}  <||@
  Comment 927 INVOKESPECIAL  <||@
  Comment 932 []at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 940 416 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 942 block B3 null  <||@
  Comment 942 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 942 92 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 945 94 NOP  <||@
  Comment 946 96 NOP  <||@
  Comment 947 98 NOP  <||@
  Comment 948 100 NOP  <||@
  Comment 949 102 NOP  <||@
  Comment 950 104 NOP  <||@
  Comment 951 106 NOP  <||@
  Comment 952 108 NOP  <||@
  Comment 953 110 NOP  <||@
  Comment 954 112 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>}  <||@
  Comment 954 {meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>}}  <||@
  Comment 964 114 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 964 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 969 [rcx:0, rdx:0, r10:0, r11:0, stack:24]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 977 116 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 977 [rax:0, rcx:0, rdx:0, r10:0, r11:0, stack:24]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 977 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 979 118 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 984 120 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 989 122 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 992 124 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 997 block B14 null  <||@
  Comment 997 638 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 997 640 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1000 642 NOP  <||@
  Comment 1001 644 NOP  <||@
  Comment 1002 646 NOP  <||@
  Comment 1003 648 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1010 650 r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5]  <||@
  Comment 1016 652 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 1016 block B15 null  <||@
  Comment 1016 654 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1016 656 NOP  <||@
  Comment 1017 658 NOP  <||@
  Comment 1018 660 NOP  <||@
  Comment 1019 662 NOP  <||@
  Comment 1020 664 NOP  <||@
  Comment 1021 666 NOP  <||@
  Comment 1022 668 NOP  <||@
  Comment 1023 670 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1030 672 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1037 674 DEOPT info [bci:0]  <||@
  Comment 1037 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1042 [rcx:0, rdx:0, r11:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1050 block B10 null  <||@
  Comment 1050 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1050 438 rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1054 440 r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1059 442 NOP  <||@
  Comment 1060 444 NOP  <||@
  Comment 1061 446 NOP  <||@
  Comment 1062 448 NOP  <||@
  Comment 1063 450 NOP  <||@
  Comment 1064 452 NOP  <||@
  Comment 1065 454 NOP  <||@
  Comment 1066 456 MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD  <||@
  Comment 1077 458 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1088 460 DEOPT info [bci:116]  <||@
  Comment 1088 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1093 [r11:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6         
     locals:  |r11|QWORD[.]  |-  |-  |-  |-  |-  |rsi|DWORD 
     stack:   |rax|DWORD     |   |   |   |   |   |            <||@
  Comment 1101 block B13 null  <||@
  Comment 1101 622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1101 624 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1104 626 NOP  <||@
  Comment 1105 628 NOP  <||@
  Comment 1106 630 NOP  <||@
  Comment 1107 632 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1114 634 r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced]  <||@
  Comment 1120 636 JUMP ~outgoingValues: [] destination: B13 -> B15  <||@
  Comment 1127 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1142 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1157 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1182 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1192 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1207 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1232 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1260 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1265 [rcx:0, rdx:0, rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1295 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1300 [rcx:0, rdx:0, rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1330 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1335 [rax:0, rcx:0, rdx:0, r10:0, r11:0, stack:24]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1343 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1343 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1349 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1349 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10724[java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)]"
  method "HotSpotCompilation-10724[java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)]"
  date 1724269768092
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af8cee0 448b560849bc0000002b787f00004d03d44d33e4493bc20f8583817ffe66669089842400c0feff4883ec389041817f20030000000f85280400009090909090909090909090909048896c2430448b5614468b1cd50c000000458bc341ffc84423420c453bd80f867a0300009090909090909049c1e203478b5c82104585db0f841f01000090909090909090468b14dd0c00000049c1e2034c3bd20f85ad030000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000428b14dd1c00000048c1e2034885d20f841d000000498b77284883fe000f84660300004883ee084989772849037738488916488bf148c1ee03428934dd1c00000049c1e303498bf34833f148c1ee160f844b0000004885c90f8442000000498bf348c1ee0948ba00e0368d787f00004803f2803e027429f083042400803e00741fc60600498b57484885d20f84070300004883ea084989574849035758488932488b6c24304883c438493ba7500400000f87f1020000c5f877c3488974241890909090909090904d8b9fb80100004d8d4b204d3b8fc80100000f87e601000090909090909090909090904d898fb8010000410f18832001000049c7030100000041c743086088260041c7430c0000000049c743100000000049c74318000000004c89542410448944242490909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090498bf34c895c2408e834827ffe0f1f84003c040002448b4424244c8b54241041807f40000f842f000000438b54821048c1e2034885d20f841d000000498b77284883fe000f84fb0100004883ee0849897728490377384889164c8b5c2408498bf348c1ee0343897482104b8d748210488bd64933d348c1ea160f8442000000488bd648c1ea0948b900e0368d787f00004803d1803a027429f083042400803a00741fc60200498b4f484885c90f84a20100004883e90849894f4849034f58488911be010000004c8b5424184103720c4189720c448bde498bf2418bd0418bcb44895c2424e858817ffe0f1f84001805000385c00f85c20000008b7424244c8b5c241890909090413b73100f8d2400000090909090909090909090488b6c24304883c438493ba7500400000f8733010000c5f877c390909090909090498bf36690e8fc807ffe0f1f840074050004ebc44c8bde90909090909090909048be6088262b787f0000e8d7af94fe0f1f84000000000085004c8954241044894424244c8bd8e92efeffff4c8bde90909049c7c00000000041bae59effff90909090909090458997840400004d898790040000e888de7ffe0f1f8400000000008b7424244c8b5c24189090909090909041c78784040000ed60ffff49c7879004000094020000e855de7ffe0f1f8400000000004c8bde90909049c7c01400000041baed5cffffeb9648896c2430e8d4de7dfee9c9fbfffff448891424e8a5ae93fee99bfcfffff448893424e816d093fee9fafcfffff4488d0dfbfcffff49898f68040000e97dec7ffef448891424e873ae93fee906fefffff448891424e8e4cf93fee95ffefffff4488d0db9feffff49898f68040000e94bec7ffef441c78784040000f5a9ffff49c7879004000000000000e8a9dd7ffe0f1f84000000000041c78784040000f5a4ffff49c7879004000000000000e886dd7ffe0f1f84000000000041c787840400008f10ffff49c7879004000000000000e863dd7ffe0f1f840000000000e8dc7e93fef4e8f6da7ffef4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1143ff74 slotKind: QWORD  <||@
  Comment 76 32 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 80 34 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 80 [rcx:0, rdx:0, rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 36 r8|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 94 38 r8|DWORD = AND (x: r8|DWORD, ~y: [rdx|QWORD[.] + 12]) size: DWORD state [bci:0]  <||@
  Comment 94 [rcx:0, rdx:0, rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 94 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 98 40 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B14 size: DWORD  <||@
  Comment 107 block B1 null  <||@
  Comment 107 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 107 44 NOP  <||@
  Comment 108 46 NOP  <||@
  Comment 109 48 NOP  <||@
  Comment 110 50 NOP  <||@
  Comment 111 52 NOP  <||@
  Comment 112 54 NOP  <||@
  Comment 113 56 NOP  <||@
  Comment 114 58 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3  <||@
  Comment 118 60 r11|DWORD[_] = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 123 62 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 2.5677530163965295E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B11 size: DWORD  <||@
  Comment 132 block B11 null  <||@
  Comment 132 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 464 NOP  <||@
  Comment 133 466 NOP  <||@
  Comment 134 468 NOP  <||@
  Comment 135 470 NOP  <||@
  Comment 136 472 NOP  <||@
  Comment 137 474 NOP  <||@
  Comment 138 476 NOP  <||@
  Comment 139 478 r10|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 147 480 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3  <||@
  Comment 151 482 CMPBRANCH (x: r10|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD  <||@
  Comment 160 block B12 null  <||@
  Comment 160 484 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 160 486 NOP  <||@
  Comment 161 488 NOP  <||@
  Comment 162 490 NOP  <||@
  Comment 163 492 NOP  <||@
  Comment 164 494 NOP  <||@
  Comment 165 496 NOP  <||@
  Comment 166 498 NOP  <||@
  Comment 167 500 NOP  <||@
  Comment 168 502 NOP  <||@
  Comment 169 504 NOP  <||@
  Comment 170 506 NOP  <||@
  Comment 171 508 NOP  <||@
  Comment 172 510 NOP  <||@
  Comment 173 512 NOP  <||@
  Comment 174 514 NOP  <||@
  Comment 175 516 NOP  <||@
  Comment 176 518 NOP  <||@
  Comment 177 520 NOP  <||@
  Comment 178 522 NOP  <||@
  Comment 179 524 NOP  <||@
  Comment 180 526 NOP  <||@
  Comment 181 528 NOP  <||@
  Comment 182 530 NOP  <||@
  Comment 183 532 NOP  <||@
  Comment 184 534 NOP  <||@
  Comment 185 536 NOP  <||@
  Comment 186 538 NOP  <||@
  Comment 187 540 NOP  <||@
  Comment 188 542 NOP  <||@
  Comment 189 544 NOP  <||@
  Comment 190 546 NOP  <||@
  Comment 191 548 NOP  <||@
  Comment 192 550 NOP  <||@
  Comment 193 552 NOP  <||@
  Comment 194 554 NOP  <||@
  Comment 195 556 NOP  <||@
  Comment 196 558 NOP  <||@
  Comment 197 560 NOP  <||@
  Comment 198 562 NOP  <||@
  Comment 199 564 NOP  <||@
  Comment 200 566 NOP  <||@
  Comment 201 568 NOP  <||@
  Comment 202 570 NOP  <||@
  Comment 203 572 NOP  <||@
  Comment 204 574 NOP  <||@
  Comment 205 576 NOP  <||@
  Comment 206 578 NOP  <||@
  Comment 207 580 NOP  <||@
  Comment 208 582 NOP  <||@
  Comment 209 584 NOP  <||@
  Comment 210 586 NOP  <||@
  Comment 211 588 NOP  <||@
  Comment 212 590 NOP  <||@
  Comment 213 592 NOP  <||@
  Comment 214 594 NOP  <||@
  Comment 215 596 NOP  <||@
  Comment 216 598 NOP  <||@
  Comment 217 600 NOP  <||@
  Comment 218 602 NOP  <||@
  Comment 219 604 NOP  <||@
  Comment 220 606 NOP  <||@
  Comment 221 608 NOP  <||@
  Comment 222 610 AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 28], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1  <||@
  Comment 283 612 rsi|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3  <||@
  Comment 290 614 MOV (x: [r11|DWORD[_] * 8 + 28], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 298 616 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3  <||@
  Comment 302 618 AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1  <||@
  Comment 393 620 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 402 POLL_RETURN_FAR  <||@
  Comment 419 block B2 null  <||@
  Comment 419 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 419 66 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 424 68 NOP  <||@
  Comment 425 70 NOP  <||@
  Comment 426 72 NOP  <||@
  Comment 427 74 NOP  <||@
  Comment 428 76 NOP  <||@
  Comment 429 78 NOP  <||@
  Comment 430 80 NOP  <||@
  Comment 431 82 NOP  <||@
  Comment 432 84 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 439 86 r9|QWORD = LEA address: [r11|QWORD + 32] size: QWORD  <||@
  Comment 443 88 CMPBRANCH (x: r9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 456 block B4 null  <||@
  Comment 456 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 456 128 NOP  <||@
  Comment 457 130 NOP  <||@
  Comment 458 132 NOP  <||@
  Comment 459 134 NOP  <||@
  Comment 460 136 NOP  <||@
  Comment 461 138 NOP  <||@
  Comment 462 140 NOP  <||@
  Comment 463 142 NOP  <||@
  Comment 464 144 NOP  <||@
  Comment 465 146 NOP  <||@
  Comment 466 148 NOP  <||@
  Comment 467 150 MOV (x: [r15|QWORD + 440], y: r9|QWORD) size: QWORD  <||@
  Comment 474 152 AMD64PREFETCH ~address: [r11|QWORD + 288] instr: 0  <||@
  Comment 482 154 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 489 156 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed}  <||@
  Comment 489 {meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>;compressed}}  <||@
  Comment 497 158 MOV x: [r11|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 505 160 MOV x: [r11|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 513 162 MOV x: [r11|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 521 164 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 521 166 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 526 168 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 531 170 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 531 block B5 null  <||@
  Comment 531 172 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 531 174 NOP  <||@
  Comment 532 176 NOP  <||@
  Comment 533 178 NOP  <||@
  Comment 534 180 NOP  <||@
  Comment 535 182 NOP  <||@
  Comment 536 184 NOP  <||@
  Comment 537 186 NOP  <||@
  Comment 538 188 NOP  <||@
  Comment 539 190 NOP  <||@
  Comment 540 192 NOP  <||@
  Comment 541 194 NOP  <||@
  Comment 542 196 NOP  <||@
  Comment 543 198 NOP  <||@
  Comment 544 200 NOP  <||@
  Comment 545 202 NOP  <||@
  Comment 546 204 NOP  <||@
  Comment 547 206 NOP  <||@
  Comment 548 208 NOP  <||@
  Comment 549 210 NOP  <||@
  Comment 550 212 NOP  <||@
  Comment 551 214 NOP  <||@
  Comment 552 216 NOP  <||@
  Comment 553 218 NOP  <||@
  Comment 554 220 NOP  <||@
  Comment 555 222 NOP  <||@
  Comment 556 224 NOP  <||@
  Comment 557 226 NOP  <||@
  Comment 558 228 NOP  <||@
  Comment 559 230 NOP  <||@
  Comment 560 232 NOP  <||@
  Comment 561 234 NOP  <||@
  Comment 562 236 NOP  <||@
  Comment 563 238 NOP  <||@
  Comment 564 240 NOP  <||@
  Comment 565 242 NOP  <||@
  Comment 566 244 NOP  <||@
  Comment 567 246 NOP  <||@
  Comment 568 248 NOP  <||@
  Comment 569 250 NOP  <||@
  Comment 570 252 NOP  <||@
  Comment 571 254 NOP  <||@
  Comment 572 256 NOP  <||@
  Comment 573 258 NOP  <||@
  Comment 574 260 NOP  <||@
  Comment 575 262 NOP  <||@
  Comment 576 264 NOP  <||@
  Comment 577 266 NOP  <||@
  Comment 578 268 NOP  <||@
  Comment 579 270 NOP  <||@
  Comment 580 272 NOP  <||@
  Comment 581 274 NOP  <||@
  Comment 582 276 NOP  <||@
  Comment 583 278 NOP  <||@
  Comment 584 280 NOP  <||@
  Comment 585 282 NOP  <||@
  Comment 586 284 NOP  <||@
  Comment 587 286 NOP  <||@
  Comment 588 288 NOP  <||@
  Comment 589 290 NOP  <||@
  Comment 590 292 NOP  <||@
  Comment 591 294 NOP  <||@
  Comment 592 296 NOP  <||@
  Comment 593 298 NOP  <||@
  Comment 594 300 NOP  <||@
  Comment 595 302 NOP  <||@
  Comment 596 304 NOP  <||@
  Comment 597 306 NOP  <||@
  Comment 598 308 NOP  <||@
  Comment 599 310 NOP  <||@
  Comment 600 312 NOP  <||@
  Comment 601 314 NOP  <||@
  Comment 602 316 NOP  <||@
  Comment 603 318 NOP  <||@
  Comment 604 320 NOP  <||@
  Comment 605 322 NOP  <||@
  Comment 606 324 NOP  <||@
  Comment 607 326 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 610 328 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 615 330 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:91]  <||@
  Comment 615 {HotSpotMethod<ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)>}  <||@
  Comment 615 INVOKESPECIAL  <||@
  Comment 620 [stack:8, stack:16, stack:24]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:563) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3  |4  |5               |6 
     locals:  |stack:40|QWORD[.]  |-               |-                  |-  |-  |stack:28|DWORD  |- 
     stack:   |stack:48|QWORD[.]  |stack:28|DWORD  |stack:56|QWORD[.]  |   |   |                |    <||@
  Comment 628 332 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 633 334 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 638 336 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r8|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1  <||@
  Comment 696 338 r11|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 701 340 rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@8cf9d9c encoding: base: 0 shift: 3  <||@
  Comment 708 342 MOV (x: [r10|QWORD[.] + r8|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 713 344 rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 718 346 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2e7ec5b1  <||@
  Comment 800 348 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 805 350 r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 810 352 rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 814 354 MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 818 356 r11|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 821 358 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 824 360 rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 827 362 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 830 364 stack:28|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 835 366 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:113]  <||@
  Comment 835 {HotSpotMethod<ThreadLocal$ThreadLocalMap.cleanSomeSlots(int, int)>}  <||@
  Comment 835 INVOKESPECIAL  <||@
  Comment 840 [stack:24]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 113, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6              
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |stack:28|DWORD   <||@
  Comment 848 368 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD  <||@
  Comment 856 block B6 null  <||@
  Comment 856 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 856 372 rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 860 374 r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 865 376 NOP  <||@
  Comment 866 378 NOP  <||@
  Comment 867 380 NOP  <||@
  Comment 868 382 NOP  <||@
  Comment 869 384 CMPBRANCH (x: rsi|DWORD, y: [r11|QWORD[.] + 16]) trueDestinationProbability: 0.8888888888888888 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 879 block B7 null  <||@
  Comment 879 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 879 388 NOP  <||@
  Comment 880 390 NOP  <||@
  Comment 881 392 NOP  <||@
  Comment 882 394 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 882 block B9 null  <||@
  Comment 882 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 882 420 NOP  <||@
  Comment 883 422 NOP  <||@
  Comment 884 424 NOP  <||@
  Comment 885 426 NOP  <||@
  Comment 886 428 NOP  <||@
  Comment 887 430 NOP  <||@
  Comment 888 432 NOP  <||@
  Comment 889 434 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 898 POLL_RETURN_FAR  <||@
  Comment 915 block B8 null  <||@
  Comment 915 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 915 398 NOP  <||@
  Comment 916 400 NOP  <||@
  Comment 917 402 NOP  <||@
  Comment 918 404 NOP  <||@
  Comment 919 406 NOP  <||@
  Comment 920 408 NOP  <||@
  Comment 921 410 NOP  <||@
  Comment 922 412 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 925 414 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:129]  <||@
  Comment 927 {HotSpotMethod<ThreadLocal$ThreadLocalMap.rehash()>}  <||@
  Comment 927 INVOKESPECIAL  <||@
  Comment 932 []at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:566) [bci: 129, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 940 416 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 942 block B3 null  <||@
  Comment 942 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 942 92 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 945 94 NOP  <||@
  Comment 946 96 NOP  <||@
  Comment 947 98 NOP  <||@
  Comment 948 100 NOP  <||@
  Comment 949 102 NOP  <||@
  Comment 950 104 NOP  <||@
  Comment 951 106 NOP  <||@
  Comment 952 108 NOP  <||@
  Comment 953 110 NOP  <||@
  Comment 954 112 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>}  <||@
  Comment 954 {meta{HotSpotType<Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;, resolved>}}  <||@
  Comment 964 114 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 964 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 969 [rcx:0, rdx:0, r10:0, r11:0, stack:24]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 977 116 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 977 [rax:0, rcx:0, rdx:0, r10:0, r11:0, stack:24]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 977 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 979 118 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 984 120 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 989 122 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 992 124 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 997 block B14 null  <||@
  Comment 997 638 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 997 640 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1000 642 NOP  <||@
  Comment 1001 644 NOP  <||@
  Comment 1002 646 NOP  <||@
  Comment 1003 648 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1010 650 r10|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5]  <||@
  Comment 1016 652 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 1016 block B15 null  <||@
  Comment 1016 654 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1016 656 NOP  <||@
  Comment 1017 658 NOP  <||@
  Comment 1018 660 NOP  <||@
  Comment 1019 662 NOP  <||@
  Comment 1020 664 NOP  <||@
  Comment 1021 666 NOP  <||@
  Comment 1022 668 NOP  <||@
  Comment 1023 670 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1030 672 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1037 674 DEOPT info [bci:0]  <||@
  Comment 1037 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1042 [rcx:0, rdx:0, r11:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1050 block B10 null  <||@
  Comment 1050 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1050 438 rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1054 440 r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1059 442 NOP  <||@
  Comment 1060 444 NOP  <||@
  Comment 1061 446 NOP  <||@
  Comment 1062 448 NOP  <||@
  Comment 1063 450 NOP  <||@
  Comment 1064 452 NOP  <||@
  Comment 1065 454 NOP  <||@
  Comment 1066 456 MOV x: [r15|QWORD + 1156] y: -40723 size: DWORD  <||@
  Comment 1077 458 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1088 460 DEOPT info [bci:116]  <||@
  Comment 1088 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1093 [r11:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:565) [bci: 116, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6         
     locals:  |r11|QWORD[.]  |-  |-  |-  |-  |-  |rsi|DWORD 
     stack:   |rax|DWORD     |   |   |   |   |   |            <||@
  Comment 1101 block B13 null  <||@
  Comment 1101 622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1101 624 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1104 626 NOP  <||@
  Comment 1105 628 NOP  <||@
  Comment 1106 630 NOP  <||@
  Comment 1107 632 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1114 634 r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced]  <||@
  Comment 1120 636 JUMP ~outgoingValues: [] destination: B13 -> B15  <||@
  Comment 1127 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1142 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1157 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1182 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1192 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1207 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1232 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1260 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1265 [rcx:0, rdx:0, rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1295 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1300 [rcx:0, rdx:0, rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1330 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1335 [rax:0, rcx:0, rdx:0, r10:0, r11:0, stack:24]at java.lang.ThreadLocal$ThreadLocalMap.set(ThreadLocal.java:545) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6 
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1343 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1343 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1349 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1349 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
