begin_compilation
  name " HotSpotCompilation-4959[java.lang.System$2.encodeASCII(char[], int, byte[], int, int)]"
  method "HotSpotCompilation-4959[java.lang.System$2.encodeASCII(char[], int, byte[], int, int)]"
  date 1724269747357
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j24 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j24  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j24 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: j26 
=== Usages ===
j25 
=== Predecessor ===
v0 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: j26  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j26 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64
=== Inputs ===
object: a4 
=== Succesors ===
next: i17 
=== Usages ===
j27 
=== Predecessor ===
j24 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a4 #next: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j8 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j10 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64 [-4294967296 - 4294967294] bits:x...x0
=== Inputs ===
x: j8 
y: i9 
=== Succesors ===
=== Usages ===
j20 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j8 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j20 j21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64 [-4294967280 - 4294967310] bits:x...x0
=== Inputs ===
x: j10 
y: j11 
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j10 y: j11  <|@  <|@
f <@~|@floating>@ <|@
tid j25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64
=== Inputs ===
x: j20 
y: j24 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j20 y: j24  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j14 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i5 
=== Succesors ===
=== Usages ===
j21 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i5  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64 [-2147483632 - 2147483663]
=== Inputs ===
x: j14 
y: j11 
=== Succesors ===
=== Usages ===
j27 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j14 y: j11  <|@  <|@
f <@~|@floating>@ <|@
tid j27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64
=== Inputs ===
x: j21 
y: j26 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j21 y: j26  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
charset: ASCII
locationIdentity: Array: char
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j25 
dst: j27 
len: i6 
=== Succesors ===
next: v19 
=== Usages ===
v19 
=== Predecessor ===
j26 >@ <|@
instruction <@EncodeArray|@jdk.graal.compiler.replacements.nodes.EncodeArrayNode>@ stateAfter: - lastLocationAccess: - src: j25 dst: j27 len: i6 #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stamp: void
=== Inputs ===
memoryMap: - 
result: i17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i17 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i17  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j24 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j24  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j24 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j24 <|@
result v5|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: j26 
=== Usages ===
j25 
=== Predecessor ===
v0 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: j26  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j26 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j26 <|@
result v6|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64
=== Inputs ===
object: a4 
=== Succesors ===
next: i17 
=== Usages ===
j27 
=== Predecessor ===
j24 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a4 #next: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j8 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j10 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j10 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64 [-4294967296 - 4294967294] bits:x...x0
=== Inputs ===
x: j8 
y: i9 
=== Succesors ===
=== Usages ===
j20 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j8 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j11 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j20 j21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64 [-4294967280 - 4294967310] bits:x...x0
=== Inputs ===
x: j10 
y: j11 
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j10 y: j11  <|@  <|@
f <@~|@floating>@ <|@
tid j25 <|@
result v10|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64
=== Inputs ===
x: j20 
y: j24 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j20 y: j24  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j14 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i5 
=== Succesors ===
=== Usages ===
j21 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i5  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64 [-2147483632 - 2147483663]
=== Inputs ===
x: j14 
y: j11 
=== Succesors ===
=== Usages ===
j27 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j14 y: j11  <|@  <|@
f <@~|@floating>@ <|@
tid j27 <|@
result v13|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
stamp: i64
=== Inputs ===
x: j21 
y: j26 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j21 y: j26  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i17 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
charset: ASCII
locationIdentity: Array: char
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j25 
dst: j27 
len: i6 
=== Succesors ===
next: v19 
=== Usages ===
v19 
=== Predecessor ===
j26 >@ <|@
instruction <@EncodeArray|@jdk.graal.compiler.replacements.nodes.EncodeArrayNode>@ stateAfter: - lastLocationAccess: - src: j25 dst: j27 len: i6 #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stamp: void
=== Inputs ===
memoryMap: - 
result: i17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i17 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   74  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   74  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v14|d [0, 1[[108, 110[[112, 114[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 76[[106, 108[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v13|q [0, 74[[104, 108[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 70[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 1[[102, 108[ "NoOptimization"
  rdi|d fixed "[rdi|d]" rdi|d -1 [0, 82[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 78[[108, 109[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 80[[108, 109[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rdx|q [74, 84[74 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rcx|d [76, 88[76 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q r8|- [78, 86[78 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r9|- [80, 96[80 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d rdi|d [82, 106[82 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v0|q [84, 94[84 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v2|q [86, 100[86 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [88, 90[88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v7|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v9|q [94, 102[94 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|q [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d rax|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q rbp|q [70, 114[70 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v14|d [0, 1[[108, 110[[112, 114[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 76[[106, 108[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v13|q [0, 74[[104, 108[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 70[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 1[[102, 108[ "NoOptimization"
  rdi|d fixed "[rdi|d]" rdi|d -1 [0, 82[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 78[[108, 109[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 80[[108, 109[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [74, 84[74 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d rcx|d [76, 88[76 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[r8|q]" v2|q r8|- [78, 86[78 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d r9|- [80, 96[80 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdi|d]" v4|d rdi|d [82, 106[82 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdx|q]" v5|q v0|q [84, 94[84 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v2|q [86, 100[86 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [88, 90[88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v7|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v9|q [94, 102[94 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|q [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q rbp|q [70, 114[70 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   74  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v14|d [0, 1[[108, 110[[112, 114[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 76[[106, 108[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v13|q [0, 74[[104, 108[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 70[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 1[[102, 108[ "NoOptimization"
  rdi|d fixed "[rdi|d]" rdi|d -1 [0, 82[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 78[[108, 109[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 80[[108, 109[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [74, 84[74 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d rcx|d [76, 88[76 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[r8|q]" v2|q r8|- [78, 86[78 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d r9|- [80, 96[80 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdi|d]" v4|d rdi|d [82, 106[82 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdx|q]" v5|q v0|q [84, 94[84 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v2|q [86, 100[86 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [88, 90[88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v7|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v9|q [94, 102[94 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|q [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q rbp|q [70, 114[70 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   74  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v14|d [0, 1[[108, 110[[112, 114[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 76[[106, 108[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v13|q [0, 74[[104, 108[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 70[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 1[[102, 108[ "NoOptimization"
  rdi|d fixed "[rdi|d]" rdi|d -1 [0, 82[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 78[[108, 109[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 80[[108, 109[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[108, 109[ "NoDefinitionFound"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [74, 84[74 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d rcx|d [76, 88[76 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[r8|q]" v2|q r8|- [78, 86[78 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d r9|- [80, 96[80 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdi|d]" v4|d rdi|d [82, 106[82 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdx|q]" v5|q v0|q [84, 94[84 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v2|q [86, 100[86 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [88, 90[88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v7|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v9|q [94, 102[94 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|q [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q rbp|q [70, 114[70 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   74  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   74  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction v3|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v4|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v5|QWORD[*] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v7|QWORD = MOVSXD value: v1|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v8|QWORD = SHL value: v7|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction v10|QWORD[*] = ADD (x: v9|QWORD, y: v5|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v11|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction v12|QWORD = LEA address: [v11|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction v13|QWORD[*] = ADD (x: v12|QWORD, y: v6|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = SHL value: rsi|QWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: aload_3       
     3: iload         4
     5: iload         5
     7: invokestatic  #50         // java.lang.StringCoding.implEncodeAsciiArray:(char[], int, byte[], int, int)int
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f8555000000909090909090909090909090909090909090909090909090909090909090909090904863f148d1e6488d76104803f24963d1488d52104903d08bcfe8000000004883c418493ba7500400000f8711000000c5f877c348896c2410e800000000eb9ff4488d0ddbffffff49898f68040000e951fffffff4e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 NOP  <||@
  Comment 87 60 NOP  <||@
  Comment 88 62 NOP  <||@
  Comment 89 64 NOP  <||@
  Comment 90 66 NOP  <||@
  Comment 91 68 NOP  <||@
  Comment 92 72 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD  <||@
  Comment 92 84 rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 92 86 r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 92 88 rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 95 90 rsi|QWORD = SHL value: rsi|QWORD size: QWORD  <||@
  Comment 98 92 rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 102 94 rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 105 96 rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 108 98 rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD  <||@
  Comment 112 100 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD  <||@
  Comment 115 102 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 115 104 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 115 106 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 117 108 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL  <||@
  Comment 117 {Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 122 114 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 126 POLL_RETURN_FAR  <||@
  Comment 148 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 170 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 176 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 176 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 182 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 182 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4959[java.lang.System$2.encodeASCII(char[], int, byte[], int, int)]"
  method "HotSpotCompilation-4959[java.lang.System$2.encodeASCII(char[], int, byte[], int, int)]"
  date 1724269747395
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ae7fc00 448b560849bc0000002b787f00004d03d44d33e4493bc20f85635490fe66669089842400c0feff4883ec189041817f20000000000f8555000000909090909090909090909090909090909090909090909090909090909090909090904863f148d1e6488d76104803f24963d1488d52104903d08bcfe886b9a5fe4883c418493ba7500400000f8711000000c5f877c348896c2410e887b58efeeb9ff4488d0ddbffffff49898f68040000e951c390fef4e84b56a4fef4e865b290fef4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 NOP  <||@
  Comment 87 60 NOP  <||@
  Comment 88 62 NOP  <||@
  Comment 89 64 NOP  <||@
  Comment 90 66 NOP  <||@
  Comment 91 68 NOP  <||@
  Comment 92 72 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@9d65e48 slotKind: QWORD  <||@
  Comment 92 84 rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 92 86 r8|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 92 88 rsi|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 95 90 rsi|QWORD = SHL value: rsi|QWORD size: QWORD  <||@
  Comment 98 92 rsi|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 102 94 rsi|QWORD[*] = ADD (x: rsi|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 105 96 rdx|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 108 98 rdx|QWORD = LEA address: [rdx|QWORD + 16] size: QWORD  <||@
  Comment 112 100 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r8|QWORD[*]) size: QWORD  <||@
  Comment 115 102 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 115 104 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 115 106 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 117 108 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL  <||@
  Comment 117 {Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 122 114 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 126 POLL_RETURN_FAR  <||@
  Comment 148 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 170 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 176 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 176 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 182 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 182 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
