begin_compilation
  name " HotSpotCompilation-5817[java.lang.AbstractStringBuilder.append(CharSequence)]"
  method "HotSpotCompilation-5817[java.lang.AbstractStringBuilder.append(CharSequence)]"
  date 1724269727232
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v914  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.lang.AbstractStringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v725 v728 v969 ?257 ?108 v17 v957 v960 ?208 ?256 v389 v958 ?653 ?652 ?652 v454 v31 ?79 v967 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v968 v970 v963 v956 ?208 ?108 v954 ?79 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 622
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v662 v951 v953 a762 a843 v914 i917 i931 i919 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-143635|0xfffffffffffdceed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v970 
lastLocationAccess: - 
=== Succesors ===
next: v915 
=== Usages ===
v949 v947 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v970 lastLocationAccess: - #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
lastLocationAccess: - 
=== Succesors ===
next: v10 
=== Usages ===
v912 
=== Predecessor ===
v914 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v969 lastLocationAccess: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 v947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v915 
y: v911 
=== Succesors ===
=== Usages ===
v548 v524 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v915 y: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v914 
y: v948 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v914 y: v948  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 v316 v421 v361 v232 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j692 v871 j661 j661 j661 v712 j692 j692 j692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 v130 i251 j243 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i922 i927 i934 i939 i935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i921 v388 i929 i933 i941 v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i920 i928 i940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a918 v338 a925 v723 v725 a930 v459 v726 v728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a916 a923 a936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 0.6368791901525137
stamp: void
=== Inputs ===
condition: v949 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v949 #trueSuccessor: v9 #falseSuccessor: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v521 #falseSuccessor: v523  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a916 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a916 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
lastLocationAccess: - 
=== Succesors ===
next: i917 
=== Usages ===
v955 
=== Predecessor ===
v521 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 lastLocationAccess: - #next: i917  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a916 
=== Succesors ===
=== Usages ===
i917 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i917 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-70411|0xfffffffffffeecf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v955 
lastLocationAccess: - 
=== Succesors ===
next: a918 
=== Usages ===
i123 
=== Predecessor ===
a916 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v955 lastLocationAccess: - #next: a918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a918 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
lastLocationAccess: - 
=== Succesors ===
next: i919 
=== Usages ===
a287 v959 
=== Predecessor ===
i917 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 lastLocationAccess: - #next: i919  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a918 
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i919 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-73995|0xfffffffffffedef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v959 
lastLocationAccess: - 
=== Succesors ===
next: i920 
=== Usages ===
i128 i147 i150 i156 v165 v182 i183 v791 j809 v473 a762 
=== Predecessor ===
a918 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v959 lastLocationAccess: - #next: i920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i920 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
lastLocationAccess: - 
=== Succesors ===
next: i921 
=== Usages ===
i282 v466 
=== Predecessor ===
i919 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v956 lastLocationAccess: - #next: i921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i921 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
=== Succesors ===
next: i922 
=== Usages ===
i113 ?208 i216 j946 v232 i237 
=== Predecessor ===
i920 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - #next: i922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i922 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
lastLocationAccess: - 
=== Succesors ===
next: v133 
=== Usages ===
i295 v466 
=== Predecessor ===
i921 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 lastLocationAccess: - #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i920 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i920  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i917 
y: i282 
=== Succesors ===
=== Usages ===
i113 i116 ?256 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i917 y: i282  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i123 
y: i921 
=== Succesors ===
=== Usages ===
i129 i146 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i123 y: i921  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i922 
=== Succesors ===
=== Usages ===
i128 i146 i149 i155 i135 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i922  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i919 
y: i295 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i919 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i113 
y: i128 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i113 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i60 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i129 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j899 j252 j830 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
i922 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v132 #falseSuccessor: v131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i113 
y: i295 
=== Succesors ===
=== Usages ===
i147 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i113 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i146 
y: i919 
=== Succesors ===
=== Usages ===
v162 i163 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i146 y: i919  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i148 
y: i295 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i148 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i149 
y: i919 
=== Succesors ===
=== Usages ===
v162 i163 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i149 y: i919  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i147 
y: i150 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i147 y: i150  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
condition: v162 
trueValue: i150 
falseValue: i147 
=== Succesors ===
=== Usages ===
i156 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v162 trueValue: i150 falseValue: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i163 
y: i919 
=== Succesors ===
=== Usages ===
i648 i155 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i163 y: i919  <|@  <|@
f <@~|@floating>@ <|@
tid i647 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i156 
y: i647 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i156 y: i647  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i648 
y: i649 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i648 y: i649  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v650 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v650 #trueSuccessor: v599 #falseSuccessor: v600  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i156 
y: i295 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i156 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i155 
y: i295 
=== Succesors ===
=== Usages ===
v165 v870 v182 i183 v474 j814 a843 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i155 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i919 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i135 y: i919  <|@  <|@
f <@~|@floating>@ <|@
tid a287 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a918 
=== Succesors ===
=== Usages ===
j803 j883 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a918  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 v869 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 v866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a762 a843 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j771 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j772 j850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j750 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j751 j815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: PROFILED designatedSuccessorProbability: 3.433727982038448E-5
stamp: void
=== Inputs ===
condition: v165 
=== Succesors ===
trueSuccessor: v167 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v165 #trueSuccessor: v167 #falseSuccessor: v166  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j746 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j746 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j784 
=== Usages ===
v971 v972 
=== Predecessor ===
v801 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j784  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j746 
index: - 
=== Succesors ===
=== Usages ===
j784 v786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j746 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j784 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v971 
lastLocationAccess: - 
=== Succesors ===
next: j785 
=== Usages ===
j752 v973 v974 a761 v978 v975 v976 v977 
=== Predecessor ===
j746 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v971 lastLocationAccess: - #next: j785  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j746 
index: - 
=== Succesors ===
=== Usages ===
j785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j746 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j785 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
lastLocationAccess: - 
=== Succesors ===
next: v756 
=== Usages ===
v753 
=== Predecessor ===
j784 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v972 lastLocationAccess: - #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i919 
=== Succesors ===
=== Usages ===
v810 j772 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i919  <|@  <|@
f <@~|@floating>@ <|@
tid j772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j809 
y: j771 
=== Succesors ===
=== Usages ===
j751 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j809 y: j771  <|@  <|@
f <@~|@floating>@ <|@
tid j751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j772 
y: j750 
=== Succesors ===
=== Usages ===
j752 v975 v976 v977 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j772 y: j750  <|@  <|@
f <@~|@floating>@ <|@
tid j752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
x: j751 
y: j784 
=== Succesors ===
=== Usages ===
v753 v786 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j751 y: j784  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j785 
y: j752 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j785 y: j752  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v753 
=== Succesors ===
trueSuccessor: v755 
falseSuccessor: v754 
=== Usages ===
=== Predecessor ===
j785 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v753 #trueSuccessor: v755 #falseSuccessor: v754  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a762 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a762 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v745 i919 
=== Succesors ===
next: v951 
=== Usages ===
v951 a782 
=== Predecessor ===
v755 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v745 i919 #next: v951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-204145|0xfffffffffffce28f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a762 
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
a762 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a762 #next: v766  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
v951 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v971 
lastLocationAccess: - 
value: j752 
stateAfter: - 
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v971 lastLocationAccess: - value: j752 stateAfter: - #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j751 
index: j784 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j751 index: j784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v975 
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v975 #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j751 
index: j784 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j751 index: j784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v976 
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v976 #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j751 
index: j784 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j751 index: j784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v977 
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v977 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
lastLocationAccess: - 
value: j757 
stateAfter: - 
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v973 lastLocationAccess: - value: j757 stateAfter: - #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
lastLocationAccess: - 
value: v913 
stateAfter: - 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 lastLocationAccess: - value: v913 stateAfter: - #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
lastLocationAccess: - 
value: i919 
stateAfter: - 
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 lastLocationAccess: - value: i919 stateAfter: - #next: v760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a761 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j784 
=== Succesors ===
next: v764 
=== Usages ===
a782 
=== Predecessor ===
v760 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j784 #next: v764  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
a761 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v765 
values: a761 a762 
=== Succesors ===
=== Usages ===
j807 a303 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v765 values: a761 a762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v764 v766 
=== Succesors ===
next: j803 
=== Usages ===
a782 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v764 v766 #next: j803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a287 
=== Succesors ===
next: j807 
=== Usages ===
v979 
=== Predecessor ===
v765 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a287 #next: j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a782 
=== Succesors ===
next: v810 
=== Usages ===
v980 
=== Predecessor ===
j803 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a782 #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j803 
index: - 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j803 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j807 
index: - 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v979 v980 j809 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
j807 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v979 v980 j809 #next: v302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a303 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a!# byte[]
=== Inputs ===
object: a782 
=== Succesors ===
next: v187 
=== Usages ===
a188 
=== Predecessor ===
v302 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a782 #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
a303 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 14]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j811 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j811 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j863 
=== Usages ===
v981 v982 
=== Predecessor ===
v881 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j863  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j811 
index: - 
=== Succesors ===
=== Usages ===
j863 v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j863 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
lastLocationAccess: - 
=== Succesors ===
next: j864 
=== Usages ===
j816 v983 v984 v985 a842 v986 v990 v987 v988 v989 
=== Predecessor ===
j811 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v981 lastLocationAccess: - #next: j864  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j811 
index: - 
=== Succesors ===
=== Usages ===
j864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j864 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
lastLocationAccess: - 
=== Succesors ===
next: v820 
=== Usages ===
v817 
=== Predecessor ===
j863 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v982 lastLocationAccess: - #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i135 
=== Succesors ===
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i135  <|@  <|@
f <@~|@floating>@ <|@
tid j850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j814 
y: j771 
=== Succesors ===
=== Usages ===
j815 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j814 y: j771  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j850 
y: j750 
=== Succesors ===
=== Usages ===
j816 v831 j852 v987 v988 v989 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j850 y: j750  <|@  <|@
f <@~|@floating>@ <|@
tid j816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
x: j815 
y: j863 
=== Succesors ===
=== Usages ===
v817 v865 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j815 y: j863  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j864 
y: j816 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j864 y: j816  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v819 
falseSuccessor: v818 
=== Usages ===
=== Predecessor ===
j864 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v819 #falseSuccessor: v818  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a843 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a843 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v745 i135 
=== Succesors ===
next: v953 
=== Usages ===
v953 a861 
=== Predecessor ===
v819 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v745 i135 #next: v953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-224625|0xfffffffffffc928f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a843 
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
a843 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a843 #next: v847  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v953 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
lastLocationAccess: - 
value: j816 
stateAfter: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 lastLocationAccess: - value: j816 stateAfter: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j815 
index: j863 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v987 
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v987 #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j815 
index: j863 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v988 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v988 #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j815 
index: j863 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v989 
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v989 #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j863 
index: - 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
lastLocationAccess: - 
value: j757 
stateAfter: - 
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v983 lastLocationAccess: - value: j757 stateAfter: - #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j863 
index: - 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
lastLocationAccess: - 
value: v913 
stateAfter: - 
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v990 lastLocationAccess: - value: v913 stateAfter: - #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j863 
index: - 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
lastLocationAccess: - 
value: i135 
stateAfter: - 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v984 lastLocationAccess: - value: i135 stateAfter: - #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid j851 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j852 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j815 
y: j851 
=== Succesors ===
=== Usages ===
v823 v827 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j815 y: j851  <|@  <|@
f <@~|@floating>@ <|@
tid j853 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j852 
y: j853 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j852 y: j853  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v823 
=== Succesors ===
trueSuccessor: v825 
falseSuccessor: v824 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v823 #trueSuccessor: v825 #falseSuccessor: v824  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid j729 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j839 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v829 
values: j240 j839 
=== Succesors ===
=== Usages ===
v831 v985 j839 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v829 values: j240 j839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v828 
=== Succesors ===
next: v837 
=== Usages ===
j830 v836 v840 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v828 #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j830 
y: j815 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j830 y: j815  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v832 
falseSuccessor: v836 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v832 #falseSuccessor: v836  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j863 
index: j830 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j863 index: j830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
lastLocationAccess: - 
value: j665 
stateAfter: - 
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v985 lastLocationAccess: - value: j665 stateAfter: - #next: v840  <|@  <|@
f <@~|@floating>@ <|@
tid j839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
x: j830 
y: j729 
=== Succesors ===
=== Usages ===
j830 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j830 y: j729  <|@  <|@
f <@*|@fixed>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
loopBegin: v829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v829 
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v829 #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
v836 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j863 
index: - 
=== Succesors ===
=== Usages ===
v827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
lastLocationAccess: - 
length: j852 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v986 lastLocationAccess: - length: j852 #next: v833  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
v827 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v833 v835 
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v833 v835 #next: v841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a842 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j863 
=== Succesors ===
next: v845 
=== Usages ===
a861 
=== Predecessor ===
v841 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j863 #next: v845  <|@  <|@
f <@*|@fixed>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
a842 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v846 
values: a842 a843 
=== Succesors ===
=== Usages ===
j885 a188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v846 values: a842 a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v845 v847 
=== Succesors ===
next: v605 
=== Usages ===
a861 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v845 v847 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i919 
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i135 y: i919  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
condition: v182 
trueValue: i135 
falseValue: i919 
=== Succesors ===
=== Usages ===
j887 v316 v473 v474 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v182 trueValue: i135 falseValue: i919  <|@  <|@
f <@~|@floating>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i183 
y: i88 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i183 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v316 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v316 #trueSuccessor: v603 #falseSuccessor: v604  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid i683 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -154137
stableDimension: 0
stamp: i32 [-154137]
stampKind: i32
value: int[-154137|0xfffffffffffda5e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i919 
y: i183 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i919 y: i183  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v473 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v473 #trueSuccessor: v607 #falseSuccessor: v608  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -155161
stableDimension: 0
stamp: i32 [-155161]
stampKind: i32
value: int[-155161|0xfffffffffffda1e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v607 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i183 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i135 y: i183  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v474 
=== Succesors ===
trueSuccessor: v611 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v474 #trueSuccessor: v611 #falseSuccessor: v612  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -156185
stableDimension: 0
stamp: i32 [-156185]
stampKind: i32
value: int[-156185|0xfffffffffffd9de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j883 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a287 
=== Succesors ===
next: j885 
=== Usages ===
v991 
=== Predecessor ===
v612 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a287 #next: j885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a861 
=== Succesors ===
next: v888 
=== Usages ===
v992 
=== Predecessor ===
j883 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a861 #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j883 
index: - 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j883 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j885 
index: - 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j885 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j887 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i183 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v991 v992 j887 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
j885 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v991 v992 j887 #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v888 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a188 <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v186 
values: a303 a861 
=== Succesors ===
=== Usages ===
a337 v725 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v186 values: a303 a861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v187 v189 
=== Succesors ===
next: v723 
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v187 v189 #next: v723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
precise: true
stamp: void
=== Inputs ===
address: v958 
value: - 
stateBefore: - 
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v958 value: - stateBefore: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid a337 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a188 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
lastLocationAccess: - 
value: a337 
stateAfter: - 
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 lastLocationAccess: - value: a337 stateAfter: - #next: v725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
precise: false
stamp: void
=== Inputs ===
address: v958 
value: a188 
object: a1 
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v958 value: a188 object: a1 #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v139 v141 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v139 v141 #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i920 
y: i922 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i920 y: i922  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 626
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?258 
values: a1 a2 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?258 values: a1 a2  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 179
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
values: a1 
=== Succesors ===
=== Usages ===
?256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108 values: a1  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 588
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?257 
values: a1 - i123 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?257 values: a1 - i123  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.putStringAt(int, String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1750
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?256 
values: a1 i921 a2 
=== Succesors ===
=== Usages ===
?654 ?204 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a1 i921 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: PROFILED designatedSuccessorProbability: 0.998717015375415
stamp: void
=== Inputs ===
condition: v466 
=== Succesors ===
trueSuccessor: v196 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v466 #trueSuccessor: v196 #falseSuccessor: v195  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v196 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 17]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.inflate()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?654 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1734
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
bci: 18
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractStringBuilder.inflate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v389 
stateDuring: ?654 
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v389 stateDuring: ?654 #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v201 v203 
=== Succesors ===
next: a923 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v201 v203 #next: a923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a923 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
lastLocationAccess: - 
=== Succesors ===
next: i924 
=== Usages ===
a351 v961 
=== Predecessor ===
v202 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 lastLocationAccess: - #next: i924  <|@  <|@
tid ?204 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1736
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
=== Succesors ===
=== Usages ===
v712 i924 i926 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a923 
=== Succesors ===
=== Usages ===
i924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i924 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-91403|0xfffffffffffe9af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?204 
guard: - 
address: v961 
lastLocationAccess: - 
=== Succesors ===
next: a925 
=== Usages ===
j896 v245 i237 i369 
=== Predecessor ===
a923 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?204 guard: - address: v961 lastLocationAccess: - #next: a925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a925 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
lastLocationAccess: - 
=== Succesors ===
next: i926 
=== Usages ===
a345 v962 
=== Predecessor ===
i924 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 lastLocationAccess: - #next: i926  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a925 
=== Succesors ===
=== Usages ===
i926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i926 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-133131|0xfffffffffffdf7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?204 
guard: - 
address: v962 
lastLocationAccess: - 
=== Succesors ===
next: i927 
=== Usages ===
i251 i369 
=== Predecessor ===
a925 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?204 guard: - address: v962 lastLocationAccess: - #next: i927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i927 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
lastLocationAccess: - 
=== Succesors ===
next: i928 
=== Usages ===
i347 v468 
=== Predecessor ===
i926 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 lastLocationAccess: - #next: i928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i928 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.getBytes(String.java:4725) [bci: 1]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
lastLocationAccess: - 
=== Succesors ===
next: v214 
=== Usages ===
v468 
=== Predecessor ===
i927 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v956 lastLocationAccess: - #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i927 
y: i928 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i927 y: i928  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a925 
=== Succesors ===
=== Usages ===
j900 j891 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a925  <|@  <|@
f <@~|@floating>@ <|@
tid a351 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a923 
=== Succesors ===
=== Usages ===
j889 j898 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a923  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: PROFILED designatedSuccessorProbability: 0.9987687249012156
stamp: void
=== Inputs ===
condition: v468 
=== Succesors ===
trueSuccessor: v213 
falseSuccessor: v212 
=== Usages ===
=== Predecessor ===
i928 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v468 #trueSuccessor: v213 #falseSuccessor: v212  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i927 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i927  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 16]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i921 
y: i347 
=== Succesors ===
=== Usages ===
j892 v361 v370 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i921 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i88 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i216 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v361 
=== Succesors ===
trueSuccessor: v579 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v361 #trueSuccessor: v579 #falseSuccessor: v580  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid i716 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -147993
stableDimension: 0
stamp: i32 [-147993]
stampKind: i32
value: int[-147993|0xfffffffffffdbde7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i926 
y: i924 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i926 y: i924  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i216 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i369 y: i216  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v583 
falseSuccessor: v584 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v583 #falseSuccessor: v584  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid i720 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -149017
stableDimension: 0
stamp: i32 [-149017]
stampKind: i32
value: int[-149017|0xfffffffffffdb9e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v583 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j889 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a351 
=== Succesors ===
next: j891 
=== Usages ===
v993 
=== Predecessor ===
v584 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a351 #next: j891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a345 
=== Succesors ===
next: v897 
=== Usages ===
v994 
=== Predecessor ===
j889 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a345 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j889 
index: - 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j889 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i216 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i216  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j891 
index: j892 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: j892  <|@  <|@
f <@~|@floating>@ <|@
tid j896 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i924 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v993 v994 j896 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
j891 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v993 v994 j896 #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v897 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i921 
y: i88 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i921 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v232 
=== Succesors ===
trueSuccessor: v587 
falseSuccessor: v588 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v232 #trueSuccessor: v587 #falseSuccessor: v588  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid i718 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -150041
stableDimension: 0
stamp: i32 [-150041]
stampKind: i32
value: int[-150041|0xfffffffffffdb5e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v587 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i926 
y: i60 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i926 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i921 
y: i924 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i921 y: i924  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i251 
y: i237 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i251 y: i237  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v591 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v591 #falseSuccessor: v592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid i722 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -151065
stableDimension: 0
stamp: i32 [-151065]
stampKind: i32
value: int[-151065|0xfffffffffffdb1e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v591 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [-151065 - -147993] bits:1...1011011xx0111100111
valueDescription: i32
=== Inputs ===
merge: v707 
values: i716 i718 i720 i722 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v707 values: i716 i718 i720 i722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v715 v717 v719 v721 
=== Succesors ===
next: v712 
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v715 v717 v719 v721 #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateBefore: ?204 
actionAndReason: i710 
speculation: j665 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?204 actionAndReason: i710 speculation: j665  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j898 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a351 
=== Succesors ===
next: j900 
=== Usages ===
j899 
=== Predecessor ===
v592 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a351 #next: j900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a345 
=== Succesors ===
next: v245 
=== Usages ===
j901 
=== Predecessor ===
j898 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a345 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid j899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
x: j898 
y: j240 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j898 y: j240  <|@  <|@
f <@~|@floating>@ <|@
tid j946 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i921 
=== Succesors ===
=== Usages ===
j243 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i921  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j946 
y: i60 
=== Succesors ===
=== Usages ===
j252 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j946 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j243 
y: j240 
=== Succesors ===
=== Usages ===
j901 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j243 y: j240  <|@  <|@
f <@~|@floating>@ <|@
tid j901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
x: j252 
y: j900 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j252 y: j900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j899 
dst: j901 
len: i924 
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
j900 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j899 dst: j901 len: i924 #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v247 v249 
=== Succesors ===
next: i929 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v247 v249 #next: i929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i929 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
=== Succesors ===
next: v388 
=== Usages ===
i116 
=== Predecessor ===
v248 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i123 
y: i929 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i123 y: i929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 40]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
value: i116 
stateAfter: - 
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
i929 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - value: i116 stateAfter: - #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 24]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: 6420
stableDimension: 0
stamp: i64 [6420]
stampKind: i64
value: long[6420|0x1914]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -153107
stableDimension: 0
stamp: i32 [-153107]
stampKind: i32
value: int[-153107|0xfffffffffffda9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v600 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid j670 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i669 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -68915
stableDimension: 0
stamp: i32 [-68915]
stampKind: i32
value: int[-68915|0xfffffffffffef2cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v523 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v914 
y: v911 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v914 y: v911  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v947 
=== Succesors ===
trueSuccessor: v541 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v947 #trueSuccessor: v541 #falseSuccessor: v543  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v547 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v545 #falseSuccessor: v547  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a930 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a930 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
lastLocationAccess: - 
=== Succesors ===
next: i931 
=== Usages ===
a398 v964 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 lastLocationAccess: - #next: i931  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a930 
=== Succesors ===
=== Usages ===
i931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i931 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-102411|0xfffffffffffe6ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v964 
lastLocationAccess: - 
=== Succesors ===
next: i932 
=== Usages ===
i58 
=== Predecessor ===
a930 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v964 lastLocationAccess: - #next: i932  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i932 i942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i932 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:610) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
lastLocationAccess: - 
=== Succesors ===
next: i933 
=== Usages ===
i40 i45 ?79 
=== Predecessor ===
i931 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v963 lastLocationAccess: - #next: i933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i933 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
=== Succesors ===
next: i934 
=== Usages ===
i40 
=== Predecessor ===
i932 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - #next: i934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i934 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
i406 
=== Predecessor ===
i933 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i932 
y: i933 
=== Succesors ===
=== Usages ===
i59 v454 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i932 y: i933  <|@  <|@
f <@~|@floating>@ <|@
tid i406 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i934 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i934  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i931 
y: i406 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i931 y: i406  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i40 
y: i58 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i40 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i60 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i59 y: i60  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 629
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(AbstractStringBuilder)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 611
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?105 
values: a1 a2 i932 
=== Succesors ===
=== Usages ===
?78 ?652 ?653 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?105 values: a1 a2 i932  <|@  <|@
f <@~|@floating>@ <|@
tid a398 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a930 
=== Succesors ===
=== Usages ===
a265 ?652 v457 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a930  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
i934 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v63 #falseSuccessor: v62  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i66 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i66  <|@  <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1 i40 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i40  <|@  <|@
tid ?652 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?79 
values: a1 a398 a1 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?79 values: a1 a398 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v454 
stateDuring: ?652 
=== Succesors ===
next: i935 
=== Usages ===
i69 
=== Predecessor ===
v62 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v454 stateDuring: ?652 #next: i935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i935 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
lastLocationAccess: - 
=== Succesors ===
next: a71 
=== Usages ===
i456 
=== Predecessor ===
i66 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 lastLocationAccess: - #next: a71  <|@  <|@
f <@~|@floating>@ <|@
tid i456 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i935 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i935  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i66 
y: i456 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i66 y: i456  <|@  <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a398 i69 
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a398 i69  <|@  <|@
tid ?653 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?79 
values: a1 
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?79 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v457 
stateDuring: ?653 
=== Succesors ===
next: v726 
=== Usages ===
a265 a458 v728 
=== Predecessor ===
i935 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v457 stateDuring: ?653 #next: v726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
precise: true
stamp: void
=== Inputs ===
address: v958 
value: - 
stateBefore: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
a71 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v958 value: - stateBefore: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid a458 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a71 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
lastLocationAccess: - 
value: a458 
stateAfter: - 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 lastLocationAccess: - value: a458 stateAfter: - #next: v728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
precise: false
stamp: void
=== Inputs ===
address: v958 
value: a71 
object: a1 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v958 value: a71 object: a1 #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v728 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v76 
values: a398 a71 
=== Succesors ===
=== Usages ===
v966 j904 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v76 values: a398 a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v75 v77 
=== Succesors ===
next: a936 
=== Usages ===
a265 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v75 v77 #next: a936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a936 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
lastLocationAccess: - 
=== Succesors ===
next: i937 
=== Usages ===
a415 v965 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 lastLocationAccess: - #next: i937  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?79 
=== Succesors ===
=== Usages ===
v693 i937 i938 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?79  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a936 
=== Succesors ===
=== Usages ===
i937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i937 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-106763|0xfffffffffffe5ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?78 
guard: - 
address: v965 
lastLocationAccess: - 
=== Succesors ===
next: i938 
=== Usages ===
v476 
=== Predecessor ===
a936 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?78 guard: - address: v965 lastLocationAccess: - #next: i938  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a265 
index: - 
=== Succesors ===
=== Usages ===
i938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i938 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-107019|0xfffffffffffe5df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?78 
guard: - 
address: v966 
lastLocationAccess: - 
=== Succesors ===
next: i939 
=== Usages ===
i429 
=== Predecessor ===
i937 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?78 guard: - address: v966 lastLocationAccess: - #next: i939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i939 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
lastLocationAccess: - 
=== Succesors ===
next: i940 
=== Usages ===
i408 v470 
=== Predecessor ===
i938 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 lastLocationAccess: - #next: i940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i940 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getCoder(AbstractStringBuilder.java:1689) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
lastLocationAccess: - 
=== Succesors ===
next: v629 
=== Usages ===
v470 
=== Predecessor ===
i939 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v956 lastLocationAccess: - #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i940 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i939 y: i940  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v470 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
i940 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v470 #trueSuccessor: v627 #falseSuccessor: v628  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1742) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i941 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i941 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
=== Succesors ===
next: v633 
=== Usages ===
i89 i45 
=== Predecessor ===
v627 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i939 
=== Succesors ===
=== Usages ===
i91 i89 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i939  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i941 
y: i408 
=== Succesors ===
=== Usages ===
j905 v421 v430 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i941 y: i408  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i89 
y: i88 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i89 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v632 
=== Usages ===
=== Predecessor ===
i941 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v631 #falseSuccessor: v632  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: -161305
stableDimension: 0
stamp: i32 [-161305]
stampKind: i32
value: int[-161305|0xfffffffffffd89e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i942 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i942 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
lastLocationAccess: - 
=== Succesors ===
next: v637 
=== Usages ===
i91 
=== Predecessor ===
v632 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v963 lastLocationAccess: - #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i942 
y: i408 
=== Succesors ===
=== Usages ===
j909 v423 v476 i429 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i942 y: i408  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i88 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i91 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v636 
=== Usages ===
=== Predecessor ===
i942 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v635 #falseSuccessor: v636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: -162329
stableDimension: 0
stamp: i32 [-162329]
stampKind: i32
value: int[-162329|0xfffffffffffd85e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i937 
y: i91 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i937 y: i91  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v639 
falseSuccessor: v640 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v639 #falseSuccessor: v640  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid i704 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: -163353
stableDimension: 0
stamp: i32 [-163353]
stampKind: i32
value: int[-163353|0xfffffffffffd81e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v639 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v645 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v645  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i938 
y: i91 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i938 y: i91  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i429 
y: i89 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i429 y: i89  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v643 
falseSuccessor: v644 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v643 #falseSuccessor: v644  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid i706 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: -164377
stableDimension: 0
stamp: i32 [-164377]
stampKind: i32
value: int[-164377|0xfffffffffffd7de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v643 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: j902 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j902  <|@  <|@
f <@~|@floating>@ <|@
tid a415 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a936 
=== Succesors ===
=== Usages ===
j902 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i64
=== Inputs ===
object: a415 
=== Succesors ===
next: j904 
=== Usages ===
v995 
=== Predecessor ===
v644 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a415 #next: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i64
=== Inputs ===
object: a265 
=== Succesors ===
next: v910 
=== Usages ===
v996 
=== Predecessor ===
j902 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a265 #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i89 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j904 
index: j905 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: j905  <|@  <|@
f <@~|@floating>@ <|@
tid j909 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i91 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v995 v996 j909 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
j904 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v995 v996 j909 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 51]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i932 
y: i941 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i932 y: i941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: i943 
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - value: i45 stateAfter: - #next: i943  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i943 v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i943 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
lastLocationAccess: - 
=== Succesors ===
next: i944 
=== Usages ===
i448 
=== Predecessor ===
v444 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v967 lastLocationAccess: - #next: i944  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i944 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
i451 
=== Predecessor ===
i943 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v968 lastLocationAccess: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i448 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i943 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i943  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i944 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i944  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 64]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i448 
y: i451 
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i448 y: i451  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i50 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.maybeLatin1
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
lastLocationAccess: - 
value: i452 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i944 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v967 lastLocationAccess: - value: i452 stateAfter: - #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 40]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid j700 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: 3860
stableDimension: 0
stamp: i64 [3860]
stampKind: i64
value: long[3860|0xf14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: -160275
stableDimension: 0
stamp: i32 [-160275]
stampKind: i32
value: int[-160275|0xfffffffffffd8ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [-164377 - -160275] bits:1...101xxxxxx011110x1x1
valueDescription: i32
=== Inputs ===
merge: v688 
values: i697 i699 i702 i704 i706 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v688 values: i697 i699 i702 i704 i706  <|@  <|@
f <@~|@floating>@ <|@
tid j692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i64 [0 - 3860] bits:0...0xxxx000x0x00
valueDescription: i64
=== Inputs ===
merge: v688 
values: j665 j700 j665 j665 j665 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v688 values: j665 j700 j665 j665 j665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v696 v698 v701 v703 v705 
=== Succesors ===
next: v693 
=== Usages ===
i691 j692 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v696 v698 v701 v703 v705 #next: v693  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
stateBefore: ?78 
actionAndReason: i691 
speculation: j692 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?78 actionAndReason: i691 speculation: j692  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid j678 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -100147
stableDimension: 0
stamp: i32 [-100147]
stampKind: i32
value: int[-100147|0xfffffffffffe78cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid j675 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -99891
stableDimension: 0
stamp: i32 [-99891]
stampKind: i32
value: int[-99891|0xfffffffffffe79cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: i32 [-156185 - -68915] bits:1...1xxxxxxxxxx11x0x1x1
valueDescription: i32
=== Inputs ===
merge: v657 
values: i669 i674 i677 i680 i683 i685 i687 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v657 values: i669 i674 i677 i680 i683 i685 i687  <|@  <|@
f <@~|@floating>@ <|@
tid j661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: i64 [0 - 6420] bits:0...0xxxxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v657 
values: j670 j675 j678 j681 j665 j665 j665 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v657 values: j670 j675 j678 j681 j665 j665 j665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v668 v673 v676 v679 v682 v684 v686 
=== Succesors ===
next: v662 
=== Usages ===
i660 j661 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v668 v673 v676 v679 v682 v684 v686 #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i660 
speculation: j661 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i660 speculation: j661  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v92|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99891|0xfffffffffffe79cd], long[660|0x294]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150041|0xfffffffffffdb5e7]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155161|0xfffffffffffda1e7], long[0|0x0]] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68915|0xfffffffffffef2cd], long[5140|0x1414]] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[6420|0x1914]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100147|0xfffffffffffe78cd], long[1940|0x794]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163353|0xfffffffffffd81e7], long[0|0x0]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162329|0xfffffffffffd85e7], long[0|0x0]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151065|0xfffffffffffdb1e7]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160275|0xfffffffffffd8ded], long[3860|0xf14]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154137|0xfffffffffffda5e7], long[0|0x0]] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149017|0xfffffffffffdb9e7]] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164377|0xfffffffffffd7de7], long[0|0x0]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156185|0xfffffffffffd9de7], long[0|0x0]] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147993|0xfffffffffffdbde7]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-161305|0xfffffffffffd89e7], long[0|0x0]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v914  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.lang.AbstractStringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v725 v728 v969 ?257 ?108 v17 v957 v960 ?208 ?256 v389 v958 ?653 ?652 ?652 v454 v31 ?79 v967 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v968 v970 v963 v956 ?208 ?108 v954 ?79 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 622
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v662 v951 v953 a762 a843 v914 i917 i931 i919 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-143635|0xfffffffffffdceed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v970 
lastLocationAccess: - 
=== Succesors ===
next: v915 
=== Usages ===
v949 v947 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v970 lastLocationAccess: - #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v915 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
lastLocationAccess: - 
=== Succesors ===
next: v10 
=== Usages ===
v912 
=== Predecessor ===
v914 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v969 lastLocationAccess: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
result meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 v947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v915 
y: v911 
=== Succesors ===
=== Usages ===
v548 v524 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v915 y: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v914 
y: v948 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v914 y: v948  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 v316 v421 v361 v232 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j692 v871 j661 j661 j661 v712 j692 j692 j692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 v130 i251 j243 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i922 i927 i934 i939 i935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i921 v388 i929 i933 i941 v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i920 i928 i940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a918 v338 a925 v723 v725 a930 v459 v726 v728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a916 a923 a936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 0.6368791901525137
stamp: void
=== Inputs ===
condition: v949 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v949 #trueSuccessor: v9 #falseSuccessor: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v521 #falseSuccessor: v523  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a916 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a916 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
lastLocationAccess: - 
=== Succesors ===
next: i917 
=== Usages ===
v955 
=== Predecessor ===
v521 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 lastLocationAccess: - #next: i917  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
result [v4|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a916 
=== Succesors ===
=== Usages ===
i917 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i917 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-70411|0xfffffffffffeecf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v955 
lastLocationAccess: - 
=== Succesors ===
next: a918 
=== Usages ===
i123 
=== Predecessor ===
a916 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v955 lastLocationAccess: - #next: a918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a918 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
lastLocationAccess: - 
=== Succesors ===
next: i919 
=== Usages ===
a287 v959 
=== Predecessor ===
i917 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 lastLocationAccess: - #next: i919  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result [v6|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a918 
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i919 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-73995|0xfffffffffffedef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v959 
lastLocationAccess: - 
=== Succesors ===
next: i920 
=== Usages ===
i128 i147 i150 i156 v165 v182 i183 v791 j809 v473 a762 
=== Predecessor ===
a918 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v959 lastLocationAccess: - #next: i920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i920 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
lastLocationAccess: - 
=== Succesors ===
next: i921 
=== Usages ===
i282 v466 
=== Predecessor ===
i919 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v956 lastLocationAccess: - #next: i921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i921 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
=== Succesors ===
next: i922 
=== Usages ===
i113 ?208 i216 j946 v232 i237 
=== Predecessor ===
i920 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - #next: i922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i922 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
lastLocationAccess: - 
=== Succesors ===
next: v133 
=== Usages ===
i295 v466 
=== Predecessor ===
i921 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 lastLocationAccess: - #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i920 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i920  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i917 
y: i282 
=== Succesors ===
=== Usages ===
i113 i116 ?256 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i917 y: i282  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i123 
y: i921 
=== Succesors ===
=== Usages ===
i129 i146 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i123 y: i921  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i922 
=== Succesors ===
=== Usages ===
i128 i146 i149 i155 i135 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i922  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i919 
y: i295 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i919 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i113 
y: i128 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i113 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i60 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i129 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j899 j252 j830 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
i922 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v132 #falseSuccessor: v131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i113 
y: i295 
=== Succesors ===
=== Usages ===
i147 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i113 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i146 
y: i919 
=== Succesors ===
=== Usages ===
v162 i163 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i146 y: i919  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i148 
y: i295 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i148 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i149 
y: i919 
=== Succesors ===
=== Usages ===
v162 i163 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i149 y: i919  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i147 
y: i150 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i147 y: i150  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
condition: v162 
trueValue: i150 
falseValue: i147 
=== Succesors ===
=== Usages ===
i156 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v162 trueValue: i150 falseValue: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i163 
y: i919 
=== Succesors ===
=== Usages ===
i648 i155 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i163 y: i919  <|@  <|@
f <@~|@floating>@ <|@
tid i647 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i648 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i156 
y: i647 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i156 y: i647  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i648 
y: i649 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i648 y: i649  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v650 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v650 #trueSuccessor: v599 #falseSuccessor: v600  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i156 
y: i295 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i156 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i155 
y: i295 
=== Succesors ===
=== Usages ===
v165 v870 v182 i183 v474 j814 a843 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i155 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i919 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i135 y: i919  <|@  <|@
f <@~|@floating>@ <|@
tid a287 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a918 
=== Succesors ===
=== Usages ===
j803 j883 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a918  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 v869 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 v866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a762 a843 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j771 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j772 j850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j750 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j751 j815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: PROFILED designatedSuccessorProbability: 3.433727982038448E-5
stamp: void
=== Inputs ===
condition: v165 
=== Succesors ===
trueSuccessor: v167 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v165 #trueSuccessor: v167 #falseSuccessor: v166  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j746 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j746 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j784 
=== Usages ===
v971 v972 
=== Predecessor ===
v801 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j784  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j746 
index: - 
=== Succesors ===
=== Usages ===
j784 v786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j746 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j784 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v971 
lastLocationAccess: - 
=== Succesors ===
next: j785 
=== Usages ===
j752 v973 v974 a761 v978 v975 v976 v977 
=== Predecessor ===
j746 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v971 lastLocationAccess: - #next: j785  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j746 
index: - 
=== Succesors ===
=== Usages ===
j785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j746 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j785 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
lastLocationAccess: - 
=== Succesors ===
next: v756 
=== Usages ===
v753 
=== Predecessor ===
j784 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v972 lastLocationAccess: - #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i919 
=== Succesors ===
=== Usages ===
v810 j772 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i919  <|@  <|@
f <@~|@floating>@ <|@
tid j772 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j809 
y: j771 
=== Succesors ===
=== Usages ===
j751 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j809 y: j771  <|@  <|@
f <@~|@floating>@ <|@
tid j751 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j772 
y: j750 
=== Succesors ===
=== Usages ===
j752 v975 v976 v977 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j772 y: j750  <|@  <|@
f <@~|@floating>@ <|@
tid j752 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
x: j751 
y: j784 
=== Succesors ===
=== Usages ===
v753 v786 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j751 y: j784  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j785 
y: j752 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j785 y: j752  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v753 
=== Succesors ===
trueSuccessor: v755 
falseSuccessor: v754 
=== Usages ===
=== Predecessor ===
j785 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v753 #trueSuccessor: v755 #falseSuccessor: v754  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a762 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a762 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v745 i919 
=== Succesors ===
next: v951 
=== Usages ===
v951 a782 
=== Predecessor ===
v755 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v745 i919 #next: v951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-204145|0xfffffffffffce28f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a762 
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
a762 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a762 #next: v766  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
v951 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v971 
lastLocationAccess: - 
value: j752 
stateAfter: - 
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v971 lastLocationAccess: - value: j752 stateAfter: - #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
result [v32|QWORD + v29|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j751 
index: j784 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j751 index: j784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v975 
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v975 #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
result [v32|QWORD + v29|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j751 
index: j784 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j751 index: j784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v976 
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v976 #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
result [v32|QWORD + v29|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j751 
index: j784 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j751 index: j784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v977 
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v977 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
result [v29|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
lastLocationAccess: - 
value: j757 
stateAfter: - 
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v973 lastLocationAccess: - value: j757 stateAfter: - #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
result [v29|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
lastLocationAccess: - 
value: v913 
stateAfter: - 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 lastLocationAccess: - value: v913 stateAfter: - #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
result [v29|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
lastLocationAccess: - 
value: i919 
stateAfter: - 
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 lastLocationAccess: - value: i919 stateAfter: - #next: v760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a761 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a761 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j784 
=== Succesors ===
next: v764 
=== Usages ===
a782 
=== Predecessor ===
v760 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j784 #next: v764  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
a761 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a782 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v765 
values: a761 a762 
=== Succesors ===
=== Usages ===
j807 a303 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v765 values: a761 a762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v764 v766 
=== Succesors ===
next: j803 
=== Usages ===
a782 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v764 v766 #next: j803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j803 <|@
result v38|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a287 
=== Succesors ===
next: j807 
=== Usages ===
v979 
=== Predecessor ===
v765 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a287 #next: j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j807 <|@
result v39|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a782 
=== Succesors ===
next: v810 
=== Usages ===
v980 
=== Predecessor ===
j803 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a782 #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
result [v38|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j803 
index: - 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j803 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result [v39|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j807 
index: - 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v979 v980 j809 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
j807 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v979 v980 j809 #next: v302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a303 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a303 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a!# byte[]
=== Inputs ===
object: a782 
=== Succesors ===
next: v187 
=== Usages ===
a188 
=== Predecessor ===
v302 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a782 #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
a303 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 14]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j811 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j811 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j863 
=== Usages ===
v981 v982 
=== Predecessor ===
v881 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j863  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j811 
index: - 
=== Succesors ===
=== Usages ===
j863 v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j863 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
lastLocationAccess: - 
=== Succesors ===
next: j864 
=== Usages ===
j816 v983 v984 v985 a842 v986 v990 v987 v988 v989 
=== Predecessor ===
j811 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v981 lastLocationAccess: - #next: j864  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j811 
index: - 
=== Succesors ===
=== Usages ===
j864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j811 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j864 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
lastLocationAccess: - 
=== Succesors ===
next: v820 
=== Usages ===
v817 
=== Predecessor ===
j863 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v982 lastLocationAccess: - #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i135 
=== Succesors ===
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i135  <|@  <|@
f <@~|@floating>@ <|@
tid j850 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j814 
y: j771 
=== Succesors ===
=== Usages ===
j815 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j814 y: j771  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j850 
y: j750 
=== Succesors ===
=== Usages ===
j816 v831 j852 v987 v988 v989 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j850 y: j750  <|@  <|@
f <@~|@floating>@ <|@
tid j816 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
x: j815 
y: j863 
=== Succesors ===
=== Usages ===
v817 v865 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j815 y: j863  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j864 
y: j816 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j864 y: j816  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v819 
falseSuccessor: v818 
=== Usages ===
=== Predecessor ===
j864 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v819 #falseSuccessor: v818  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a843 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a843 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v745 i135 
=== Succesors ===
next: v953 
=== Usages ===
v953 a861 
=== Predecessor ===
v819 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v745 i135 #next: v953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-224625|0xfffffffffffc928f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a843 
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
a843 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a843 #next: v847  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v953 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
lastLocationAccess: - 
value: j816 
stateAfter: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 lastLocationAccess: - value: j816 stateAfter: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
result [v43|QWORD + v40|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j815 
index: j863 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v987 
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v987 #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result [v43|QWORD + v40|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j815 
index: j863 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v988 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v988 #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
result [v43|QWORD + v40|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j815 
index: j863 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j815 index: j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
address: v989 
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v989 #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
result [v40|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j863 
index: - 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
lastLocationAccess: - 
value: j757 
stateAfter: - 
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v983 lastLocationAccess: - value: j757 stateAfter: - #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result [v40|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j863 
index: - 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
lastLocationAccess: - 
value: v913 
stateAfter: - 
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v990 lastLocationAccess: - value: v913 stateAfter: - #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
result [v40|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j863 
index: - 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
lastLocationAccess: - 
value: i135 
stateAfter: - 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v984 lastLocationAccess: - value: i135 stateAfter: - #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid j851 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j852 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j852 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j815 
y: j851 
=== Succesors ===
=== Usages ===
v823 v827 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j815 y: j851  <|@  <|@
f <@~|@floating>@ <|@
tid j853 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j852 
y: j853 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j852 y: j853  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v823 
=== Succesors ===
trueSuccessor: v825 
falseSuccessor: v824 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v823 #trueSuccessor: v825 #falseSuccessor: v824  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid j729 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j839 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j830 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v829 
values: j240 j839 
=== Succesors ===
=== Usages ===
v831 v985 j839 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v829 values: j240 j839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v828 
=== Succesors ===
next: v837 
=== Usages ===
j830 v836 v840 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v828 #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j830 
y: j815 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j830 y: j815  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v832 
falseSuccessor: v836 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v832 #falseSuccessor: v836  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
result [v40|QWORD + v47|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j863 
index: j830 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j863 index: j830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
lastLocationAccess: - 
value: j665 
stateAfter: - 
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v985 lastLocationAccess: - value: j665 stateAfter: - #next: v840  <|@  <|@
f <@~|@floating>@ <|@
tid j839 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
x: j830 
y: j729 
=== Succesors ===
=== Usages ===
j830 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j830 y: j729  <|@  <|@
f <@*|@fixed>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
loopBegin: v829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v829 
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v829 #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
v836 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
result [v40|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j863 
index: - 
=== Succesors ===
=== Usages ===
v827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
lastLocationAccess: - 
length: j852 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v986 lastLocationAccess: - length: j852 #next: v833  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
v827 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v833 v835 
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v833 v835 #next: v841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: a842 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a842 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j863 
=== Succesors ===
next: v845 
=== Usages ===
a861 
=== Predecessor ===
v841 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j863 #next: v845  <|@  <|@
f <@*|@fixed>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
a842 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a861 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v846 
values: a842 a843 
=== Succesors ===
=== Usages ===
j885 a188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v846 values: a842 a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v845 v847 
=== Succesors ===
next: v605 
=== Usages ===
a861 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v845 v847 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i919 
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i135 y: i919  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
condition: v182 
trueValue: i135 
falseValue: i919 
=== Succesors ===
=== Usages ===
j887 v316 v473 v474 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v182 trueValue: i135 falseValue: i919  <|@  <|@
f <@~|@floating>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i183 
y: i88 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i183 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v316 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v316 #trueSuccessor: v603 #falseSuccessor: v604  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid i683 <|@
result int[-154137|0xfffffffffffda5e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -154137
stableDimension: 0
stamp: i32 [-154137]
stampKind: i32
value: int[-154137|0xfffffffffffda5e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154137|0xfffffffffffda5e7], long[0|0x0]] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i919 
y: i183 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i919 y: i183  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v473 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v473 #trueSuccessor: v607 #falseSuccessor: v608  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
result int[-155161|0xfffffffffffda1e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -155161
stableDimension: 0
stamp: i32 [-155161]
stampKind: i32
value: int[-155161|0xfffffffffffda1e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v607 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155161|0xfffffffffffda1e7], long[0|0x0]] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i183 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i135 y: i183  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v474 
=== Succesors ===
trueSuccessor: v611 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v474 #trueSuccessor: v611 #falseSuccessor: v612  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
result int[-156185|0xfffffffffffd9de7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -156185
stableDimension: 0
stamp: i32 [-156185]
stampKind: i32
value: int[-156185|0xfffffffffffd9de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156185|0xfffffffffffd9de7], long[0|0x0]] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j883 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j883 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a287 
=== Succesors ===
next: j885 
=== Usages ===
v991 
=== Predecessor ===
v612 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a287 #next: j885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j885 <|@
result v54|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a861 
=== Succesors ===
next: v888 
=== Usages ===
v992 
=== Predecessor ===
j883 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a861 #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result [v53|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j883 
index: - 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j883 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result [v54|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j885 
index: - 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j885 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j887 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i183 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v991 v992 j887 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
j885 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v991 v992 j887 #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v888 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a188 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v186 
values: a303 a861 
=== Succesors ===
=== Usages ===
a337 v725 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v186 values: a303 a861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v187 v189 
=== Succesors ===
next: v723 
=== Usages ===
a188 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v187 v189 #next: v723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
precise: true
stamp: void
=== Inputs ===
address: v958 
value: - 
stateBefore: - 
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v958 value: - stateBefore: - #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid a337 <|@
result v59|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a188 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
lastLocationAccess: - 
value: a337 
stateAfter: - 
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 lastLocationAccess: - value: a337 stateAfter: - #next: v725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
precise: false
stamp: void
=== Inputs ===
address: v958 
value: a188 
object: a1 
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v958 value: a188 object: a1 #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v139 v141 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v139 v141 #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i920 
y: i922 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i920 y: i922  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 626
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?258 
values: a1 a2 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?258 values: a1 a2  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 179
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?108 
values: a1 
=== Succesors ===
=== Usages ===
?256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?108 values: a1  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 588
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?257 
values: a1 - i123 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?257 values: a1 - i123  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.putStringAt(int, String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1750
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?256 
values: a1 i921 a2 
=== Succesors ===
=== Usages ===
?654 ?204 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a1 i921 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: PROFILED designatedSuccessorProbability: 0.998717015375415
stamp: void
=== Inputs ===
condition: v466 
=== Succesors ===
trueSuccessor: v196 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v466 #trueSuccessor: v196 #falseSuccessor: v195  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v196 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 17]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.inflate()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?654 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1734
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
bci: 18
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractStringBuilder.inflate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v389 
stateDuring: ?654 
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v389 stateDuring: ?654 #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v201 v203 
=== Succesors ===
next: a923 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v201 v203 #next: a923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a923 <|@
result v62|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
lastLocationAccess: - 
=== Succesors ===
next: i924 
=== Usages ===
a351 v961 
=== Predecessor ===
v202 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 lastLocationAccess: - #next: i924  <|@  <|@
tid ?204 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1736
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
=== Succesors ===
=== Usages ===
v712 i924 i926 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
result [v62|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a923 
=== Succesors ===
=== Usages ===
i924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i924 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-91403|0xfffffffffffe9af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?204 
guard: - 
address: v961 
lastLocationAccess: - 
=== Succesors ===
next: a925 
=== Usages ===
j896 v245 i237 i369 
=== Predecessor ===
a923 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?204 guard: - address: v961 lastLocationAccess: - #next: a925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a925 <|@
result v64|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
lastLocationAccess: - 
=== Succesors ===
next: i926 
=== Usages ===
a345 v962 
=== Predecessor ===
i924 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 lastLocationAccess: - #next: i926  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
result [v64|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a925 
=== Succesors ===
=== Usages ===
i926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i926 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-133131|0xfffffffffffdf7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?204 
guard: - 
address: v962 
lastLocationAccess: - 
=== Succesors ===
next: i927 
=== Usages ===
i251 i369 
=== Predecessor ===
a925 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?204 guard: - address: v962 lastLocationAccess: - #next: i927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i927 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
lastLocationAccess: - 
=== Succesors ===
next: i928 
=== Usages ===
i347 v468 
=== Predecessor ===
i926 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 lastLocationAccess: - #next: i928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i928 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.getBytes(String.java:4725) [bci: 1]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
lastLocationAccess: - 
=== Succesors ===
next: v214 
=== Usages ===
v468 
=== Predecessor ===
i927 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v956 lastLocationAccess: - #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i927 
y: i928 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i927 y: i928  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a925 
=== Succesors ===
=== Usages ===
j900 j891 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a925  <|@  <|@
f <@~|@floating>@ <|@
tid a351 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a923 
=== Succesors ===
=== Usages ===
j889 j898 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a923  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: PROFILED designatedSuccessorProbability: 0.9987687249012156
stamp: void
=== Inputs ===
condition: v468 
=== Succesors ===
trueSuccessor: v213 
falseSuccessor: v212 
=== Usages ===
=== Predecessor ===
i928 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v468 #trueSuccessor: v213 #falseSuccessor: v212  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i927 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i927  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 16]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i921 
y: i347 
=== Succesors ===
=== Usages ===
j892 v361 v370 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i921 y: i347  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i88 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i216 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v361 
=== Succesors ===
trueSuccessor: v579 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v361 #trueSuccessor: v579 #falseSuccessor: v580  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid i716 <|@
result int[-147993|0xfffffffffffdbde7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -147993
stableDimension: 0
stamp: i32 [-147993]
stampKind: i32
value: int[-147993|0xfffffffffffdbde7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147993|0xfffffffffffdbde7]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i926 
y: i924 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i926 y: i924  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i216 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i369 y: i216  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v583 
falseSuccessor: v584 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v583 #falseSuccessor: v584  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid i720 <|@
result int[-149017|0xfffffffffffdb9e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -149017
stableDimension: 0
stamp: i32 [-149017]
stampKind: i32
value: int[-149017|0xfffffffffffdb9e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v583 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149017|0xfffffffffffdb9e7]] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j889 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j889 <|@
result v72|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a351 
=== Succesors ===
next: j891 
=== Usages ===
v993 
=== Predecessor ===
v584 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a351 #next: j891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j891 <|@
result v73|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a345 
=== Succesors ===
next: v897 
=== Usages ===
v994 
=== Predecessor ===
j889 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a345 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result [v72|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j889 
index: - 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j889 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i216 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i216  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
result [v73|QWORD[*] + v70|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j891 
index: j892 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: j892  <|@  <|@
f <@~|@floating>@ <|@
tid j896 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i924 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v993 v994 j896 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
j891 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v993 v994 j896 #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v897 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i921 
y: i88 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i921 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v232 
=== Succesors ===
trueSuccessor: v587 
falseSuccessor: v588 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v232 #trueSuccessor: v587 #falseSuccessor: v588  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid i718 <|@
result int[-150041|0xfffffffffffdb5e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -150041
stableDimension: 0
stamp: i32 [-150041]
stampKind: i32
value: int[-150041|0xfffffffffffdb5e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v587 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150041|0xfffffffffffdb5e7]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid i251 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i926 
y: i60 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i926 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i921 
y: i924 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i921 y: i924  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i251 
y: i237 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i251 y: i237  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v591 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v591 #falseSuccessor: v592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid i722 <|@
result int[-151065|0xfffffffffffdb1e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
rawvalue: -151065
stableDimension: 0
stamp: i32 [-151065]
stampKind: i32
value: int[-151065|0xfffffffffffdb1e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v591 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151065|0xfffffffffffdb1e7]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i710 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32 [-151065 - -147993] bits:1...1011011xx0111100111
valueDescription: i32
=== Inputs ===
merge: v707 
values: i716 i718 i720 i722 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v707 values: i716 i718 i720 i722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v715 v717 v719 v721 
=== Succesors ===
next: v712 
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v715 v717 v719 v721 #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateBefore: ?204 
actionAndReason: i710 
speculation: j665 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?204 actionAndReason: i710 speculation: j665  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: j898 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j898 <|@
result v78|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a351 
=== Succesors ===
next: j900 
=== Usages ===
j899 
=== Predecessor ===
v592 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a351 #next: j900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j900 <|@
result v79|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
object: a345 
=== Succesors ===
next: v245 
=== Usages ===
j901 
=== Predecessor ===
j898 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a345 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid j899 <|@
result v80|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
x: j898 
y: j240 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j898 y: j240  <|@  <|@
f <@~|@floating>@ <|@
tid j946 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i921 
=== Succesors ===
=== Usages ===
j243 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i921  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j946 
y: i60 
=== Succesors ===
=== Usages ===
j252 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j946 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j243 
y: j240 
=== Succesors ===
=== Usages ===
j901 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j243 y: j240  <|@  <|@
f <@~|@floating>@ <|@
tid j901 <|@
result v84|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i64
=== Inputs ===
x: j252 
y: j900 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j252 y: j900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j899 
dst: j901 
len: i924 
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
j900 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j899 dst: j901 len: i924 #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v247 v249 
=== Succesors ===
next: i929 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v247 v249 #next: i929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i929 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
=== Succesors ===
next: v388 
=== Usages ===
i116 
=== Predecessor ===
v248 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: i32
=== Inputs ===
x: i123 
y: i929 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i123 y: i929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 40]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
value: i116 
stateAfter: - 
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
i929 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - value: i116 stateAfter: - #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 24]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
result long[6420|0x1914] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: 6420
stableDimension: 0
stamp: i64 [6420]
stampKind: i64
value: long[6420|0x1914]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result int[-153107|0xfffffffffffda9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -153107
stableDimension: 0
stamp: i32 [-153107]
stampKind: i32
value: int[-153107|0xfffffffffffda9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v600 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[6420|0x1914]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid j670 <|@
result long[5140|0x1414] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i669 <|@
result int[-68915|0xfffffffffffef2cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -68915
stableDimension: 0
stamp: i32 [-68915]
stampKind: i32
value: int[-68915|0xfffffffffffef2cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v523 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68915|0xfffffffffffef2cd], long[5140|0x1414]] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v914 
y: v911 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v914 y: v911  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v947 
=== Succesors ===
trueSuccessor: v541 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v947 #trueSuccessor: v541 #falseSuccessor: v543  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v547 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v545 #falseSuccessor: v547  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a930 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a930 <|@
result v85|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
lastLocationAccess: - 
=== Succesors ===
next: i931 
=== Usages ===
a398 v964 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 lastLocationAccess: - #next: i931  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result [v85|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a930 
=== Succesors ===
=== Usages ===
i931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i931 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-102411|0xfffffffffffe6ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v964 
lastLocationAccess: - 
=== Succesors ===
next: i932 
=== Usages ===
i58 
=== Predecessor ===
a930 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v964 lastLocationAccess: - #next: i932  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i932 i942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i932 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:610) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
lastLocationAccess: - 
=== Succesors ===
next: i933 
=== Usages ===
i40 i45 ?79 
=== Predecessor ===
i931 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v963 lastLocationAccess: - #next: i933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i933 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
=== Succesors ===
next: i934 
=== Usages ===
i40 
=== Predecessor ===
i932 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - #next: i934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i934 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
i406 
=== Predecessor ===
i933 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i932 
y: i933 
=== Succesors ===
=== Usages ===
i59 v454 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i932 y: i933  <|@  <|@
f <@~|@floating>@ <|@
tid i406 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i934 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i934  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i931 
y: i406 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i931 y: i406  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i40 
y: i58 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i40 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i60 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i59 y: i60  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 629
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(AbstractStringBuilder)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 611
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?105 
values: a1 a2 i932 
=== Succesors ===
=== Usages ===
?78 ?652 ?653 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?105 values: a1 a2 i932  <|@  <|@
f <@~|@floating>@ <|@
tid a398 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a930 
=== Succesors ===
=== Usages ===
a265 ?652 v457 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a930  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
i934 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v63 #falseSuccessor: v62  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v92|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i66 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i66  <|@  <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1 i40 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i40  <|@  <|@
tid ?652 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?79 
values: a1 a398 a1 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?79 values: a1 a398 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i66 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v454 
stateDuring: ?652 
=== Succesors ===
next: i935 
=== Usages ===
i69 
=== Predecessor ===
v62 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v454 stateDuring: ?652 #next: i935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i935 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
lastLocationAccess: - 
=== Succesors ===
next: a71 
=== Usages ===
i456 
=== Predecessor ===
i66 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 lastLocationAccess: - #next: a71  <|@  <|@
f <@~|@floating>@ <|@
tid i456 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i935 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i935  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i66 
y: i456 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i66 y: i456  <|@  <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a398 i69 
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a398 i69  <|@  <|@
tid ?653 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?79 
values: a1 
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?79 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a71 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v457 
stateDuring: ?653 
=== Succesors ===
next: v726 
=== Usages ===
a265 a458 v728 
=== Predecessor ===
i935 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v457 stateDuring: ?653 #next: v726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
precise: true
stamp: void
=== Inputs ===
address: v958 
value: - 
stateBefore: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
a71 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v958 value: - stateBefore: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid a458 <|@
result v99|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a71 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
lastLocationAccess: - 
value: a458 
stateAfter: - 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 lastLocationAccess: - value: a458 stateAfter: - #next: v728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
precise: false
stamp: void
=== Inputs ===
address: v958 
value: a71 
object: a1 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v958 value: a71 object: a1 #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v728 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a265 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v76 
values: a398 a71 
=== Succesors ===
=== Usages ===
v966 j904 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v76 values: a398 a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v75 v77 
=== Succesors ===
next: a936 
=== Usages ===
a265 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v75 v77 #next: a936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a936 <|@
result v103|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
lastLocationAccess: - 
=== Succesors ===
next: i937 
=== Usages ===
a415 v965 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 lastLocationAccess: - #next: i937  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?79 
=== Succesors ===
=== Usages ===
v693 i937 i938 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?79  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
result [v103|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a936 
=== Succesors ===
=== Usages ===
i937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i937 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-106763|0xfffffffffffe5ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?78 
guard: - 
address: v965 
lastLocationAccess: - 
=== Succesors ===
next: i938 
=== Usages ===
v476 
=== Predecessor ===
a936 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?78 guard: - address: v965 lastLocationAccess: - #next: i938  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result [v102|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a265 
index: - 
=== Succesors ===
=== Usages ===
i938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i938 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-107019|0xfffffffffffe5df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?78 
guard: - 
address: v966 
lastLocationAccess: - 
=== Succesors ===
next: i939 
=== Usages ===
i429 
=== Predecessor ===
i937 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?78 guard: - address: v966 lastLocationAccess: - #next: i939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i939 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
lastLocationAccess: - 
=== Succesors ===
next: i940 
=== Usages ===
i408 v470 
=== Predecessor ===
i938 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 lastLocationAccess: - #next: i940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i940 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getCoder(AbstractStringBuilder.java:1689) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
lastLocationAccess: - 
=== Succesors ===
next: v629 
=== Usages ===
v470 
=== Predecessor ===
i939 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v956 lastLocationAccess: - #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i940 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i939 y: i940  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v470 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
i940 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v470 #trueSuccessor: v627 #falseSuccessor: v628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1742) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i941 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i941 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
=== Succesors ===
next: v633 
=== Usages ===
i89 i45 
=== Predecessor ===
v627 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i939 
=== Succesors ===
=== Usages ===
i91 i89 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i939  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i941 
y: i408 
=== Succesors ===
=== Usages ===
j905 v421 v430 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i941 y: i408  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i89 
y: i88 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i89 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v632 
=== Usages ===
=== Predecessor ===
i941 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v631 #falseSuccessor: v632  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
result int[-161305|0xfffffffffffd89e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: -161305
stableDimension: 0
stamp: i32 [-161305]
stampKind: i32
value: int[-161305|0xfffffffffffd89e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-161305|0xfffffffffffd89e7], long[0|0x0]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i942 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i942 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
lastLocationAccess: - 
=== Succesors ===
next: v637 
=== Usages ===
i91 
=== Predecessor ===
v632 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v963 lastLocationAccess: - #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i942 
y: i408 
=== Succesors ===
=== Usages ===
j909 v423 v476 i429 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i942 y: i408  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i88 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i91 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v636 
=== Usages ===
=== Predecessor ===
i942 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v635 #falseSuccessor: v636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
result int[-162329|0xfffffffffffd85e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: -162329
stableDimension: 0
stamp: i32 [-162329]
stampKind: i32
value: int[-162329|0xfffffffffffd85e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162329|0xfffffffffffd85e7], long[0|0x0]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i937 
y: i91 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i937 y: i91  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v639 
falseSuccessor: v640 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v639 #falseSuccessor: v640  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid i704 <|@
result int[-163353|0xfffffffffffd81e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: -163353
stableDimension: 0
stamp: i32 [-163353]
stampKind: i32
value: int[-163353|0xfffffffffffd81e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v639 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163353|0xfffffffffffd81e7], long[0|0x0]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v645 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v645  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i938 
y: i91 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i938 y: i91  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i429 
y: i89 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i429 y: i89  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v643 
falseSuccessor: v644 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v643 #falseSuccessor: v644  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid i706 <|@
result int[-164377|0xfffffffffffd7de7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: -164377
stableDimension: 0
stamp: i32 [-164377]
stampKind: i32
value: int[-164377|0xfffffffffffd7de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v643 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164377|0xfffffffffffd7de7], long[0|0x0]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: j902 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j902  <|@  <|@
f <@~|@floating>@ <|@
tid a415 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a936 
=== Succesors ===
=== Usages ===
j902 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j902 <|@
result v114|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i64
=== Inputs ===
object: a415 
=== Succesors ===
next: j904 
=== Usages ===
v995 
=== Predecessor ===
v644 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a415 #next: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j904 <|@
result v115|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i64
=== Inputs ===
object: a265 
=== Succesors ===
next: v910 
=== Usages ===
v996 
=== Predecessor ===
j902 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a265 #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
result [v114|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i89 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
result [v115|QWORD[*] + v109|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j904 
index: j905 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: j905  <|@  <|@
f <@~|@floating>@ <|@
tid j909 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i91 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v995 v996 j909 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
j904 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v995 v996 j909 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 51]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32
=== Inputs ===
x: i932 
y: i941 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i932 y: i941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: i943 
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 lastLocationAccess: - value: i45 stateAfter: - #next: i943  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
result [v0|QWORD[.] + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i943 v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i943 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
lastLocationAccess: - 
=== Succesors ===
next: i944 
=== Usages ===
i448 
=== Predecessor ===
v444 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v967 lastLocationAccess: - #next: i944  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
result [v1|QWORD[.] + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i944 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
i451 
=== Predecessor ===
i943 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v968 lastLocationAccess: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i448 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i943 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i943  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i944 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i944  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 64]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i448 
y: i451 
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i448 y: i451  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i50 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.maybeLatin1
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
lastLocationAccess: - 
value: i452 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i944 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v967 lastLocationAccess: - value: i452 stateAfter: - #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 40]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid j700 <|@
result long[3860|0xf14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: 3860
stableDimension: 0
stamp: i64 [3860]
stampKind: i64
value: long[3860|0xf14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i699 <|@
result int[-160275|0xfffffffffffd8ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
rawvalue: -160275
stableDimension: 0
stamp: i32 [-160275]
stampKind: i32
value: int[-160275|0xfffffffffffd8ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160275|0xfffffffffffd8ded], long[3860|0xf14]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i691 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i32 [-164377 - -160275] bits:1...101xxxxxx011110x1x1
valueDescription: i32
=== Inputs ===
merge: v688 
values: i697 i699 i702 i704 i706 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v688 values: i697 i699 i702 i704 i706  <|@  <|@
f <@~|@floating>@ <|@
tid j692 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: i64 [0 - 3860] bits:0...0xxxx000x0x00
valueDescription: i64
=== Inputs ===
merge: v688 
values: j665 j700 j665 j665 j665 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v688 values: j665 j700 j665 j665 j665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v696 v698 v701 v703 v705 
=== Succesors ===
next: v693 
=== Usages ===
i691 j692 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v696 v698 v701 v703 v705 #next: v693  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
stateBefore: ?78 
actionAndReason: i691 
speculation: j692 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?78 actionAndReason: i691 speculation: j692  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid j678 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
result int[-100147|0xfffffffffffe78cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -100147
stableDimension: 0
stamp: i32 [-100147]
stampKind: i32
value: int[-100147|0xfffffffffffe78cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100147|0xfffffffffffe78cd], long[1940|0x794]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid j675 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
result int[-99891|0xfffffffffffe79cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
rawvalue: -99891
stableDimension: 0
stamp: i32 [-99891]
stampKind: i32
value: int[-99891|0xfffffffffffe79cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99891|0xfffffffffffe79cd], long[660|0x294]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i660 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: i32 [-156185 - -68915] bits:1...1xxxxxxxxxx11x0x1x1
valueDescription: i32
=== Inputs ===
merge: v657 
values: i669 i674 i677 i680 i683 i685 i687 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v657 values: i669 i674 i677 i680 i683 i685 i687  <|@  <|@
f <@~|@floating>@ <|@
tid j661 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: i64 [0 - 6420] bits:0...0xxxxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v657 
values: j670 j675 j678 j681 j665 j665 j665 
=== Succesors ===
=== Usages ===
v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v657 values: j670 j675 j678 j681 j665 j665 j665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v668 v673 v676 v679 v682 v684 v686 
=== Succesors ===
next: v662 
=== Usages ===
i660 j661 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v668 v673 v676 v679 v682 v684 v686 #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i660 
speculation: j661 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i660 speculation: j661  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v92|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99891|0xfffffffffffe79cd], long[660|0x294]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150041|0xfffffffffffdb5e7]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155161|0xfffffffffffda1e7], long[0|0x0]] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68915|0xfffffffffffef2cd], long[5140|0x1414]] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[6420|0x1914]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100147|0xfffffffffffe78cd], long[1940|0x794]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163353|0xfffffffffffd81e7], long[0|0x0]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162329|0xfffffffffffd85e7], long[0|0x0]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151065|0xfffffffffffdb1e7]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160275|0xfffffffffffd8ded], long[3860|0xf14]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154137|0xfffffffffffda5e7], long[0|0x0]] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149017|0xfffffffffffdb9e7]] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164377|0xfffffffffffd7de7], long[0|0x0]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156185|0xfffffffffffd9de7], long[0|0x0]] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147993|0xfffffffffffdbde7]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-161305|0xfffffffffffd89e7], long[0|0x0]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v92|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99891|0xfffffffffffe79cd], long[660|0x294]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150041|0xfffffffffffdb5e7]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155161|0xfffffffffffda1e7], long[0|0x0]] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68915|0xfffffffffffef2cd], long[5140|0x1414]] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[6420|0x1914]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100147|0xfffffffffffe78cd], long[1940|0x794]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163353|0xfffffffffffd81e7], long[0|0x0]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162329|0xfffffffffffd85e7], long[0|0x0]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151065|0xfffffffffffdb1e7]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160275|0xfffffffffffd8ded], long[3860|0xf14]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154137|0xfffffffffffda5e7], long[0|0x0]] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149017|0xfffffffffffdb9e7]] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164377|0xfffffffffffd7de7], long[0|0x0]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156185|0xfffffffffffd9de7], long[0|0x0]] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147993|0xfffffffffffdbde7]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-161305|0xfffffffffffd89e7], long[0|0x0]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v92|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99891|0xfffffffffffe79cd], long[660|0x294]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150041|0xfffffffffffdb5e7]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155161|0xfffffffffffda1e7], long[0|0x0]] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68915|0xfffffffffffef2cd], long[5140|0x1414]] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[6420|0x1914]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100147|0xfffffffffffe78cd], long[1940|0x794]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163353|0xfffffffffffd81e7], long[0|0x0]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162329|0xfffffffffffd85e7], long[0|0x0]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151065|0xfffffffffffdb1e7]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160275|0xfffffffffffd8ded], long[3860|0xf14]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154137|0xfffffffffffda5e7], long[0|0x0]] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149017|0xfffffffffffdb9e7]] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164377|0xfffffffffffd7de7], long[0|0x0]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156185|0xfffffffffffd9de7], long[0|0x0]] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147993|0xfffffffffffdbde7]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-161305|0xfffffffffffd89e7], long[0|0x0]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v92|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99891|0xfffffffffffe79cd], long[660|0x294]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150041|0xfffffffffffdb5e7]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155161|0xfffffffffffda1e7], long[0|0x0]] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68915|0xfffffffffffef2cd], long[5140|0x1414]] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[6420|0x1914]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100147|0xfffffffffffe78cd], long[1940|0x794]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163353|0xfffffffffffd81e7], long[0|0x0]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162329|0xfffffffffffd85e7], long[0|0x0]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151065|0xfffffffffffdb1e7]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160275|0xfffffffffffd8ded], long[3860|0xf14]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154137|0xfffffffffffda5e7], long[0|0x0]] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149017|0xfffffffffffdb9e7]] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164377|0xfffffffffffd7de7], long[0|0x0]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156185|0xfffffffffffd9de7], long[0|0x0]] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147993|0xfffffffffffdbde7]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-161305|0xfffffffffffd89e7], long[0|0x0]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v92|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99891|0xfffffffffffe79cd], long[660|0x294]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150041|0xfffffffffffdb5e7]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155161|0xfffffffffffda1e7], long[0|0x0]] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68915|0xfffffffffffef2cd], long[5140|0x1414]] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[6420|0x1914]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100147|0xfffffffffffe78cd], long[1940|0x794]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163353|0xfffffffffffd81e7], long[0|0x0]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162329|0xfffffffffffd85e7], long[0|0x0]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151065|0xfffffffffffdb1e7]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160275|0xfffffffffffd8ded], long[3860|0xf14]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154137|0xfffffffffffda5e7], long[0|0x0]] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-149017|0xfffffffffffdb9e7]] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164377|0xfffffffffffd7de7], long[0|0x0]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156185|0xfffffffffffd9de7], long[0|0x0]] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147993|0xfffffffffffdbde7]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-161305|0xfffffffffffd89e7], long[0|0x0]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  184  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  188  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  368  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  370  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [v92|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  394  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  418  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  582  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  584  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  642  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  682  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  710  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  714  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  716  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  758  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  778  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  836  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  928  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1044  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1048  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1202  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1206  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1216  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1220  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1222  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr 1224  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1226  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr 1278  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr 1280  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1328  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr 1332  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr 1334  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr 1336  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1374  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1432  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1436  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1438  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1440  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1468  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1470  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1472  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1474  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1478  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr 1480  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1484  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr 1524  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1556  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [int[-99891|0xfffffffffffe79cd], long[660|0x294]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction JUMP ~outgoingValues: [int[-150041|0xfffffffffffdb5e7]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction JUMP ~outgoingValues: [int[-155161|0xfffffffffffda1e7], long[0|0x0]] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [int[-68915|0xfffffffffffef2cd], long[5140|0x1414]] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[6420|0x1914]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [int[-100147|0xfffffffffffe78cd], long[1940|0x794]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [int[-163353|0xfffffffffffd81e7], long[0|0x0]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction JUMP ~outgoingValues: [int[-162329|0xfffffffffffd85e7], long[0|0x0]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction JUMP ~outgoingValues: [int[-151065|0xfffffffffffdb1e7]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction JUMP ~outgoingValues: [int[-160275|0xfffffffffffd8ded], long[3860|0xf14]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [int[-154137|0xfffffffffffda5e7], long[0|0x0]] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [int[-149017|0xfffffffffffdb9e7]] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [int[-164377|0xfffffffffffd7de7], long[0|0x0]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction JUMP ~outgoingValues: [int[-156185|0xfffffffffffd9de7], long[0|0x0]] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1702  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr 1722  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [int[-147993|0xfffffffffffdbde7]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1734  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1754  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction JUMP ~outgoingValues: [int[-161305|0xfffffffffffd89e7], long[0|0x0]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1766  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr 1784  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr 1786  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  184  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  188  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  368  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  370  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [v92|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  394  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  418  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  582  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  584  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  642  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  682  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  710  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  714  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  716  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  758  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  778  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  836  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  928  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1044  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1048  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1202  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1206  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1216  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1220  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1222  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr 1224  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1226  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr 1278  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr 1280  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1328  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr 1332  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr 1334  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr 1336  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1374  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1432  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1436  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1438  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1440  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1468  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1470  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1472  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1474  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1478  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr 1480  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1484  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr 1524  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1556  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [int[-99891|0xfffffffffffe79cd], long[660|0x294]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction JUMP ~outgoingValues: [int[-150041|0xfffffffffffdb5e7]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction JUMP ~outgoingValues: [int[-155161|0xfffffffffffda1e7], long[0|0x0]] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [int[-68915|0xfffffffffffef2cd], long[5140|0x1414]] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[6420|0x1914]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [int[-100147|0xfffffffffffe78cd], long[1940|0x794]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [int[-163353|0xfffffffffffd81e7], long[0|0x0]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction JUMP ~outgoingValues: [int[-162329|0xfffffffffffd85e7], long[0|0x0]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction JUMP ~outgoingValues: [int[-151065|0xfffffffffffdb1e7]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction JUMP ~outgoingValues: [int[-160275|0xfffffffffffd8ded], long[3860|0xf14]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [int[-154137|0xfffffffffffda5e7], long[0|0x0]] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [int[-149017|0xfffffffffffdb9e7]] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [int[-164377|0xfffffffffffd7de7], long[0|0x0]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction JUMP ~outgoingValues: [int[-156185|0xfffffffffffd9de7], long[0|0x0]] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1702  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr 1722  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [int[-147993|0xfffffffffffdbde7]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1734  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1754  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction JUMP ~outgoingValues: [int[-161305|0xfffffffffffd89e7], long[0|0x0]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1766  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr 1784  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr 1786  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[280, 281[[306, 308[[574, 575[[588, 590[[924, 925[[1200, 1202[[1214, 1216[[1246, 1247[[1372, 1374[[1402, 1403[[1524, 1525[[1554, 1556[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|d [0, 1[[104, 107[[112, 115[[214, 217[[280, 281[[374, 377[[444, 447[[468, 471[[574, 575[[624, 627[[632, 635[[672, 675[[676, 679[[924, 925[[1200, 1201[[1206, 1209[[1214, 1215[[1246, 1247[[1340, 1342[[1400, 1403[[1524, 1525[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v74|q [0, 28[[278, 281[[572, 575[[922, 925[[1198, 1201[[1212, 1215[[1246, 1247[[1338, 1343[[1370, 1372[[1522, 1525[[1552, 1554[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 26[[276, 281[[570, 575[[920, 925[[1196, 1201[[1210, 1215[[1244, 1247[[1336, 1343[[1368, 1372[[1520, 1525[[1550, 1554[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[274, 281[[568, 575[[918, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1402, 1403[[1518, 1525[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1524, 1525[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1524, 1525[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [26, 306[[310, 588[[592, 1723[[1724, 1755[[1756, 1787[26 MustHaveRegister 32 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister 304 MustHaveRegister 306 ShouldHaveRegister 364 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 418 MustHaveRegister 440 MustHaveRegister 578 MustHaveRegister 580 MustHaveRegister 586 MustHaveRegister 588 ShouldHaveRegister 1042 MustHaveRegister 1046 MustHaveRegister 1048 MustHaveRegister 1196 ShouldHaveRegister 1204 MustHaveRegister 1218 MustHaveRegister 1222 MustHaveRegister 1224 MustHaveRegister 1244 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|d [28, 236[[310, 582[[592, 1282[[1346, 1723[[1724, 1755[[1756, 1787[28 MustHaveRegister 30 MustHaveRegister 88 MustHaveRegister 96 MustHaveRegister 180 MustHaveRegister 194 MustHaveRegister 368 MustHaveRegister 412 MustHaveRegister 420 MustHaveRegister 466 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [30, 36[[310, 320[30 MustHaveRegister 34 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [32, 46[[310, 332[32 MustHaveRegister 46 ShouldHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [90, 106[90 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [92, 120[[592, 680[92 MustHaveRegister 94 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [94, 120[[592, 866[[1346, 1478[[1528, 1552[94 MustHaveRegister 114 ShouldHaveRegister 628 ShouldHaveRegister 636 ShouldHaveRegister 642 ShouldHaveRegister 682 MustHaveRegister 850 MustHaveRegister 852 ShouldHaveRegister 866 ShouldHaveRegister 1432 ShouldHaveRegister 1478 MustHaveRegister 1552 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [96, 140[[592, 1052[[1346, 1562[96 MustHaveRegister 102 ShouldHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [98, 236[[592, 1052[[1228, 1328[[1346, 1562[[1572, 1582[[1642, 1652[[1672, 1682[[1724, 1755[98 MustHaveRegister 108 ShouldHaveRegister 216 ShouldHaveRegister 1260 MustHaveRegister 1278 ShouldHaveRegister 1328 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [100, 140[[592, 1052[[1346, 1562[100 MustHaveRegister 110 ShouldHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v5|d [106, 304[[592, 1052[[1228, 1562[[1572, 1582[[1642, 1652[[1672, 1682[[1724, 1755[106 MustHaveRegister 108 ShouldHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v9|d [108, 120[[592, 626[108 MustHaveRegister 116 MustHaveRegister 626 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [110, 120[[592, 676[110 MustHaveRegister 112 ShouldHaveRegister 624 ShouldHaveRegister 632 ShouldHaveRegister 672 ShouldHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v7|d [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v13|d [116, 118[116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v13|d [626, 628[626 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v17|d [628, 640[628 MustHaveRegister 638 ShouldHaveRegister 640 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v20|d [634, 636[634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [630, 634[630 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v19|d [636, 641[636 MustHaveRegister 638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v18|d [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v22|d [642, 674[642 MustHaveRegister 644 ShouldHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v23|d [644, 646[644 MustHaveRegister 646 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v23|d [674, 678[674 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v25|d [678, 878[[1346, 1406[678 MustHaveRegister 682 ShouldHaveRegister 710 ShouldHaveRegister 762 MustHaveRegister 850 ShouldHaveRegister 852 MustHaveRegister 878 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v6|d [680, 912[[1346, 1514[[1528, 1562[680 MustHaveRegister 912 ShouldHaveRegister 1514 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [1430, 1480[1430 MustHaveRegister 1438 ShouldHaveRegister 1468 MustHaveRegister 1470 MustHaveRegister 1472 MustHaveRegister 1474 MustHaveRegister 1476 MustHaveRegister 1478 MustHaveRegister 1480 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v7|d [1432, 1522[[1528, 1562[1432 MustHaveRegister 1434 MustHaveRegister 1522 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [1434, 1436[1434 MustHaveRegister 1436 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|q [1436, 1473[1436 MustHaveRegister 1438 ShouldHaveRegister 1468 MustHaveRegister 1470 MustHaveRegister 1472 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v32|q [1438, 1466[1438 MustHaveRegister 1440 MustHaveRegister 1466 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q rax|q [1556, 1561[1556 MustHaveRegister 1558 MustHaveRegister 1560 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v29|q [1480, 1483[1480 MustHaveRegister 1482 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v36|q [1484, 1527[1516 ShouldHaveRegister 1526 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v27|q [1514, 1518[1514 MustHaveRegister 1518 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v37|q [1516, 1520[1516 MustHaveRegister 1520 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [708, 832[[1380, 1406[708 MustHaveRegister 716 ShouldHaveRegister 752 MustHaveRegister 754 MustHaveRegister 756 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister 762 MustHaveRegister 806 MustHaveRegister 811 LiveAtLoopEnd 832 ShouldHaveRegister 1402 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v26|d [710, 712[710 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [712, 714[712 MustHaveRegister 714 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v42|q [714, 812[714 MustHaveRegister 716 ShouldHaveRegister 752 MustHaveRegister 754 MustHaveRegister 756 MustHaveRegister 764 MustHaveRegister 788 MustHaveRegister 811 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v43|q [716, 750[716 MustHaveRegister 718 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q rax|q [1374, 1379[1374 MustHaveRegister 1376 MustHaveRegister 1378 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [764, 768[[1380, 1400[764 MustHaveRegister 766 ShouldHaveRegister 1400 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v48|q [778, 808[788 ShouldHaveRegister 806 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v47|q [808, 811[808 MustHaveRegister 810 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v40|q [832, 835[832 MustHaveRegister 834 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v50|q [836, 927[914 ShouldHaveRegister 926 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d v7|d [852, 916[852 MustHaveRegister 854 MustHaveRegister 866 MustHaveRegister 878 MustHaveRegister 916 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v27|q [912, 918[912 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v51|q [914, 920[914 MustHaveRegister 920 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v52|d [916, 922[916 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v51|q [928, 1049[1044 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [1042, 1043[1042 MustHaveRegister  "NoDefinitionFound"
  v58|q QWORD "[v58|q]" v58|q -1 [1042, 1043[1042 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[v59|d]" v59|d v56|q [1044, 1046[1044 MustHaveRegister 1046 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [1048, 1049[1048 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[v61|q]" v61|q -1 [1048, 1049[1048 MustHaveRegister  "NoDefinitionFound"
  v62|d DWORD "[v62|d]" v62|d -1 [180, 192[180 MustHaveRegister 182 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d -1 [182, 272[[1250, 1340[182 MustHaveRegister 232 ShouldHaveRegister 272 ShouldHaveRegister 1278 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d -1 [184, 190[184 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [186, 232[[1250, 1276[186 MustHaveRegister 232 MustHaveRegister 1276 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d -1 [188, 212[188 MustHaveRegister 194 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v64|d [190, 270[[1250, 1324[190 MustHaveRegister 270 ShouldHaveRegister 1324 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v62|d [192, 268[[1250, 1322[192 MustHaveRegister 268 ShouldHaveRegister 1322 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d -1 [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d v9|d [216, 276[216 MustHaveRegister 218 MustHaveRegister 234 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d v65|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q v68|q [268, 274[268 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q v67|q [270, 276[270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q v63|d [272, 278[272 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[v75|d]" v75|d v65|d [1276, 1280[1276 MustHaveRegister 1280 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d v9|d [1278, 1280[1278 MustHaveRegister 1280 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d -1 [1734, 1750[1750 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v68|q [1322, 1326[1322 MustHaveRegister 1326 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q v67|q [1324, 1334[1324 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q -1 [1326, 1336[1326 MustHaveRegister 1336 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q v9|d [1328, 1330[1328 MustHaveRegister 1330 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q v81|q [1330, 1332[1330 MustHaveRegister 1332 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q -1 [1332, 1334[1332 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q v83|q [1334, 1338[1334 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d -1 [364, 380[364 MustHaveRegister 366 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [366, 376[366 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d -1 [368, 576[[1052, 1228[[1622, 1642[[1652, 1662[[1682, 1692[[1756, 1787[368 MustHaveRegister 370 MustHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d v87|d [370, 384[[1052, 1198[370 MustHaveRegister 378 MustHaveRegister 1198 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d -1 [372, 374[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[v90|d]" v90|d v86|d [376, 379[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[v91|d]" v91|d v88|d [378, 382[378 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[v92|q]" v92|q v85|d [380, 393[[1052, 1210[380 MustHaveRegister 392 ShouldHaveRegister 1210 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[v93|d]" v93|d rax|q [1202, 1208[1202 MustHaveRegister 1208 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[v94|d]" v94|d -1 [1204, 1206[1204 MustHaveRegister 1206 ShouldHaveRegister  "NoSpillStore"
  v95|d DWORD "[v95|d]" v95|d v93|d [1208, 1212[1208 MustHaveRegister 1212 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q rax|q [1216, 1227[1216 MustHaveRegister 1220 MustHaveRegister 1224 MustHaveRegister 1226 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[v97|q]" v97|q -1 [1218, 1219[1218 MustHaveRegister  "NoDefinitionFound"
  v98|q QWORD "[v98|q]" v98|q -1 [1218, 1219[1218 MustHaveRegister  "NoDefinitionFound"
  v99|d DWORD "[v99|d]" v99|d v96|q [1220, 1222[1220 MustHaveRegister 1222 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[v100|q]" v100|q -1 [1224, 1225[1224 MustHaveRegister  "NoDefinitionFound"
  v101|q QWORD "[v101|q]" v101|q -1 [1224, 1225[1224 MustHaveRegister  "NoDefinitionFound"
  v102|q QWORD "[v102|q]" v102|q v92|q [394, 564[416 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[v103|d]" v103|d -1 [412, 560[412 MustHaveRegister 414 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d -1 [414, 484[414 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[v105|d]" v105|d -1 [416, 498[416 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d -1 [418, 442[418 MustHaveRegister 420 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[v107|d]" v107|d -1 [440, 576[440 MustHaveRegister 446 ShouldHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[v108|d]" v108|d -1 [442, 468[442 MustHaveRegister 444 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[v109|d]" v109|d v107|d [446, 570[446 MustHaveRegister 448 MustHaveRegister 500 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[v110|d]" v110|d -1 [466, 470[466 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[v111|d]" v111|d v110|d [470, 566[470 MustHaveRegister 472 MustHaveRegister 484 MustHaveRegister 498 ShouldHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[v112|d]" v112|d v105|d [498, 500[498 MustHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[v113|q]" v113|q v103|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[v114|q]" v114|q v113|q [562, 568[562 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[v115|q]" v115|q v102|q [564, 570[564 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[v116|q]" v116|q v111|d [566, 572[566 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[v117|d]" v117|d v87|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v118|d DWORD "[v118|d]" v118|d -1 [580, 584[580 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[v119|d]" v119|d -1 [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v120|d DWORD "[v120|d]" v120|d v118|d [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[v121|d]" v121|d -1 [1766, 1782[1782 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[v122|q]" v122|q -1 [1766, 1784[1784 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[v123|d]" v123|d -1 [1702, 1718[1718 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[v124|q]" v124|q -1 [1702, 1720[1720 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[v125|q]" v125|q -1 [1348, 1368[1348 MustHaveRegister 1368 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[v126|q]" v126|q -1 [1530, 1550[1530 MustHaveRegister 1550 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[280, 281[[306, 308[[574, 575[[588, 590[[924, 925[[1200, 1202[[1214, 1216[[1246, 1247[[1372, 1374[[1402, 1403[[1524, 1525[[1554, 1556[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|d [0, 1[[104, 107[[112, 115[[214, 217[[280, 281[[374, 377[[444, 447[[468, 471[[574, 575[[624, 627[[632, 635[[672, 675[[676, 679[[924, 925[[1200, 1201[[1206, 1209[[1214, 1215[[1246, 1247[[1340, 1342[[1400, 1403[[1524, 1525[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v74|q [0, 28[[278, 281[[572, 575[[922, 925[[1198, 1201[[1212, 1215[[1246, 1247[[1338, 1343[[1370, 1372[[1522, 1525[[1552, 1554[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 26[[276, 281[[570, 575[[920, 925[[1196, 1201[[1210, 1215[[1244, 1247[[1336, 1343[[1368, 1372[[1520, 1525[[1550, 1554[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[274, 281[[568, 575[[918, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1402, 1403[[1518, 1525[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1524, 1525[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1524, 1525[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 236[26 MustHaveRegister 32 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [28, 236[[310, 502[28 MustHaveRegister 30 MustHaveRegister 88 MustHaveRegister 96 MustHaveRegister 180 MustHaveRegister 194 MustHaveRegister 368 MustHaveRegister 412 MustHaveRegister 420 MustHaveRegister 466 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[r10|d]" v2|d -1 [30, 36[[310, 320[30 MustHaveRegister 34 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [32, 46[[310, 332[32 MustHaveRegister 46 ShouldHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rcx|d]" v4|d -1 [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [90, 106[90 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [92, 120[[592, 680[92 MustHaveRegister 94 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [94, 120[[592, 866[[1346, 1478[[1528, 1552[94 MustHaveRegister 114 ShouldHaveRegister 628 ShouldHaveRegister 636 ShouldHaveRegister 642 ShouldHaveRegister 682 MustHaveRegister 850 MustHaveRegister 852 ShouldHaveRegister 866 ShouldHaveRegister 1432 ShouldHaveRegister 1478 MustHaveRegister 1552 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [96, 140[[592, 880[96 MustHaveRegister 102 ShouldHaveRegister 140 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [98, 236[[592, 880[98 MustHaveRegister 108 ShouldHaveRegister 216 ShouldHaveRegister  "SpillInDominator"
  v10|d DWORD "[rbx|d]" v10|d -1 [100, 140[[592, 880[100 MustHaveRegister 110 ShouldHaveRegister 140 MustHaveRegister  "OneSpillStore"
  v11|d DWORD "[rcx|d]" v11|d -1 [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdi|d]" v12|d v5|d [106, 236[106 MustHaveRegister 108 ShouldHaveRegister  "SpillInDominator"
  v13|d DWORD "[rax|d]" v13|d v9|d [108, 120[[592, 626[108 MustHaveRegister 116 MustHaveRegister 626 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [110, 120[[592, 676[110 MustHaveRegister 112 ShouldHaveRegister 624 ShouldHaveRegister 632 ShouldHaveRegister 672 ShouldHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d v7|d [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d v13|d [116, 118[116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v13|d [626, 628[626 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v17|d [628, 640[628 MustHaveRegister 638 ShouldHaveRegister 640 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d v20|d [634, 636[634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r13|d]" v20|d -1 [630, 634[630 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r13|d]" v21|d v19|d [636, 641[636 MustHaveRegister 638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v18|d [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [642, 674[642 MustHaveRegister 644 ShouldHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rcx|d]" v24|d v23|d [644, 646[644 MustHaveRegister 646 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d v23|d [674, 678[674 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rbp|d]" v26|d v25|d [678, 878[[1346, 1406[678 MustHaveRegister 682 ShouldHaveRegister 710 ShouldHaveRegister 762 MustHaveRegister 850 ShouldHaveRegister 852 MustHaveRegister 878 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r10|q]" v27|q v6|d [680, 912[680 MustHaveRegister 912 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [1430, 1480[1430 MustHaveRegister 1438 ShouldHaveRegister 1468 MustHaveRegister 1470 MustHaveRegister 1472 MustHaveRegister 1474 MustHaveRegister 1476 MustHaveRegister 1478 MustHaveRegister 1480 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r8|q]" v30|q v7|d [1432, 1522[[1528, 1562[1432 MustHaveRegister 1434 MustHaveRegister 1522 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [1434, 1436[1434 MustHaveRegister 1436 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v31|q [1436, 1473[1436 MustHaveRegister 1438 ShouldHaveRegister 1468 MustHaveRegister 1470 MustHaveRegister 1472 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v32|q [1438, 1466[1438 MustHaveRegister 1440 MustHaveRegister 1466 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [1556, 1561[1556 MustHaveRegister 1558 MustHaveRegister 1560 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v29|q [1480, 1483[1480 MustHaveRegister 1482 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v36|q [1484, 1517[1516 ShouldHaveRegister  "OneSpillStore"
  v38|q QWORD "[r10|q]" v38|q v27|q [1514, 1518[1514 MustHaveRegister 1518 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q v37|q [1516, 1520[1516 MustHaveRegister 1520 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r13|q]" v40|q -1 [708, 832[[1380, 1406[708 MustHaveRegister 716 ShouldHaveRegister 752 MustHaveRegister 754 MustHaveRegister 756 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister 762 MustHaveRegister 806 MustHaveRegister 811 LiveAtLoopEnd 832 ShouldHaveRegister 1402 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q v26|d [710, 712[710 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q -1 [712, 714[712 MustHaveRegister 714 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rcx|q]" v43|q v42|q [714, 812[714 MustHaveRegister 716 ShouldHaveRegister 752 MustHaveRegister 754 MustHaveRegister 756 MustHaveRegister 764 MustHaveRegister 788 MustHaveRegister 811 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v43|q [716, 750[716 MustHaveRegister 718 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q rax|q [1374, 1379[1374 MustHaveRegister 1376 MustHaveRegister 1378 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q -1 [764, 768[[1380, 1400[764 MustHaveRegister 766 ShouldHaveRegister 1400 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v48|q [778, 808[788 ShouldHaveRegister 806 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q v47|q [808, 811[808 MustHaveRegister 810 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[r13|q]" v50|q v40|q [832, 835[832 MustHaveRegister 834 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[r13|q]" v51|q v50|q [836, 923[914 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[rcx|d]" v52|d v7|d [852, 916[852 MustHaveRegister 854 MustHaveRegister 866 MustHaveRegister 878 MustHaveRegister 916 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[r10|q]" v53|q v27|q [912, 918[912 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r11|q]" v54|q v51|q [914, 920[914 MustHaveRegister 920 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q v52|d [916, 922[916 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[r13|q]" v56|q v51|q [928, 1049[1044 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q -1 [1042, 1043[1042 MustHaveRegister  "NoDefinitionFound"
  v58|q QWORD "[r10|q]" v58|q -1 [1042, 1043[1042 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rdx|d]" v59|d v56|q [1044, 1046[1044 MustHaveRegister 1046 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [1048, 1049[1048 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[r10|q]" v61|q -1 [1048, 1049[1048 MustHaveRegister  "NoDefinitionFound"
  v62|d DWORD "[rcx|d]" v62|d -1 [180, 192[180 MustHaveRegister 182 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d -1 [182, 272[182 MustHaveRegister 232 ShouldHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r11|d]" v64|d -1 [184, 190[184 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r8|d]" v65|d -1 [186, 232[[1250, 1276[186 MustHaveRegister 232 MustHaveRegister 1276 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[rbx|d]" v66|d -1 [188, 212[188 MustHaveRegister 194 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[r11|q]" v67|q v64|d [190, 270[[1250, 1324[190 MustHaveRegister 270 ShouldHaveRegister 1324 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q v62|d [192, 268[[1250, 1322[192 MustHaveRegister 268 ShouldHaveRegister 1322 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rcx|d]" v69|d -1 [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rbx|d]" v70|d v9|d [216, 276[216 MustHaveRegister 218 MustHaveRegister 234 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d v65|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q v68|q [268, 274[268 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[r11|q]" v73|q v67|q [270, 276[270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r10|q]" v74|q v63|d [272, 278[272 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[r8|d]" v75|d v65|d [1276, 1280[1276 MustHaveRegister 1280 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d v9|d [1278, 1280[1278 MustHaveRegister 1280 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[r10|d]" v77|d -1 [1734, 1750[1750 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rax|q]" v78|q v68|q [1322, 1326[1322 MustHaveRegister 1326 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[r11|q]" v79|q v67|q [1324, 1334[1324 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [1326, 1336[1326 MustHaveRegister 1336 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[r9|q]" v81|q v9|d [1328, 1330[1328 MustHaveRegister 1330 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[r9|q]" v82|q v81|q [1330, 1332[1330 MustHaveRegister 1332 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q -1 [1332, 1334[1332 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdx|q]" v84|q v83|q [1334, 1338[1334 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rdi|d]" v85|d -1 [364, 380[364 MustHaveRegister 366 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r10|d]" v86|d -1 [366, 376[366 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [368, 502[368 MustHaveRegister 370 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[r8|d]" v88|d v87|d [370, 384[[1052, 1198[370 MustHaveRegister 378 MustHaveRegister 1198 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rcx|d]" v89|d -1 [372, 374[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[r10|d]" v90|d v86|d [376, 379[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rcx|d]" v91|d v88|d [378, 382[378 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[rdi|q]" v92|q v85|d [380, 393[380 MustHaveRegister 392 ShouldHaveRegister  "OneSpillStore"
  v93|d DWORD "[rax|d]" v93|d rax|q [1202, 1208[1202 MustHaveRegister 1208 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[rcx|d]" v94|d -1 [1204, 1206[1204 MustHaveRegister 1206 ShouldHaveRegister  "NoSpillStore"
  v95|d DWORD "[rax|d]" v95|d v93|d [1208, 1212[1208 MustHaveRegister 1212 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q rax|q [1216, 1227[1216 MustHaveRegister 1220 MustHaveRegister 1224 MustHaveRegister 1226 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[r10|q]" v97|q -1 [1218, 1219[1218 MustHaveRegister  "NoDefinitionFound"
  v98|q QWORD "[r11|q]" v98|q -1 [1218, 1219[1218 MustHaveRegister  "NoDefinitionFound"
  v99|d DWORD "[r10|d]" v99|d v96|q [1220, 1222[1220 MustHaveRegister 1222 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[r10|q]" v100|q -1 [1224, 1225[1224 MustHaveRegister  "NoDefinitionFound"
  v101|q QWORD "[r11|q]" v101|q -1 [1224, 1225[1224 MustHaveRegister  "NoDefinitionFound"
  v102|q QWORD "[rdi|q]" v102|q v92|q [394, 564[416 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[r10|d]" v103|d -1 [412, 560[412 MustHaveRegister 414 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r8|d]" v104|d -1 [414, 484[414 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[r9|d]" v105|d -1 [416, 498[416 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rcx|d]" v106|d -1 [418, 442[418 MustHaveRegister 420 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rbx|d]" v107|d -1 [440, 502[440 MustHaveRegister 446 ShouldHaveRegister  "OneSpillStore"
  v108|d DWORD "[rax|d]" v108|d -1 [442, 468[442 MustHaveRegister 444 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rbp|d]" v109|d v107|d [446, 570[446 MustHaveRegister 448 MustHaveRegister 500 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[r13|d]" v110|d -1 [466, 470[466 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[r13|d]" v111|d v110|d [470, 566[470 MustHaveRegister 472 MustHaveRegister 484 MustHaveRegister 498 ShouldHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[r9|d]" v112|d v105|d [498, 500[498 MustHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[r10|q]" v113|q v103|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[r10|q]" v114|q v113|q [562, 568[562 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[r8|q]" v115|q v102|q [564, 570[564 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[r13|q]" v116|q v111|d [566, 572[566 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[r11|d]" v117|d v87|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v118|d DWORD "[rax|d]" v118|d -1 [580, 584[580 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[rcx|d]" v119|d -1 [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v120|d DWORD "[rax|d]" v120|d v118|d [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r10|d]" v121|d -1 [1766, 1782[1782 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[r11|q]" v122|q -1 [1766, 1784[1784 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[r10|d]" v123|d -1 [1702, 1718[1718 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[r11|q]" v124|q -1 [1702, 1720[1720 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rsi|q]" v125|q -1 [1348, 1368[1348 MustHaveRegister 1368 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q -1 [1530, 1550[1530 MustHaveRegister 1550 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[vstack:0|q]" v0|q v0|q [236, 275[ "SpillInDominator"
  v128|q QWORD "[vstack:4|q]" v1|q v1|q [502, 571[ "SpillInDominator"
  v129|d DWORD "[vstack:9|d]" v8|d v8|d [880, 923[ "OneSpillStore"
  v130|d DWORD "[vstack:8|d]" v9|d v9|d [880, 923[ "SpillInDominator"
  v131|d DWORD "[vstack:10|d]" v10|d v10|d [880, 923[ "OneSpillStore"
  v132|d DWORD "[vstack:2|d]" v12|d v12|d [236, 273[ "SpillInDominator"
  v133|d DWORD "[vstack:2|d]" v12|d v12|d [273, 279[ "SpillInDominator"
  v134|q QWORD "[vstack:0|q]" v0|q v0|q [275, 279[ "SpillInDominator"
  v135|d DWORD "[vstack:2|d]" v12|d v12|d [279, 284[ "SpillInDominator"
  v136|q QWORD "[vstack:0|q]" v0|q v0|q [279, 284[ "SpillInDominator"
  v137|q QWORD "[rsi|q]" v0|q v0|q [284, 306[[310, 502[304 MustHaveRegister 306 ShouldHaveRegister 364 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 418 MustHaveRegister 440 MustHaveRegister  "SpillInDominator"
  v138|d DWORD "[rdi|d]" v12|d v12|d [284, 304[[592, 880[304 MustHaveRegister  "SpillInDominator"
  v139|d DWORD "[vstack:2|d]" v12|d v12|d [880, 917[ "SpillInDominator"
  v140|q QWORD "[vstack:0|q]" v0|q v0|q [502, 569[ "SpillInDominator"
  v141|d DWORD "[vstack:5|d]" v87|d v87|d [502, 573[ "OneSpillStore"
  v142|q QWORD "[vstack:11|q]" v92|q v92|q [1052, 1199[ "OneSpillStore"
  v143|d DWORD "[vstack:6|d]" v107|d v107|d [502, 573[ "OneSpillStore"
  v144|d DWORD "[vstack:6|d]" v107|d v107|d [573, 576[576 ShouldHaveRegister  "OneSpillStore"
  v145|d DWORD "[vstack:5|d]" v87|d v87|d [573, 576[[1052, 1228[[1622, 1642[[1652, 1662[[1682, 1692[[1756, 1766[576 ShouldHaveRegister  "OneSpillStore"
  v146|q QWORD "[vstack:0|q]" v0|q v0|q [569, 573[ "SpillInDominator"
  v147|q QWORD "[vstack:4|q]" v1|q v1|q [571, 581[ "SpillInDominator"
  v148|q QWORD "[vstack:0|q]" v0|q v0|q [573, 577[ "SpillInDominator"
  v149|q QWORD "[rdx|q]" v1|q v1|q [581, 582[[592, 880[582 MustHaveRegister  "SpillInDominator"
  v150|d DWORD "[r8|d]" v87|d v87|d [1766, 1787[ "OneSpillStore"
  v151|q QWORD "[rsi|q]" v0|q v0|q [577, 588[[592, 880[578 MustHaveRegister 580 MustHaveRegister 586 MustHaveRegister 588 ShouldHaveRegister  "SpillInDominator"
  v152|q QWORD "[vstack:0|q]" v0|q v0|q [880, 919[ "SpillInDominator"
  v153|q QWORD "[vstack:4|q]" v1|q v1|q [880, 921[ "SpillInDominator"
  v154|q QWORD "[vstack:7|q]" v51|q v51|q [923, 927[926 ShouldHaveRegister  "OneSpillStore"
  v155|q QWORD "[vstack:0|q]" v0|q v0|q [919, 923[ "SpillInDominator"
  v156|d DWORD "[vstack:8|d]" v9|d v9|d [923, 1052[[1228, 1250[ "SpillInDominator"
  v157|q QWORD "[vstack:4|q]" v1|q v1|q [921, 1282[[1346, 1723[[1724, 1755[[1756, 1766[ "SpillInDominator"
  v158|d DWORD "[vstack:2|d]" v12|d v12|d [917, 923[ "SpillInDominator"
  v159|d DWORD "[vstack:10|d]" v10|d v10|d [923, 1052[[1346, 1562[ "OneSpillStore"
  v160|d DWORD "[vstack:9|d]" v8|d v8|d [923, 1052[[1346, 1562[ "OneSpillStore"
  v161|d DWORD "[vstack:2|d]" v12|d v12|d [923, 1052[[1228, 1562[[1572, 1582[[1642, 1652[[1672, 1682[[1724, 1734[ "SpillInDominator"
  v162|q QWORD "[vstack:0|q]" v0|q v0|q [923, 928[ "SpillInDominator"
  v163|q QWORD "[rdx|q]" v1|q v1|q [1766, 1787[ "SpillInDominator"
  v164|q QWORD "[rsi|q]" v0|q v0|q [928, 1195[1042 MustHaveRegister 1046 MustHaveRegister 1048 MustHaveRegister  "SpillInDominator"
  v165|d DWORD "[r9|d]" v9|d v9|d [1250, 1328[[1346, 1484[1260 MustHaveRegister 1278 ShouldHaveRegister 1328 ShouldHaveRegister  "SpillInDominator"
  v166|d DWORD "[rdi|d]" v12|d v12|d [1734, 1755[ "SpillInDominator"
  v167|q QWORD "[r10|q]" v0|q v0|q [1195, 1199[1196 ShouldHaveRegister  "SpillInDominator"
  v168|q QWORD "[vstack:11|q]" v92|q v92|q [1199, 1210[1210 ShouldHaveRegister  "OneSpillStore"
  v169|q QWORD "[vstack:0|q]" v0|q v0|q [1199, 1203[ "SpillInDominator"
  v170|q QWORD "[rsi|q]" v0|q v0|q [1203, 1209[1204 MustHaveRegister  "SpillInDominator"
  v171|q QWORD "[vstack:0|q]" v0|q v0|q [1209, 1213[ "SpillInDominator"
  v172|q QWORD "[vstack:0|q]" v0|q v0|q [1213, 1217[ "SpillInDominator"
  v173|q QWORD "[rsi|q]" v0|q v0|q [1217, 1243[1218 MustHaveRegister 1222 MustHaveRegister 1224 MustHaveRegister  "SpillInDominator"
  v174|q QWORD "[r10|q]" v0|q v0|q [1243, 1245[1244 ShouldHaveRegister  "SpillInDominator"
  v175|q QWORD "[vstack:0|q]" v0|q v0|q [1245, 1723[[1724, 1755[[1756, 1766[ "SpillInDominator"
  v176|d DWORD "[r10|d]" v63|d v63|d [1250, 1340[1278 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v177|q QWORD "[r10|q]" v27|q v27|q [1346, 1514[[1528, 1562[1514 ShouldHaveRegister  "NoSpillStore"
  v178|q QWORD "[rsi|q]" v0|q v0|q [1766, 1787[ "SpillInDominator"
  v179|d DWORD "[vstack:8|d]" v9|d v9|d [1484, 1523[ "SpillInDominator"
  v180|q QWORD "[vstack:12|q]" v37|q v37|q [1517, 1523[ "OneSpillStore"
  v181|d DWORD "[vstack:8|d]" v9|d v9|d [1523, 1562[[1572, 1582[[1642, 1652[[1672, 1682[[1724, 1734[ "SpillInDominator"
  v182|q QWORD "[vstack:12|q]" v37|q v37|q [1523, 1527[1526 ShouldHaveRegister  "OneSpillStore"
  v183|d DWORD "[r9|d]" v9|d v9|d [1734, 1755[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  184  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  188  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = STACKMOVE (input: v127|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = STACKMOVE (input: v133|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = STACKMOVE (input: v134|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  368  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  370  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [v92|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  394  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  418  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = STACKMOVE (input: v128|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = STACKMOVE (input: v143|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  584  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  642  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  682  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  710  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  714  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  716  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  758  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  778  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  836  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: v139|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = STACKMOVE (input: v153|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = STACKMOVE (input: v131|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = STACKMOVE (input: v129|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = STACKMOVE (input: v158|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = STACKMOVE (input: v130|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE (input: v155|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  928  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1044  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1048  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = STACKMOVE (input: v142|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1202  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1206  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE input: v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1210  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = STACKMOVE (input: v171|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1216  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE input: v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1220  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1222  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr 1224  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1226  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE input: v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v174|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr 1278  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr 1280  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1328  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr 1332  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr 1334  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr 1336  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1374  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1432  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1436  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1438  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1440  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1468  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1470  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1472  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1474  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1478  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr 1480  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1484  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = STACKMOVE (input: v179|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = STACKMOVE (input: v180|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1556  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [int[-99891|0xfffffffffffe79cd], long[660|0x294]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction JUMP ~outgoingValues: [int[-150041|0xfffffffffffdb5e7]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction JUMP ~outgoingValues: [int[-155161|0xfffffffffffda1e7], long[0|0x0]] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [int[-68915|0xfffffffffffef2cd], long[5140|0x1414]] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[6420|0x1914]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [int[-100147|0xfffffffffffe78cd], long[1940|0x794]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [int[-163353|0xfffffffffffd81e7], long[0|0x0]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction JUMP ~outgoingValues: [int[-162329|0xfffffffffffd85e7], long[0|0x0]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction JUMP ~outgoingValues: [int[-151065|0xfffffffffffdb1e7]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction JUMP ~outgoingValues: [int[-160275|0xfffffffffffd8ded], long[3860|0xf14]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [int[-154137|0xfffffffffffda5e7], long[0|0x0]] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [int[-149017|0xfffffffffffdb9e7]] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [int[-164377|0xfffffffffffd7de7], long[0|0x0]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction JUMP ~outgoingValues: [int[-156185|0xfffffffffffd9de7], long[0|0x0]] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1702  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr 1722  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [int[-147993|0xfffffffffffdbde7]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1734  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1754  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction JUMP ~outgoingValues: [int[-161305|0xfffffffffffd89e7], long[0|0x0]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1766  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr 1784  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr 1786  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[280, 281[[306, 308[[574, 575[[588, 590[[924, 925[[1200, 1202[[1214, 1216[[1246, 1247[[1372, 1374[[1402, 1403[[1524, 1525[[1554, 1556[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|d [0, 1[[104, 107[[112, 115[[214, 217[[280, 281[[374, 377[[444, 447[[468, 471[[574, 575[[624, 627[[632, 635[[672, 675[[676, 679[[924, 925[[1200, 1201[[1206, 1209[[1214, 1215[[1246, 1247[[1340, 1342[[1400, 1403[[1524, 1525[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v74|q [0, 28[[278, 281[[572, 575[[922, 925[[1198, 1201[[1212, 1215[[1246, 1247[[1338, 1343[[1370, 1372[[1522, 1525[[1552, 1554[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 26[[276, 281[[570, 575[[920, 925[[1196, 1201[[1210, 1215[[1244, 1247[[1336, 1343[[1368, 1372[[1520, 1525[[1550, 1554[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[274, 281[[568, 575[[918, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1402, 1403[[1518, 1525[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1524, 1525[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1524, 1525[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 236[26 MustHaveRegister 32 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [28, 236[[310, 502[28 MustHaveRegister 30 MustHaveRegister 88 MustHaveRegister 96 MustHaveRegister 180 MustHaveRegister 194 MustHaveRegister 368 MustHaveRegister 412 MustHaveRegister 420 MustHaveRegister 466 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[r10|d]" v2|d -1 [30, 36[[310, 320[30 MustHaveRegister 34 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [32, 46[[310, 332[32 MustHaveRegister 46 ShouldHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rcx|d]" v4|d -1 [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [90, 106[90 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [92, 120[[592, 680[92 MustHaveRegister 94 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [94, 120[[592, 866[[1346, 1478[[1528, 1552[94 MustHaveRegister 114 ShouldHaveRegister 628 ShouldHaveRegister 636 ShouldHaveRegister 642 ShouldHaveRegister 682 MustHaveRegister 850 MustHaveRegister 852 ShouldHaveRegister 866 ShouldHaveRegister 1432 ShouldHaveRegister 1478 MustHaveRegister 1552 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [96, 140[[592, 880[96 MustHaveRegister 102 ShouldHaveRegister 140 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [98, 236[[592, 880[98 MustHaveRegister 108 ShouldHaveRegister 216 ShouldHaveRegister  "StoreAtDefinition"
  v10|d DWORD "[rbx|d]" v10|d -1 [100, 140[[592, 880[100 MustHaveRegister 110 ShouldHaveRegister 140 MustHaveRegister  "OneSpillStore"
  v11|d DWORD "[rcx|d]" v11|d -1 [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdi|d]" v12|d v5|d [106, 236[106 MustHaveRegister 108 ShouldHaveRegister  "StoreAtDefinition"
  v13|d DWORD "[rax|d]" v13|d v9|d [108, 120[[592, 626[108 MustHaveRegister 116 MustHaveRegister 626 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [110, 120[[592, 676[110 MustHaveRegister 112 ShouldHaveRegister 624 ShouldHaveRegister 632 ShouldHaveRegister 672 ShouldHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d v7|d [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d v13|d [116, 118[116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v13|d [626, 628[626 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v17|d [628, 640[628 MustHaveRegister 638 ShouldHaveRegister 640 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d v20|d [634, 636[634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r13|d]" v20|d -1 [630, 634[630 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r13|d]" v21|d v19|d [636, 641[636 MustHaveRegister 638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v18|d [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [642, 674[642 MustHaveRegister 644 ShouldHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rcx|d]" v24|d v23|d [644, 646[644 MustHaveRegister 646 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d v23|d [674, 678[674 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rbp|d]" v26|d v25|d [678, 878[[1346, 1406[678 MustHaveRegister 682 ShouldHaveRegister 710 ShouldHaveRegister 762 MustHaveRegister 850 ShouldHaveRegister 852 MustHaveRegister 878 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r10|q]" v27|q v6|d [680, 912[680 MustHaveRegister 912 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [1430, 1480[1430 MustHaveRegister 1438 ShouldHaveRegister 1468 MustHaveRegister 1470 MustHaveRegister 1472 MustHaveRegister 1474 MustHaveRegister 1476 MustHaveRegister 1478 MustHaveRegister 1480 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r8|q]" v30|q v7|d [1432, 1522[[1528, 1562[1432 MustHaveRegister 1434 MustHaveRegister 1522 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [1434, 1436[1434 MustHaveRegister 1436 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v31|q [1436, 1473[1436 MustHaveRegister 1438 ShouldHaveRegister 1468 MustHaveRegister 1470 MustHaveRegister 1472 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v32|q [1438, 1466[1438 MustHaveRegister 1440 MustHaveRegister 1466 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [1556, 1561[1556 MustHaveRegister 1558 MustHaveRegister 1560 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v29|q [1480, 1483[1480 MustHaveRegister 1482 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v36|q [1484, 1517[1516 ShouldHaveRegister  "OneSpillStore"
  v38|q QWORD "[r10|q]" v38|q v27|q [1514, 1518[1514 MustHaveRegister 1518 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q v37|q [1516, 1520[1516 MustHaveRegister 1520 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r13|q]" v40|q -1 [708, 832[[1380, 1406[708 MustHaveRegister 716 ShouldHaveRegister 752 MustHaveRegister 754 MustHaveRegister 756 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister 762 MustHaveRegister 806 MustHaveRegister 811 LiveAtLoopEnd 832 ShouldHaveRegister 1402 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q v26|d [710, 712[710 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q -1 [712, 714[712 MustHaveRegister 714 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rcx|q]" v43|q v42|q [714, 812[714 MustHaveRegister 716 ShouldHaveRegister 752 MustHaveRegister 754 MustHaveRegister 756 MustHaveRegister 764 MustHaveRegister 788 MustHaveRegister 811 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v43|q [716, 750[716 MustHaveRegister 718 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q rax|q [1374, 1379[1374 MustHaveRegister 1376 MustHaveRegister 1378 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q -1 [764, 768[[1380, 1400[764 MustHaveRegister 766 ShouldHaveRegister 1400 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v48|q [778, 808[788 ShouldHaveRegister 806 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q v47|q [808, 811[808 MustHaveRegister 810 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[r13|q]" v50|q v40|q [832, 835[832 MustHaveRegister 834 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[r13|q]" v51|q v50|q [836, 923[914 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[rcx|d]" v52|d v7|d [852, 916[852 MustHaveRegister 854 MustHaveRegister 866 MustHaveRegister 878 MustHaveRegister 916 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[r10|q]" v53|q v27|q [912, 918[912 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r11|q]" v54|q v51|q [914, 920[914 MustHaveRegister 920 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q v52|d [916, 922[916 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[r13|q]" v56|q v51|q [928, 1049[1044 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q -1 [1042, 1043[1042 MustHaveRegister  "NoDefinitionFound"
  v58|q QWORD "[r10|q]" v58|q -1 [1042, 1043[1042 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rdx|d]" v59|d v56|q [1044, 1046[1044 MustHaveRegister 1046 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [1048, 1049[1048 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[r10|q]" v61|q -1 [1048, 1049[1048 MustHaveRegister  "NoDefinitionFound"
  v62|d DWORD "[rcx|d]" v62|d -1 [180, 192[180 MustHaveRegister 182 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d -1 [182, 272[182 MustHaveRegister 232 ShouldHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r11|d]" v64|d -1 [184, 190[184 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r8|d]" v65|d -1 [186, 232[[1250, 1276[186 MustHaveRegister 232 MustHaveRegister 1276 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[rbx|d]" v66|d -1 [188, 212[188 MustHaveRegister 194 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[r11|q]" v67|q v64|d [190, 270[[1250, 1324[190 MustHaveRegister 270 ShouldHaveRegister 1324 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q v62|d [192, 268[[1250, 1322[192 MustHaveRegister 268 ShouldHaveRegister 1322 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rcx|d]" v69|d -1 [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rbx|d]" v70|d v9|d [216, 276[216 MustHaveRegister 218 MustHaveRegister 234 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d v65|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q v68|q [268, 274[268 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[r11|q]" v73|q v67|q [270, 276[270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r10|q]" v74|q v63|d [272, 278[272 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[r8|d]" v75|d v65|d [1276, 1280[1276 MustHaveRegister 1280 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d v9|d [1278, 1280[1278 MustHaveRegister 1280 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[r10|d]" v77|d -1 [1734, 1750[1750 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rax|q]" v78|q v68|q [1322, 1326[1322 MustHaveRegister 1326 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[r11|q]" v79|q v67|q [1324, 1334[1324 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [1326, 1336[1326 MustHaveRegister 1336 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[r9|q]" v81|q v9|d [1328, 1330[1328 MustHaveRegister 1330 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[r9|q]" v82|q v81|q [1330, 1332[1330 MustHaveRegister 1332 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q -1 [1332, 1334[1332 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdx|q]" v84|q v83|q [1334, 1338[1334 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rdi|d]" v85|d -1 [364, 380[364 MustHaveRegister 366 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r10|d]" v86|d -1 [366, 376[366 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [368, 502[368 MustHaveRegister 370 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[r8|d]" v88|d v87|d [370, 384[[1052, 1198[370 MustHaveRegister 378 MustHaveRegister 1198 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rcx|d]" v89|d -1 [372, 374[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[r10|d]" v90|d v86|d [376, 379[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rcx|d]" v91|d v88|d [378, 382[378 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[rdi|q]" v92|q v85|d [380, 393[380 MustHaveRegister 392 ShouldHaveRegister  "OneSpillStore"
  v93|d DWORD "[rax|d]" v93|d rax|q [1202, 1208[1202 MustHaveRegister 1208 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[rcx|d]" v94|d -1 [1204, 1206[1204 MustHaveRegister 1206 ShouldHaveRegister  "NoSpillStore"
  v95|d DWORD "[rax|d]" v95|d v93|d [1208, 1212[1208 MustHaveRegister 1212 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q rax|q [1216, 1227[1216 MustHaveRegister 1220 MustHaveRegister 1224 MustHaveRegister 1226 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[r10|q]" v97|q -1 [1218, 1219[1218 MustHaveRegister  "NoDefinitionFound"
  v98|q QWORD "[r11|q]" v98|q -1 [1218, 1219[1218 MustHaveRegister  "NoDefinitionFound"
  v99|d DWORD "[r10|d]" v99|d v96|q [1220, 1222[1220 MustHaveRegister 1222 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[r10|q]" v100|q -1 [1224, 1225[1224 MustHaveRegister  "NoDefinitionFound"
  v101|q QWORD "[r11|q]" v101|q -1 [1224, 1225[1224 MustHaveRegister  "NoDefinitionFound"
  v102|q QWORD "[rdi|q]" v102|q v92|q [394, 564[416 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[r10|d]" v103|d -1 [412, 560[412 MustHaveRegister 414 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r8|d]" v104|d -1 [414, 484[414 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[r9|d]" v105|d -1 [416, 498[416 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rcx|d]" v106|d -1 [418, 442[418 MustHaveRegister 420 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rbx|d]" v107|d -1 [440, 502[440 MustHaveRegister 446 ShouldHaveRegister  "OneSpillStore"
  v108|d DWORD "[rax|d]" v108|d -1 [442, 468[442 MustHaveRegister 444 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rbp|d]" v109|d v107|d [446, 570[446 MustHaveRegister 448 MustHaveRegister 500 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[r13|d]" v110|d -1 [466, 470[466 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[r13|d]" v111|d v110|d [470, 566[470 MustHaveRegister 472 MustHaveRegister 484 MustHaveRegister 498 ShouldHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[r9|d]" v112|d v105|d [498, 500[498 MustHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[r10|q]" v113|q v103|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[r10|q]" v114|q v113|q [562, 568[562 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[r8|q]" v115|q v102|q [564, 570[564 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[r13|q]" v116|q v111|d [566, 572[566 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[r11|d]" v117|d v87|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v118|d DWORD "[rax|d]" v118|d -1 [580, 584[580 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[rcx|d]" v119|d -1 [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v120|d DWORD "[rax|d]" v120|d v118|d [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r10|d]" v121|d -1 [1766, 1782[1782 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[r11|q]" v122|q -1 [1766, 1784[1784 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[r10|d]" v123|d -1 [1702, 1718[1718 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[r11|q]" v124|q -1 [1702, 1720[1720 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rsi|q]" v125|q -1 [1348, 1368[1348 MustHaveRegister 1368 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q -1 [1530, 1550[1530 MustHaveRegister 1550 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[vstack:0|q]" v0|q v0|q [236, 275[ "StoreAtDefinition"
  v128|q QWORD "[vstack:4|q]" v1|q v1|q [502, 571[ "StoreAtDefinition"
  v129|d DWORD "[vstack:9|d]" v8|d v8|d [880, 923[ "OneSpillStore"
  v130|d DWORD "[vstack:8|d]" v9|d v9|d [880, 923[ "StoreAtDefinition"
  v131|d DWORD "[vstack:10|d]" v10|d v10|d [880, 923[ "OneSpillStore"
  v132|d DWORD "[vstack:2|d]" v12|d v12|d [236, 273[ "StoreAtDefinition"
  v133|d DWORD "[vstack:2|d]" v12|d v12|d [273, 279[ "StoreAtDefinition"
  v134|q QWORD "[vstack:0|q]" v0|q v0|q [275, 279[ "StoreAtDefinition"
  v135|d DWORD "[vstack:2|d]" v12|d v12|d [279, 284[ "StoreAtDefinition"
  v136|q QWORD "[vstack:0|q]" v0|q v0|q [279, 284[ "StoreAtDefinition"
  v137|q QWORD "[rsi|q]" v0|q v0|q [284, 306[[310, 502[304 MustHaveRegister 306 ShouldHaveRegister 364 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 418 MustHaveRegister 440 MustHaveRegister  "StoreAtDefinition"
  v138|d DWORD "[rdi|d]" v12|d v12|d [284, 304[[592, 880[304 MustHaveRegister  "StoreAtDefinition"
  v139|d DWORD "[vstack:2|d]" v12|d v12|d [880, 917[ "StoreAtDefinition"
  v140|q QWORD "[vstack:0|q]" v0|q v0|q [502, 569[ "StoreAtDefinition"
  v141|d DWORD "[vstack:5|d]" v87|d v87|d [502, 573[ "OneSpillStore"
  v142|q QWORD "[vstack:11|q]" v92|q v92|q [1052, 1199[ "OneSpillStore"
  v143|d DWORD "[vstack:6|d]" v107|d v107|d [502, 573[ "OneSpillStore"
  v144|d DWORD "[vstack:6|d]" v107|d v107|d [573, 576[576 ShouldHaveRegister  "OneSpillStore"
  v145|d DWORD "[vstack:5|d]" v87|d v87|d [573, 576[[1052, 1228[[1622, 1642[[1652, 1662[[1682, 1692[[1756, 1766[576 ShouldHaveRegister  "OneSpillStore"
  v146|q QWORD "[vstack:0|q]" v0|q v0|q [569, 573[ "StoreAtDefinition"
  v147|q QWORD "[vstack:4|q]" v1|q v1|q [571, 581[ "StoreAtDefinition"
  v148|q QWORD "[vstack:0|q]" v0|q v0|q [573, 577[ "StoreAtDefinition"
  v149|q QWORD "[rdx|q]" v1|q v1|q [581, 582[[592, 880[582 MustHaveRegister  "StoreAtDefinition"
  v150|d DWORD "[r8|d]" v87|d v87|d [1766, 1787[ "OneSpillStore"
  v151|q QWORD "[rsi|q]" v0|q v0|q [577, 588[[592, 880[578 MustHaveRegister 580 MustHaveRegister 586 MustHaveRegister 588 ShouldHaveRegister  "StoreAtDefinition"
  v152|q QWORD "[vstack:0|q]" v0|q v0|q [880, 919[ "StoreAtDefinition"
  v153|q QWORD "[vstack:4|q]" v1|q v1|q [880, 921[ "StoreAtDefinition"
  v154|q QWORD "[vstack:7|q]" v51|q v51|q [923, 927[926 ShouldHaveRegister  "OneSpillStore"
  v155|q QWORD "[vstack:0|q]" v0|q v0|q [919, 923[ "StoreAtDefinition"
  v156|d DWORD "[vstack:8|d]" v9|d v9|d [923, 1052[[1228, 1250[ "StoreAtDefinition"
  v157|q QWORD "[vstack:4|q]" v1|q v1|q [921, 1282[[1346, 1723[[1724, 1755[[1756, 1766[ "StoreAtDefinition"
  v158|d DWORD "[vstack:2|d]" v12|d v12|d [917, 923[ "StoreAtDefinition"
  v159|d DWORD "[vstack:10|d]" v10|d v10|d [923, 1052[[1346, 1562[ "OneSpillStore"
  v160|d DWORD "[vstack:9|d]" v8|d v8|d [923, 1052[[1346, 1562[ "OneSpillStore"
  v161|d DWORD "[vstack:2|d]" v12|d v12|d [923, 1052[[1228, 1562[[1572, 1582[[1642, 1652[[1672, 1682[[1724, 1734[ "StoreAtDefinition"
  v162|q QWORD "[vstack:0|q]" v0|q v0|q [923, 928[ "StoreAtDefinition"
  v163|q QWORD "[rdx|q]" v1|q v1|q [1766, 1787[ "StoreAtDefinition"
  v164|q QWORD "[rsi|q]" v0|q v0|q [928, 1195[1042 MustHaveRegister 1046 MustHaveRegister 1048 MustHaveRegister  "StoreAtDefinition"
  v165|d DWORD "[r9|d]" v9|d v9|d [1250, 1328[[1346, 1484[1260 MustHaveRegister 1278 ShouldHaveRegister 1328 ShouldHaveRegister  "StoreAtDefinition"
  v166|d DWORD "[rdi|d]" v12|d v12|d [1734, 1755[ "StoreAtDefinition"
  v167|q QWORD "[r10|q]" v0|q v0|q [1195, 1199[1196 ShouldHaveRegister  "StoreAtDefinition"
  v168|q QWORD "[vstack:11|q]" v92|q v92|q [1199, 1210[1210 ShouldHaveRegister  "OneSpillStore"
  v169|q QWORD "[vstack:0|q]" v0|q v0|q [1199, 1203[ "StoreAtDefinition"
  v170|q QWORD "[rsi|q]" v0|q v0|q [1203, 1209[1204 MustHaveRegister  "StoreAtDefinition"
  v171|q QWORD "[vstack:0|q]" v0|q v0|q [1209, 1213[ "StoreAtDefinition"
  v172|q QWORD "[vstack:0|q]" v0|q v0|q [1213, 1217[ "StoreAtDefinition"
  v173|q QWORD "[rsi|q]" v0|q v0|q [1217, 1243[1218 MustHaveRegister 1222 MustHaveRegister 1224 MustHaveRegister  "StoreAtDefinition"
  v174|q QWORD "[r10|q]" v0|q v0|q [1243, 1245[1244 ShouldHaveRegister  "StoreAtDefinition"
  v175|q QWORD "[vstack:0|q]" v0|q v0|q [1245, 1723[[1724, 1755[[1756, 1766[ "StoreAtDefinition"
  v176|d DWORD "[r10|d]" v63|d v63|d [1250, 1340[1278 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v177|q QWORD "[r10|q]" v27|q v27|q [1346, 1514[[1528, 1562[1514 ShouldHaveRegister  "NoSpillStore"
  v178|q QWORD "[rsi|q]" v0|q v0|q [1766, 1787[ "StoreAtDefinition"
  v179|d DWORD "[vstack:8|d]" v9|d v9|d [1484, 1523[ "StoreAtDefinition"
  v180|q QWORD "[vstack:12|q]" v37|q v37|q [1517, 1523[ "OneSpillStore"
  v181|d DWORD "[vstack:8|d]" v9|d v9|d [1523, 1562[[1572, 1582[[1642, 1652[[1672, 1682[[1724, 1734[ "StoreAtDefinition"
  v182|q QWORD "[vstack:12|q]" v37|q v37|q [1523, 1527[1526 ShouldHaveRegister  "OneSpillStore"
  v183|d DWORD "[r9|d]" v9|d v9|d [1734, 1755[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  184  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  188  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = STACKMOVE (input: v127|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = STACKMOVE (input: v133|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = STACKMOVE (input: v134|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  368  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  370  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [v92|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  394  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  418  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = STACKMOVE (input: v128|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = STACKMOVE (input: v143|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  584  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  642  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  682  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  710  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  714  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  716  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  758  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  778  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  836  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: v139|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = STACKMOVE (input: v153|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = STACKMOVE (input: v131|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = STACKMOVE (input: v129|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = STACKMOVE (input: v158|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = STACKMOVE (input: v130|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE (input: v155|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  928  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1044  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1048  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = STACKMOVE (input: v142|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1202  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1206  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE input: v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1210  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = STACKMOVE (input: v171|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1216  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE input: v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1220  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1222  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr 1224  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1226  <|@ instruction JUMP ~outgoingValues: [v96|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE input: v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v174|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr 1278  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr 1280  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1328  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr 1332  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr 1334  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr 1336  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1374  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1432  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1436  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1438  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1440  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1468  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1470  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1472  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1474  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1478  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr 1480  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1484  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = STACKMOVE (input: v179|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = STACKMOVE (input: v180|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1556  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [int[-99891|0xfffffffffffe79cd], long[660|0x294]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction JUMP ~outgoingValues: [int[-150041|0xfffffffffffdb5e7]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction JUMP ~outgoingValues: [int[-155161|0xfffffffffffda1e7], long[0|0x0]] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [int[-68915|0xfffffffffffef2cd], long[5140|0x1414]] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[6420|0x1914]] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [int[-100147|0xfffffffffffe78cd], long[1940|0x794]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [int[-163353|0xfffffffffffd81e7], long[0|0x0]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction JUMP ~outgoingValues: [int[-162329|0xfffffffffffd85e7], long[0|0x0]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction JUMP ~outgoingValues: [int[-151065|0xfffffffffffdb1e7]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction JUMP ~outgoingValues: [int[-160275|0xfffffffffffd8ded], long[3860|0xf14]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [int[-154137|0xfffffffffffda5e7], long[0|0x0]] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [int[-149017|0xfffffffffffdb9e7]] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [int[-164377|0xfffffffffffd7de7], long[0|0x0]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction JUMP ~outgoingValues: [int[-156185|0xfffffffffffd9de7], long[0|0x0]] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1702  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr 1722  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [int[-147993|0xfffffffffffdbde7]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1734  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1754  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction JUMP ~outgoingValues: [int[-161305|0xfffffffffffd89e7], long[0|0x0]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1766  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr 1784  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr 1786  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[280, 281[[306, 308[[574, 575[[588, 590[[924, 925[[1200, 1202[[1214, 1216[[1246, 1247[[1372, 1374[[1402, 1403[[1524, 1525[[1554, 1556[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|d [0, 1[[104, 107[[112, 115[[214, 217[[280, 281[[374, 377[[444, 447[[468, 471[[574, 575[[624, 627[[632, 635[[672, 675[[676, 679[[924, 925[[1200, 1201[[1206, 1209[[1214, 1215[[1246, 1247[[1340, 1342[[1400, 1403[[1524, 1525[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v74|q [0, 28[[278, 281[[572, 575[[922, 925[[1198, 1201[[1212, 1215[[1246, 1247[[1338, 1343[[1370, 1372[[1522, 1525[[1552, 1554[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 26[[276, 281[[570, 575[[920, 925[[1196, 1201[[1210, 1215[[1244, 1247[[1336, 1343[[1368, 1372[[1520, 1525[[1550, 1554[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[274, 281[[568, 575[[918, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1402, 1403[[1518, 1525[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1524, 1525[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1342, 1343[[1524, 1525[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[280, 281[[574, 575[[924, 925[[1200, 1201[[1214, 1215[[1246, 1247[[1524, 1525[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 236[26 MustHaveRegister 32 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [28, 236[[310, 502[28 MustHaveRegister 30 MustHaveRegister 88 MustHaveRegister 96 MustHaveRegister 180 MustHaveRegister 194 MustHaveRegister 368 MustHaveRegister 412 MustHaveRegister 420 MustHaveRegister 466 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[r10|d]" v2|d -1 [30, 36[[310, 320[30 MustHaveRegister 34 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [32, 46[[310, 332[32 MustHaveRegister 46 ShouldHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rcx|d]" v4|d -1 [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [90, 106[90 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [92, 120[[592, 680[92 MustHaveRegister 94 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [94, 120[[592, 866[[1346, 1478[[1528, 1552[94 MustHaveRegister 114 ShouldHaveRegister 628 ShouldHaveRegister 636 ShouldHaveRegister 642 ShouldHaveRegister 682 MustHaveRegister 850 MustHaveRegister 852 ShouldHaveRegister 866 ShouldHaveRegister 1432 ShouldHaveRegister 1478 MustHaveRegister 1552 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [96, 140[[592, 880[96 MustHaveRegister 102 ShouldHaveRegister 140 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [98, 236[[592, 880[98 MustHaveRegister 108 ShouldHaveRegister 216 ShouldHaveRegister  "StoreAtDefinition"
  v10|d DWORD "[rbx|d]" v10|d -1 [100, 140[[592, 880[100 MustHaveRegister 110 ShouldHaveRegister 140 MustHaveRegister  "OneSpillStore"
  v11|d DWORD "[rcx|d]" v11|d -1 [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdi|d]" v12|d v5|d [106, 236[106 MustHaveRegister 108 ShouldHaveRegister  "StoreAtDefinition"
  v13|d DWORD "[rax|d]" v13|d v9|d [108, 120[[592, 626[108 MustHaveRegister 116 MustHaveRegister 626 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [110, 120[[592, 676[110 MustHaveRegister 112 ShouldHaveRegister 624 ShouldHaveRegister 632 ShouldHaveRegister 672 ShouldHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d v7|d [114, 117[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d v13|d [116, 118[116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v13|d [626, 628[626 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v17|d [628, 640[628 MustHaveRegister 638 ShouldHaveRegister 640 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d v20|d [634, 636[634 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r13|d]" v20|d -1 [630, 634[630 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r13|d]" v21|d v19|d [636, 641[636 MustHaveRegister 638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v18|d [640, 642[640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [642, 674[642 MustHaveRegister 644 ShouldHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rcx|d]" v24|d v23|d [644, 646[644 MustHaveRegister 646 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d v23|d [674, 678[674 MustHaveRegister 678 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rbp|d]" v26|d v25|d [678, 878[[1346, 1406[678 MustHaveRegister 682 ShouldHaveRegister 710 ShouldHaveRegister 762 MustHaveRegister 850 ShouldHaveRegister 852 MustHaveRegister 878 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r10|q]" v27|q v6|d [680, 912[680 MustHaveRegister 912 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [1430, 1480[1430 MustHaveRegister 1438 ShouldHaveRegister 1468 MustHaveRegister 1470 MustHaveRegister 1472 MustHaveRegister 1474 MustHaveRegister 1476 MustHaveRegister 1478 MustHaveRegister 1480 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r8|q]" v30|q v7|d [1432, 1522[[1528, 1562[1432 MustHaveRegister 1434 MustHaveRegister 1522 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [1434, 1436[1434 MustHaveRegister 1436 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v31|q [1436, 1473[1436 MustHaveRegister 1438 ShouldHaveRegister 1468 MustHaveRegister 1470 MustHaveRegister 1472 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v32|q [1438, 1466[1438 MustHaveRegister 1440 MustHaveRegister 1466 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [1556, 1561[1556 MustHaveRegister 1558 MustHaveRegister 1560 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v29|q [1480, 1483[1480 MustHaveRegister 1482 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v36|q [1484, 1517[1516 ShouldHaveRegister  "OneSpillStore"
  v38|q QWORD "[r10|q]" v38|q v27|q [1514, 1518[1514 MustHaveRegister 1518 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q v37|q [1516, 1520[1516 MustHaveRegister 1520 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r13|q]" v40|q -1 [708, 832[[1380, 1406[708 MustHaveRegister 716 ShouldHaveRegister 752 MustHaveRegister 754 MustHaveRegister 756 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister 762 MustHaveRegister 806 MustHaveRegister 811 LiveAtLoopEnd 832 ShouldHaveRegister 1402 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q v26|d [710, 712[710 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q -1 [712, 714[712 MustHaveRegister 714 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rcx|q]" v43|q v42|q [714, 812[714 MustHaveRegister 716 ShouldHaveRegister 752 MustHaveRegister 754 MustHaveRegister 756 MustHaveRegister 764 MustHaveRegister 788 MustHaveRegister 811 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v43|q [716, 750[716 MustHaveRegister 718 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q rax|q [1374, 1379[1374 MustHaveRegister 1376 MustHaveRegister 1378 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q -1 [764, 768[[1380, 1400[764 MustHaveRegister 766 ShouldHaveRegister 1400 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v48|q [778, 808[788 ShouldHaveRegister 806 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q v47|q [808, 811[808 MustHaveRegister 810 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[r13|q]" v50|q v40|q [832, 835[832 MustHaveRegister 834 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[r13|q]" v51|q v50|q [836, 923[914 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[rcx|d]" v52|d v7|d [852, 916[852 MustHaveRegister 854 MustHaveRegister 866 MustHaveRegister 878 MustHaveRegister 916 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[r10|q]" v53|q v27|q [912, 918[912 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r11|q]" v54|q v51|q [914, 920[914 MustHaveRegister 920 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q v52|d [916, 922[916 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[r13|q]" v56|q v51|q [928, 1049[1044 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q -1 [1042, 1043[1042 MustHaveRegister  "NoDefinitionFound"
  v58|q QWORD "[r10|q]" v58|q -1 [1042, 1043[1042 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rdx|d]" v59|d v56|q [1044, 1046[1044 MustHaveRegister 1046 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [1048, 1049[1048 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[r10|q]" v61|q -1 [1048, 1049[1048 MustHaveRegister  "NoDefinitionFound"
  v62|d DWORD "[rcx|d]" v62|d -1 [180, 192[180 MustHaveRegister 182 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d -1 [182, 272[182 MustHaveRegister 232 ShouldHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r11|d]" v64|d -1 [184, 190[184 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r8|d]" v65|d -1 [186, 232[[1250, 1276[186 MustHaveRegister 232 MustHaveRegister 1276 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[rbx|d]" v66|d -1 [188, 212[188 MustHaveRegister 194 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[r11|q]" v67|q v64|d [190, 270[[1250, 1324[190 MustHaveRegister 270 ShouldHaveRegister 1324 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q v62|d [192, 268[[1250, 1322[192 MustHaveRegister 268 ShouldHaveRegister 1322 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rcx|d]" v69|d -1 [212, 214[212 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rbx|d]" v70|d v9|d [216, 276[216 MustHaveRegister 218 MustHaveRegister 234 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d v65|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q v68|q [268, 274[268 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[r11|q]" v73|q v67|q [270, 276[270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r10|q]" v74|q v63|d [272, 278[272 MustHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[r8|d]" v75|d v65|d [1276, 1280[1276 MustHaveRegister 1280 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d v9|d [1278, 1280[1278 MustHaveRegister 1280 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[r10|d]" v77|d -1 [1734, 1750[1750 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rax|q]" v78|q v68|q [1322, 1326[1322 MustHaveRegister 1326 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[r11|q]" v79|q v67|q [1324, 1334[1324 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [1326, 1336[1326 MustHaveRegister 1336 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[r9|q]" v81|q v9|d [1328, 1330[1328 MustHaveRegister 1330 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[r9|q]" v82|q v81|q [1330, 1332[1330 MustHaveRegister 1332 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q -1 [1332, 1334[1332 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdx|q]" v84|q v83|q [1334, 1338[1334 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rdi|d]" v85|d -1 [364, 380[364 MustHaveRegister 366 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r10|d]" v86|d -1 [366, 376[366 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [368, 502[368 MustHaveRegister 370 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[r8|d]" v88|d v87|d [370, 384[[1052, 1198[370 MustHaveRegister 378 MustHaveRegister 1198 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rcx|d]" v89|d -1 [372, 374[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[r10|d]" v90|d v86|d [376, 379[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rcx|d]" v91|d v88|d [378, 382[378 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[rdi|q]" v92|q v85|d [380, 393[380 MustHaveRegister 392 ShouldHaveRegister  "OneSpillStore"
  v93|d DWORD "[rax|d]" v93|d rax|q [1202, 1208[1202 MustHaveRegister 1208 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[rcx|d]" v94|d -1 [1204, 1206[1204 MustHaveRegister 1206 ShouldHaveRegister  "NoSpillStore"
  v95|d DWORD "[rax|d]" v95|d v93|d [1208, 1212[1208 MustHaveRegister 1212 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q rax|q [1216, 1227[1216 MustHaveRegister 1220 MustHaveRegister 1224 MustHaveRegister 1226 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[r10|q]" v97|q -1 [1218, 1219[1218 MustHaveRegister  "NoDefinitionFound"
  v98|q QWORD "[r11|q]" v98|q -1 [1218, 1219[1218 MustHaveRegister  "NoDefinitionFound"
  v99|d DWORD "[r10|d]" v99|d v96|q [1220, 1222[1220 MustHaveRegister 1222 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[r10|q]" v100|q -1 [1224, 1225[1224 MustHaveRegister  "NoDefinitionFound"
  v101|q QWORD "[r11|q]" v101|q -1 [1224, 1225[1224 MustHaveRegister  "NoDefinitionFound"
  v102|q QWORD "[rdi|q]" v102|q v92|q [394, 564[416 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[r10|d]" v103|d -1 [412, 560[412 MustHaveRegister 414 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r8|d]" v104|d -1 [414, 484[414 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[r9|d]" v105|d -1 [416, 498[416 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rcx|d]" v106|d -1 [418, 442[418 MustHaveRegister 420 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rbx|d]" v107|d -1 [440, 502[440 MustHaveRegister 446 ShouldHaveRegister  "OneSpillStore"
  v108|d DWORD "[rax|d]" v108|d -1 [442, 468[442 MustHaveRegister 444 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rbp|d]" v109|d v107|d [446, 570[446 MustHaveRegister 448 MustHaveRegister 500 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[r13|d]" v110|d -1 [466, 470[466 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[r13|d]" v111|d v110|d [470, 566[470 MustHaveRegister 472 MustHaveRegister 484 MustHaveRegister 498 ShouldHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[r9|d]" v112|d v105|d [498, 500[498 MustHaveRegister 500 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[r10|q]" v113|q v103|d [560, 562[560 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[r10|q]" v114|q v113|q [562, 568[562 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[r8|q]" v115|q v102|q [564, 570[564 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[r13|q]" v116|q v111|d [566, 572[566 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[r11|d]" v117|d v87|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v118|d DWORD "[rax|d]" v118|d -1 [580, 584[580 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[rcx|d]" v119|d -1 [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v120|d DWORD "[rax|d]" v120|d v118|d [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r10|d]" v121|d -1 [1766, 1782[1782 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[r11|q]" v122|q -1 [1766, 1784[1784 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[r10|d]" v123|d -1 [1702, 1718[1718 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[r11|q]" v124|q -1 [1702, 1720[1720 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rsi|q]" v125|q -1 [1348, 1368[1348 MustHaveRegister 1368 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q -1 [1530, 1550[1530 MustHaveRegister 1550 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[vstack:0|q]" v0|q v0|q [236, 275[ "StoreAtDefinition"
  v128|q QWORD "[vstack:4|q]" v1|q v1|q [502, 571[ "StoreAtDefinition"
  v129|d DWORD "[vstack:9|d]" v8|d v8|d [880, 923[ "OneSpillStore"
  v130|d DWORD "[vstack:8|d]" v9|d v9|d [880, 923[ "StoreAtDefinition"
  v131|d DWORD "[vstack:10|d]" v10|d v10|d [880, 923[ "OneSpillStore"
  v132|d DWORD "[vstack:2|d]" v12|d v12|d [236, 273[ "StoreAtDefinition"
  v133|d DWORD "[vstack:2|d]" v12|d v12|d [273, 279[ "StoreAtDefinition"
  v134|q QWORD "[vstack:0|q]" v0|q v0|q [275, 279[ "StoreAtDefinition"
  v135|d DWORD "[vstack:2|d]" v12|d v12|d [279, 284[ "StoreAtDefinition"
  v136|q QWORD "[vstack:0|q]" v0|q v0|q [279, 284[ "StoreAtDefinition"
  v137|q QWORD "[rsi|q]" v0|q v0|q [284, 306[[310, 502[304 MustHaveRegister 306 ShouldHaveRegister 364 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 418 MustHaveRegister 440 MustHaveRegister  "StoreAtDefinition"
  v138|d DWORD "[rdi|d]" v12|d v12|d [284, 304[[592, 880[304 MustHaveRegister  "StoreAtDefinition"
  v139|d DWORD "[vstack:2|d]" v12|d v12|d [880, 917[ "StoreAtDefinition"
  v140|q QWORD "[vstack:0|q]" v0|q v0|q [502, 569[ "StoreAtDefinition"
  v141|d DWORD "[vstack:5|d]" v87|d v87|d [502, 573[ "OneSpillStore"
  v142|q QWORD "[vstack:11|q]" v92|q v92|q [1052, 1199[ "OneSpillStore"
  v143|d DWORD "[vstack:6|d]" v107|d v107|d [502, 573[ "OneSpillStore"
  v144|d DWORD "[vstack:6|d]" v107|d v107|d [573, 576[576 ShouldHaveRegister  "OneSpillStore"
  v145|d DWORD "[vstack:5|d]" v87|d v87|d [573, 576[[1052, 1228[[1622, 1642[[1652, 1662[[1682, 1692[[1756, 1766[576 ShouldHaveRegister  "OneSpillStore"
  v146|q QWORD "[vstack:0|q]" v0|q v0|q [569, 573[ "StoreAtDefinition"
  v147|q QWORD "[vstack:4|q]" v1|q v1|q [571, 581[ "StoreAtDefinition"
  v148|q QWORD "[vstack:0|q]" v0|q v0|q [573, 577[ "StoreAtDefinition"
  v149|q QWORD "[rdx|q]" v1|q v1|q [581, 582[[592, 880[582 MustHaveRegister  "StoreAtDefinition"
  v150|d DWORD "[r8|d]" v87|d v87|d [1766, 1787[ "OneSpillStore"
  v151|q QWORD "[rsi|q]" v0|q v0|q [577, 588[[592, 880[578 MustHaveRegister 580 MustHaveRegister 586 MustHaveRegister 588 ShouldHaveRegister  "StoreAtDefinition"
  v152|q QWORD "[vstack:0|q]" v0|q v0|q [880, 919[ "StoreAtDefinition"
  v153|q QWORD "[vstack:4|q]" v1|q v1|q [880, 921[ "StoreAtDefinition"
  v154|q QWORD "[vstack:7|q]" v51|q v51|q [923, 927[926 ShouldHaveRegister  "OneSpillStore"
  v155|q QWORD "[vstack:0|q]" v0|q v0|q [919, 923[ "StoreAtDefinition"
  v156|d DWORD "[vstack:8|d]" v9|d v9|d [923, 1052[[1228, 1250[ "StoreAtDefinition"
  v157|q QWORD "[vstack:4|q]" v1|q v1|q [921, 1282[[1346, 1723[[1724, 1755[[1756, 1766[ "StoreAtDefinition"
  v158|d DWORD "[vstack:2|d]" v12|d v12|d [917, 923[ "StoreAtDefinition"
  v159|d DWORD "[vstack:10|d]" v10|d v10|d [923, 1052[[1346, 1562[ "OneSpillStore"
  v160|d DWORD "[vstack:9|d]" v8|d v8|d [923, 1052[[1346, 1562[ "OneSpillStore"
  v161|d DWORD "[vstack:2|d]" v12|d v12|d [923, 1052[[1228, 1562[[1572, 1582[[1642, 1652[[1672, 1682[[1724, 1734[ "StoreAtDefinition"
  v162|q QWORD "[vstack:0|q]" v0|q v0|q [923, 928[ "StoreAtDefinition"
  v163|q QWORD "[rdx|q]" v1|q v1|q [1766, 1787[ "StoreAtDefinition"
  v164|q QWORD "[rsi|q]" v0|q v0|q [928, 1195[1042 MustHaveRegister 1046 MustHaveRegister 1048 MustHaveRegister  "StoreAtDefinition"
  v165|d DWORD "[r9|d]" v9|d v9|d [1250, 1328[[1346, 1484[1260 MustHaveRegister 1278 ShouldHaveRegister 1328 ShouldHaveRegister  "StoreAtDefinition"
  v166|d DWORD "[rdi|d]" v12|d v12|d [1734, 1755[ "StoreAtDefinition"
  v167|q QWORD "[r10|q]" v0|q v0|q [1195, 1199[1196 ShouldHaveRegister  "StoreAtDefinition"
  v168|q QWORD "[vstack:11|q]" v92|q v92|q [1199, 1210[1210 ShouldHaveRegister  "OneSpillStore"
  v169|q QWORD "[vstack:0|q]" v0|q v0|q [1199, 1203[ "StoreAtDefinition"
  v170|q QWORD "[rsi|q]" v0|q v0|q [1203, 1209[1204 MustHaveRegister  "StoreAtDefinition"
  v171|q QWORD "[vstack:0|q]" v0|q v0|q [1209, 1213[ "StoreAtDefinition"
  v172|q QWORD "[vstack:0|q]" v0|q v0|q [1213, 1217[ "StoreAtDefinition"
  v173|q QWORD "[rsi|q]" v0|q v0|q [1217, 1243[1218 MustHaveRegister 1222 MustHaveRegister 1224 MustHaveRegister  "StoreAtDefinition"
  v174|q QWORD "[r10|q]" v0|q v0|q [1243, 1245[1244 ShouldHaveRegister  "StoreAtDefinition"
  v175|q QWORD "[vstack:0|q]" v0|q v0|q [1245, 1723[[1724, 1755[[1756, 1766[ "StoreAtDefinition"
  v176|d DWORD "[r10|d]" v63|d v63|d [1250, 1340[1278 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v177|q QWORD "[r10|q]" v27|q v27|q [1346, 1514[[1528, 1562[1514 ShouldHaveRegister  "NoSpillStore"
  v178|q QWORD "[rsi|q]" v0|q v0|q [1766, 1787[ "StoreAtDefinition"
  v179|d DWORD "[vstack:8|d]" v9|d v9|d [1484, 1523[ "StoreAtDefinition"
  v180|q QWORD "[vstack:12|q]" v37|q v37|q [1517, 1523[ "OneSpillStore"
  v181|d DWORD "[vstack:8|d]" v9|d v9|d [1523, 1562[[1572, 1582[[1642, 1652[[1672, 1682[[1724, 1734[ "StoreAtDefinition"
  v182|q QWORD "[vstack:12|q]" v37|q v37|q [1523, 1527[1526 ShouldHaveRegister  "OneSpillStore"
  v183|d DWORD "[r9|d]" v9|d v9|d [1734, 1755[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  184  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  188  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = STACKMOVE (input: v127|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = STACKMOVE (input: v133|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = STACKMOVE (input: v134|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v135|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  368  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  370  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  394  <|@ instruction [v102|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  418  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v107|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = STACKMOVE (input: v128|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = STACKMOVE (input: v143|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  584  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  642  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  682  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  710  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  714  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  716  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  758  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  778  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  836  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: v139|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = STACKMOVE (input: v153|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = STACKMOVE (input: v131|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = STACKMOVE (input: v129|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = STACKMOVE (input: v158|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = STACKMOVE (input: v130|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE (input: v155|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  928  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1044  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1048  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v159|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v156|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = STACKMOVE (input: v142|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE input: v167|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1202  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1206  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE input: v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1210  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = STACKMOVE (input: v171|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1216  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE input: v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1220  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1222  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr 1224  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v96|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1226  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE input: v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v174|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v156|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr 1278  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr 1280  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1328  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr 1332  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr 1334  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr 1336  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1374  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v159|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v159|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1432  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1436  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1438  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1440  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1468  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1470  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1472  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1474  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1478  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr 1480  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE input: v165|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1484  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = STACKMOVE (input: v179|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = STACKMOVE (input: v180|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v182|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOVE input: v165|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1530  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1556  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] // MoveResolver resolve mapping <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOVE input: v165|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = MOVE input: v181|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1580  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] // MoveResolver resolve mapping <|@ <|@
      nr 1590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] // MoveResolver resolve mapping <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1640  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOVE input: v165|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = MOVE input: v181|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1650  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1660  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] // MoveResolver resolve mapping <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = MOVE input: v181|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] // MoveResolver resolve mapping <|@ <|@
      nr 1700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1702  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr 1722  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = MOVE input: v181|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1734  <|@ instruction [v77|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1754  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1764  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1766  <|@ instruction [v121|DWORD, v122|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr 1784  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr 1786  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction v8|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction v9|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  100  <|@ instruction v10|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction v11|DWORD = MOVSXB value: v8|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction v12|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  108  <|@ instruction v13|DWORD = ADD (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v14|DWORD = MOVSXB value: v10|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction v15|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v62|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v63|DWORD = MOV input: [v62|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  184  <|@ instruction v64|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction v65|DWORD = MOV input: [v64|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  188  <|@ instruction v66|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction v69|DWORD = MOVSXB value: v66|DWORD size: DWORD <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: v69|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction v70|DWORD = SHL (x: v9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v71|DWORD = SUB (x: v65|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v70|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction v72|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction v73|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction v74|QWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = LEA address: [v72|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [v73|QWORD[*] + v70|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVE input: v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  280  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v135|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction ADD (x: [v0|QWORD[.] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v86|DWORD = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  368  <|@ instruction v87|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  370  <|@ instruction v88|DWORD = ADD (x: v87|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v89|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: v89|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction v90|DWORD = SHR (x: v86|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction v91|DWORD = SUB (x: v88|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH x: v91|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction v103|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v104|DWORD = MOV input: [v103|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction v105|DWORD = MOV input: [v102|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  418  <|@ instruction v106|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v106|DWORD, y: [v1|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction v107|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction v108|DWORD = MOVSXB value: v106|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction v109|DWORD = SHL (x: v107|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v109|DWORD, y: v109|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v110|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOVE input: v108|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction v111|DWORD = SHL (x: v110|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v111|DWORD, y: v111|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v111|DWORD, y: v104|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v112|DWORD = SUB (x: v105|DWORD, ~y: v111|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v109|DWORD, y: v112|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v107|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction v113|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction v114|QWORD[*] = MOVE input: v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction v115|QWORD[*] = MOVE input: v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction v116|QWORD = MOVE input: v111|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [v114|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [v115|QWORD[*] + v109|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = STACKMOVE (input: v143|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction v117|DWORD = ADD (x: v87|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v117|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction v118|DWORD = MOVZXB input: [v0|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction v119|DWORD = MOVZXB input: [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  584  <|@ instruction v120|DWORD = OR (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOVB (x: [v0|QWORD[.] + 17], y: reinterpret: v120|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction v17|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v20|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction v19|DWORD = SHL (x: v20|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction v21|DWORD = ADD (x: v19|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction v22|DWORD = CMOVE (falseValue: v18|DWORD, ~trueValue: v21|DWORD) condition: > <|@ <|@
      nr  642  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction v24|DWORD = DEC value: v23|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction v25|DWORD = SAR (x: v23|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction v26|DWORD = SHL (x: v25|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  682  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v26|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  710  <|@ instruction v41|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  714  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  716  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  758  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV (x: [v40|QWORD + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMP (x: v7|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction v52|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction v53|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = STACKMOVE (input: v131|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = STACKMOVE (input: v129|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = MOVE input: v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1044  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1048  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v159|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v156|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE input: v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = STACKMOVE (input: v142|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v0|QWORD[.] v92|QWORD[.] 
locals: v0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1202  <|@ instruction v93|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE input: v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction v94|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1206  <|@ instruction rcx|DWORD = MOVE input: v94|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction v95|DWORD = SHL (x: v93|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1210  <|@ instruction rsi|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE input: v95|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1216  <|@ instruction v96|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE input: v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v97|QWORD, temp2: v98|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1220  <|@ instruction v99|DWORD[_] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1222  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD[_]) size: DWORD <|@ <|@
      nr 1224  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v96|QWORD[.]) {temp: v100|QWORD, temp2: v101|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v96|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1226  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE input: v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1244  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v156|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction v75|DWORD = SHR value: v65|DWORD size: DWORD <|@ <|@
      nr 1278  <|@ instruction v76|DWORD = ADD (x: v9|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr 1280  <|@ instruction CMPBRANCH (x: v76|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v78|QWORD[*] = MOVE input: v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction v79|QWORD[*] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction v80|QWORD[*] = LEA address: [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1328  <|@ instruction v81|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction v82|QWORD = SHL value: v81|QWORD size: QWORD <|@ <|@
      nr 1332  <|@ instruction v83|QWORD = LEA address: [v82|QWORD + 16] size: QWORD <|@ <|@
      nr 1334  <|@ instruction v84|QWORD[*] = ADD (x: v83|QWORD, y: v79|QWORD[*]) size: QWORD <|@ <|@
      nr 1336  <|@ instruction rsi|QWORD = MOVE input: v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction rdx|QWORD = MOVE input: v84|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rcx|DWORD = MOVE input: v63|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1348  <|@ instruction v125|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction rsi|QWORD = MOVE input: v125|QWORD moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1374  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v159|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v159|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1432  <|@ instruction v30|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1436  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1438  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1440  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1468  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1470  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1472  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1474  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1478  <|@ instruction MOV (x: [v29|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr 1480  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction v38|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = STACKMOVE (input: v180|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v182|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1530  <|@ instruction v126|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction rsi|QWORD = MOVE input: v126|QWORD moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction rdx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1556  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] // MoveResolver resolve mapping <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = MOVE input: v181|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1580  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] // MoveResolver resolve mapping <|@ <|@
      nr 1590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] // MoveResolver resolve mapping <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1640  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = MOVE input: v181|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1650  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1660  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] // MoveResolver resolve mapping <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = MOVE input: v181|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] // MoveResolver resolve mapping <|@ <|@
      nr 1700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr 1722  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE input: v161|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = MOVE input: v181|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v77|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1754  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v0|QWORD[.] v9|DWORD v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v0|QWORD[.] - v12|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE input: v175|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1764  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v121|DWORD) size: DWORD <|@ <|@
      nr 1784  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v122|QWORD) size: QWORD <|@ <|@
      nr 1786  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v87|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  100  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  108  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  184  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  368  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  370  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  372  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction r11|DWORD = ADD (x: vstack:5|DWORD, y: vstack:6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  584  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  642  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  682  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  710  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  714  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  716  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  758  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1048  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:11|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1222  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1224  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1226  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1244  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:8|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:2|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1278  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1280  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1328  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1332  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1336  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1376  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1432  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr 1438  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1440  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1468  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1470  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1472  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1478  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1524  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1558  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] // MoveResolver resolve mapping <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1580  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] // MoveResolver resolve mapping <|@ <|@
      nr 1590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] // MoveResolver resolve mapping <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1640  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1650  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1660  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] // MoveResolver resolve mapping <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] // MoveResolver resolve mapping <|@ <|@
      nr 1700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1722  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1754  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] r9|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1764  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1784  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1786  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  100  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  108  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  184  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  368  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  370  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  372  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  416  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr  418  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  576  <|@ instruction r11|DWORD = ADD (x: vstack:5|DWORD, y: vstack:6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  584  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  642  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  682  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  710  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  714  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  716  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  758  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  808  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  854  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1048  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:11|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1218  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1220  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1222  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1224  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1226  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1244  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:8|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:2|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1278  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1280  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1328  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1332  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1336  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1376  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1378  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1404  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1432  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr 1438  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1440  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1468  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1470  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1472  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1474  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1478  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1480  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr 1524  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1530  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1554  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1558  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] // MoveResolver resolve mapping <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1580  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] // MoveResolver resolve mapping <|@ <|@
      nr 1590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] // MoveResolver resolve mapping <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] // MoveResolver resolve mapping <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1640  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1650  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1660  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] // MoveResolver resolve mapping <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1690  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] // MoveResolver resolve mapping <|@ <|@
      nr 1700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1722  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1754  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] r9|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1764  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1784  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1786  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction vstack:8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction vstack:2|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1698  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: vstack:5|DWORD, y: vstack:6|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction vstack:7|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  766  <|@ instruction r13|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction vstack:11|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:11|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:5|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:8|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:2|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1274  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rbx|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction r8|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction vstack:10|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction vstack:9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction vstack:12|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1148  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1752  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1754  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1718  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1720  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1722  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1184  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1910  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1914  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1068  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1790  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1792  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1794  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1036  <|@ instruction rdi|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction r9|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] r9|DWORD vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [26, 1988[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [108, 1274[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [28, 1988[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [1420, 1910[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [1800, 1876[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [762, 766[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [100, 1186[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [228, 900[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[vstack:10|d]" vstack:10|d -1 [226, 896[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[vstack:11|q]" vstack:11|q -1 [1418, 1578[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[vstack:12|q]" vstack:12|q -1 [372, 382[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:48|q]" vstack:0|q -1 [26, 1988[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:32|d]" vstack:2|d -1 [108, 1274[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:56|q]" vstack:4|q -1 [28, 1988[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:32|d]" vstack:5|d -1 [1420, 1910[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:28|d]" vstack:6|d -1 [1800, 1876[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:64|q]" vstack:7|q -1 [762, 766[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:28|d]" vstack:8|d -1 [100, 1186[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:40|d]" vstack:9|d -1 [228, 900[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[stack:36|d]" vstack:10|d -1 [226, 896[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[stack:64|q]" vstack:11|q -1 [1418, 1578[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[stack:64|q]" vstack:12|q -1 [372, 382[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1698  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  766  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1148  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1752  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1754  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1718  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1720  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1722  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1184  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1910  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1914  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1068  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1790  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1792  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1036  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1698  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  766  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1274  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1148  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1752  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1754  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1718  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1720  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1722  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1184  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1910  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1914  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1068  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1790  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1792  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1794  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1036  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1698  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1036  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@reference-map: [r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B44" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   92  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603396963568519513
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B3" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4603904357473744283
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  990  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  992  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rsi|QWORD[.] r9|DWORD rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rsi|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21] <|@ <|@
      nr  996  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4603904654105323566
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603911717312178184
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B46" "B63" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B62" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1394  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1396  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1404  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599626042508106234
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B51" "B60" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1622  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1624  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37] <|@ <|@
      nr 1626  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1628  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1650  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1656  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1700  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4600213022893584368
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1870  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr 1874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1876  <|@ instruction r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1880  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1884  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1890  <|@ instruction MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr 1892  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r13|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  174  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  182  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4588396880934333171
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4588396598130439817
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4588314240359493363
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  504  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4588232706166256374
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617929117082979557
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B15" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617992178685561291
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588232706166256375
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4588314240359493364
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B11" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588396598130439818
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B9" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4588396880934333172
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  888  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr  890  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  892  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr  894  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4584856664119619501
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37] <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:32|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37] <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1588  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1590  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1592  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2 <|@ <|@
      nr 1594  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4560675697827886133
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:28|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21] <|@ <|@
      nr  950  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1172  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560371947090700771
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1258  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction r9|QWORD = SHL value: r9|QWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1264  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr 1266  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4558410120612144507
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ st <@st|@reference-map: [r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  456  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B18" 
    xhandlers
    flags 
    probability 4558357411638738776
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  602  <|@ instruction rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4521697550651425364
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  326  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  328  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  332  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B26" 
    xhandlers
    flags 
    probability 4521743885241312413
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4491516056366556325
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd] <|@ <|@
      nr 1966  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B44" "B63" "B62" "B43" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1988  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7] <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B37" "B34" "B39" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1210  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] r9|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - rdi|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  684  <|@ instruction r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7] <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1330  <|@ instruction r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 1316  <|@ instruction r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1318  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1950  <|@ instruction r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd] <|@ <|@
      nr 1952  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1750  <|@ instruction r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7] <|@ <|@
      nr 1758  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B52" "B60" "B54" "B56" "B58" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1936  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1938  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1706  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7] <|@ <|@
      nr 1724  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7] <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1908  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1916  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7] <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7] <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7] <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1660  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1670  <|@ instruction r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7] <|@ <|@
      nr 1678  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     9
     4: aload_0       
     5: invokevirtual #50         // appendNull:()java.lang.AbstractStringBuilder
     8: areturn       
     9: aload_1       
    10: instanceof    #1          // java.lang.String
    13: ifeq          25
    16: aload_0       
    17: aload_1       
    18: checkcast     #1          // java.lang.String
    21: invokevirtual #8          // append:(java.lang.String)java.lang.AbstractStringBuilder
    24: areturn       
    25: aload_1       
    26: instanceof    #10         // java.lang.AbstractStringBuilder
    29: ifeq          41
    32: aload_0       
    33: aload_1       
    34: checkcast     #10         // java.lang.AbstractStringBuilder
    37: invokevirtual #52         // append:(java.lang.AbstractStringBuilder)java.lang.AbstractStringBuilder
    40: areturn       
    41: aload_0       
    42: aload_1       
    43: iconst_0      
    44: aload_1       
    45: invokeinterface#9, 1       // java.lang.CharSequence.length:()int
    50: invokevirtual #55         // append:(java.lang.CharSequence, int, int)java.lang.AbstractStringBuilder
    53: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec489041817f20000000000f85e30900009090909090909090909048896c244048897424204889542418448b5208448b5e084181faaddeadde0f853c010000909090904181fbaddeadde0f856c080000909090909090909090909090909090909090908b4a148b3ccd0c000000448b5614468b1cd50c000000440fbe4210448b4e0c44894c24340fbe5e10410fbec8d3ef897c2430418bc103c70fbeeb8bcd458beb41d3ed8bc8412bcd83f9010f8d2002000090909090909090413ad80f85c9050000909090909090909090909090909090908b4a14448b14cd0c000000448b5e14468b04dd0c0000000fbe5e1049c1e3038bc148c1e0033a5a100f85ba050000909090909090900fbecb418bd9d3e385db0f8cb40800009090909090452bc2413bd80f8f66080000909090909090909090909090909090488d7810498d741b10498bd2e8000000008b7c2430488b742420909090909090909090017e0c488bc6488b6c24404883c448493ba7500400000f878d080000c5f877c3909090904181faaddeadde0f85bd060000909090904181fbaddeadde0f854607000090909090909090909090909090908b7e14448b14fd0c000000448b5a0c458bc34403460c0fbe4e1041d3ea418bc8412bca48c1e70383f9010f8d730300009090909090909090909090448b5214468b04d50c000000448b4f0c0fbe4e103a4a100f856007000090909090909090908b5e0c0fbec18bc88bebd3e585ed0f8cbb07000090909090909090448b6a0c41d3e54585ed0f8c0807000090909090453be80f87b50600009090909090452bcd413be90f8f49070000895c243444895c24309090909090909090909090909090909090909090909090909090909049c1e2034c8bc7498d7a10498d742810498bd5e800000000448b5c243044035c2434488b74242044895e0c0fb64611488b5424180fb64a110bc1884611488bc6488b6c24404883c448493ba7500400000f8749070000c5f877c39090909090909090909090909090908bcdd3e0412bc341bd0200000041d3e54503eb443be8410f4fc54103c38bc8ffc981f9f7ffff7f0f83bf05000090909090909090909090908bcdd3f88be8d3e549c1e203443bdd0f845004000090909090909090909090904d8bafb80100008bcd488d49174883e1f8488bc14903c5493b87c80100000f87b00300009090909090909090909090909090498987b8010000420f18842900010000420f18842940010000420f1884298001000049c745000100000041c74508addeadde41896d0c488d41f04881f8000800000f839a03000090909048c7c010000000e9290000006666660f1f84000000000066666690660f1f4400009090909090909049c744050000000000488d400890909090483bc877e390909090909090909090909090443bdd418bcb0f4fcd85c90f8c6805000090909090413bcb0f878b040000909090903bcd0f878c050000895c242c44894424289090909090909090909090909090904d8bdd498d7a10498d7310488bd14c896c2410e8000000004c8b6c2410488b742420909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000448b561449c1e2034d85d20f841d000000498b57284883fa000f84650500004883ea0849895728490357384c8912498bd548c1ea03895614488bd64933d548c1ea160f8442000000488bd648c1ea0949ba00e0368d787f00004903d2803a027429f083042400803a00741fc602004d8b57484d85d20f84180500004983ea084d8957484d0357584989128b7c24308b5c242c448b4c2434448b442428488b542418e968fbffff48897c241044895c243090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8bd6418bd090e8000000000f1f840000000000488b7424200fbe4e10d3e0488b7424108bd090e8000000000f1f840000000000488b74242041807f40000f842e000000448b5e1449c1e3034d85db0f841d0000004d8b57284983fa000f84480400004983ea084d8957284d0357384d891a4c8bd049c1ea03448956144c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84ee0300004983eb084d895f484d035f584d8913488bf8448b5c2430488b542418e952fbffff909090909090904c8bd6e8000000000f1f8400000000008b7c2430448b4c2434488b542418488b742420e90bfaffff909090904585c90f8cb301000090909090909041d1e8418bf14103f2413bf00f877502000090909090909090909090909090909090909090488d701049d1e1498d51104903d3418bcae800000000e93bfaffff895c242c448944242848beaddeaddeaddeadde9090909090909090908bd5e8000000000f1f84000000000085004c8be8488b542418488b742420e9aefcffff895c242c4489442428909090909090909090488bc8498d7d104833c0f348aa8b7c2430488b542418488b742420e978fcffff895c242c44894424289090909090909090909090498bbfb8010000458bc3498d70174883e6f8488bd64803d7493b97c80100000f87670000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708addeadde44895f0c9090909090909090909090909090488bf748897c2410498d7a10488d7610498bd0e800000000e93cfcffff48beaddeaddeaddeadde909090909090909090418bd3e8000000000f1f8400000000008500488bf8ebab90909049c7c39402000041bacd79feff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909041bae7b5fdff909090909090904589978404000049c7879004000000000000e8000000000f1f84000000000090909049c7c30000000041bae7a1fdffeb9d90909049c7c31414000041bacdf2feffeb8b90909049c7c31419000041baeda9fdffe976ffffff90909049c7c39407000041bacd78feffe961ffffff44895c243090909049c7c30000000041bae781fdff448b442430488b542418488b74242090909090909090458997840400004d899f90040000e8000000000f1f84000000000044895c243090909049c7c30000000041bae785fdffebb890909041bae7b1fdffe921ffffff44895c243090909049c7c3140f000041baed8dfdffeb9390909049c7c30000000041bae7a5fdffe9cafeffff90909041bae7b9fdffe9e7feffff44895c243090909049c7c30000000041bae77dfdffe956ffffff90909049c7c30000000041bae79dfdffe98dfeffff90909041bae7bdfdffe9aafeffff44895c243090909049c7c30000000041bae789fdffe919ffffff48896c2440e800000000e90ef6fffff4488d0d5ff7ffff49898f68040000e9c0f5fffff4488d0da3f8ffff49898f68040000e9acf5fffff44c891424e800000000e99cfafffff448891424e800000000e9e9fafffff44c891c24e800000000e9b9fbfffff44c891424e800000000e913fcfffff441c78784040000edcefdff49c7879004000014000000e8000000000f1f84000000000041c78784040000f5ecfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5defeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f59afeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5f7fdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f56ffeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f55efeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f55dfeff49c7879004000000000000e8000000000f1f84000000000041c787840400008f92fcff49c7879004000000000000e8000000000f1f84000000000041c787840400008fe2fcff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD  <||@
  Comment 73 26 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 78 28 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 83 30 r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 83 [rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 83 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 32 r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 91 34 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 91 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 104 block B1 null  <||@
  Comment 104 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 38 NOP  <||@
  Comment 105 40 NOP  <||@
  Comment 106 42 NOP  <||@
  Comment 107 44 NOP  <||@
  Comment 108 46 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 108 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 121 block B2 null  <||@
  Comment 121 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 121 50 NOP  <||@
  Comment 122 52 NOP  <||@
  Comment 123 54 NOP  <||@
  Comment 124 56 NOP  <||@
  Comment 125 58 NOP  <||@
  Comment 126 60 NOP  <||@
  Comment 127 62 NOP  <||@
  Comment 128 64 NOP  <||@
  Comment 129 66 NOP  <||@
  Comment 130 68 NOP  <||@
  Comment 131 70 NOP  <||@
  Comment 132 72 NOP  <||@
  Comment 133 74 NOP  <||@
  Comment 134 76 NOP  <||@
  Comment 135 78 NOP  <||@
  Comment 136 80 NOP  <||@
  Comment 137 82 NOP  <||@
  Comment 138 84 NOP  <||@
  Comment 139 86 NOP  <||@
  Comment 140 88 rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 143 90 rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 143 [rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 143 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 150 92 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 154 94 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 154 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 154 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 162 96 r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 167 98 r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 171 100 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 176 102 rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 180 104 rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD  <||@
  Comment 184 106 rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 186 108 stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 190 110 rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 195 112 rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD  <||@
  Comment 198 114 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 200 116 r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 206 118 rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 211 120 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null  <||@
  Comment 220 block B3 null  <||@
  Comment 220 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 220 124 NOP  <||@
  Comment 221 126 NOP  <||@
  Comment 222 128 NOP  <||@
  Comment 223 130 JUMP ~outgoingValues: [] destination: B3 -> B27  <||@
  Comment 223 block B27 null  <||@
  Comment 223 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 223 908 NOP  <||@
  Comment 224 910 NOP  <||@
  Comment 225 912 NOP  <||@
  Comment 226 914 NOP  <||@
  Comment 227 916 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE  <||@
  Comment 236 block B28 null  <||@
  Comment 236 918 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 236 920 NOP  <||@
  Comment 237 922 NOP  <||@
  Comment 238 924 NOP  <||@
  Comment 239 926 JUMP ~outgoingValues: [] destination: B28 -> B30  <||@
  Comment 239 block B30 null  <||@
  Comment 239 960 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 239 962 NOP  <||@
  Comment 240 964 NOP  <||@
  Comment 241 966 NOP  <||@
  Comment 242 968 NOP  <||@
  Comment 243 970 NOP  <||@
  Comment 244 972 NOP  <||@
  Comment 245 974 NOP  <||@
  Comment 246 976 NOP  <||@
  Comment 247 978 NOP  <||@
  Comment 248 980 NOP  <||@
  Comment 249 982 NOP  <||@
  Comment 250 984 NOP  <||@
  Comment 251 986 NOP  <||@
  Comment 252 988 rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 255 990 r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21]  <||@
  Comment 255 [rcx:0, rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rdi|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 255 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 263 992 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 267 994 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21]  <||@
  Comment 267 [rcx:0, rdx:0, rsi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rdi|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 267 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 275 996 rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 279 998 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 283 1000 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 289 1002 CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE  <||@
  Comment 298 block B31 null  <||@
  Comment 298 1004 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 298 1006 NOP  <||@
  Comment 299 1008 NOP  <||@
  Comment 300 1010 NOP  <||@
  Comment 301 1012 NOP  <||@
  Comment 302 1014 NOP  <||@
  Comment 303 1016 NOP  <||@
  Comment 304 1018 NOP  <||@
  Comment 305 1020 rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD  <||@
  Comment 308 1022 rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 313 1024 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD  <||@
  Comment 321 block B33 null  <||@
  Comment 321 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 321 1044 NOP  <||@
  Comment 322 1046 NOP  <||@
  Comment 323 1048 NOP  <||@
  Comment 324 1050 NOP  <||@
  Comment 325 1052 NOP  <||@
  Comment 326 1054 r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 329 1056 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 338 block B35 null  <||@
  Comment 338 1074 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 338 1076 NOP  <||@
  Comment 339 1078 NOP  <||@
  Comment 340 1080 NOP  <||@
  Comment 341 1082 NOP  <||@
  Comment 342 1084 NOP  <||@
  Comment 343 1086 NOP  <||@
  Comment 344 1088 NOP  <||@
  Comment 345 1090 NOP  <||@
  Comment 346 1092 NOP  <||@
  Comment 347 1094 NOP  <||@
  Comment 348 1096 NOP  <||@
  Comment 349 1098 NOP  <||@
  Comment 350 1100 NOP  <||@
  Comment 351 1102 NOP  <||@
  Comment 352 1104 NOP  <||@
  Comment 353 1106 rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 353 1108 r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 353 1110 r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 353 1112 rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 357 1114 rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD  <||@
  Comment 362 1116 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 365 1118 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 365 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 370 1124 JUMP ~outgoingValues: [] destination: B35 -> B42  <||@
  Comment 370 block B42 null  <||@
  Comment 370 1280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 370 1120 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 374 1122 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 379 1282 NOP  <||@
  Comment 380 1284 NOP  <||@
  Comment 381 1286 NOP  <||@
  Comment 382 1288 NOP  <||@
  Comment 383 1290 NOP  <||@
  Comment 384 1292 NOP  <||@
  Comment 385 1294 NOP  <||@
  Comment 386 1296 NOP  <||@
  Comment 387 1298 NOP  <||@
  Comment 388 1300 ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 391 1302 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 394 1304 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 403 POLL_RETURN_FAR  <||@
  Comment 420 block B45 null  <||@
  Comment 420 1334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 420 1336 NOP  <||@
  Comment 421 1338 NOP  <||@
  Comment 422 1340 NOP  <||@
  Comment 423 1342 NOP  <||@
  Comment 424 1344 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 424 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 437 block B46 null  <||@
  Comment 437 1346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 437 1348 NOP  <||@
  Comment 438 1350 NOP  <||@
  Comment 439 1352 NOP  <||@
  Comment 440 1354 NOP  <||@
  Comment 441 1356 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 441 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 454 block B47 null  <||@
  Comment 454 1358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 1360 NOP  <||@
  Comment 455 1362 NOP  <||@
  Comment 456 1364 NOP  <||@
  Comment 457 1366 NOP  <||@
  Comment 458 1368 NOP  <||@
  Comment 459 1370 NOP  <||@
  Comment 460 1372 NOP  <||@
  Comment 461 1374 NOP  <||@
  Comment 462 1376 NOP  <||@
  Comment 463 1378 NOP  <||@
  Comment 464 1380 NOP  <||@
  Comment 465 1382 NOP  <||@
  Comment 466 1384 NOP  <||@
  Comment 467 1386 NOP  <||@
  Comment 468 1388 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 471 1390 r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 471 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 471 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 479 1392 r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 483 1394 r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 490 1396 rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 494 1398 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 497 1400 rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 503 1402 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 507 1404 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null  <||@
  Comment 516 block B48 null  <||@
  Comment 516 1406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 516 1408 NOP  <||@
  Comment 517 1410 NOP  <||@
  Comment 518 1412 NOP  <||@
  Comment 519 1414 JUMP ~outgoingValues: [] destination: B48 -> B50  <||@
  Comment 519 block B50 null  <||@
  Comment 519 1602 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 519 1604 NOP  <||@
  Comment 520 1606 NOP  <||@
  Comment 521 1608 NOP  <||@
  Comment 522 1610 NOP  <||@
  Comment 523 1612 NOP  <||@
  Comment 524 1614 NOP  <||@
  Comment 525 1616 NOP  <||@
  Comment 526 1618 NOP  <||@
  Comment 527 1620 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 531 1622 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37]  <||@
  Comment 531 [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 531 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 539 1624 r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37]  <||@
  Comment 539 [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 539 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 543 1626 rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 547 1628 CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE  <||@
  Comment 556 block B51 null  <||@
  Comment 556 1630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 556 1632 NOP  <||@
  Comment 557 1634 NOP  <||@
  Comment 558 1636 NOP  <||@
  Comment 559 1638 NOP  <||@
  Comment 560 1640 NOP  <||@
  Comment 561 1642 NOP  <||@
  Comment 562 1644 NOP  <||@
  Comment 563 1646 NOP  <||@
  Comment 564 1648 rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 567 1650 rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD  <||@
  Comment 570 1652 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 572 1654 rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 576 1656 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD  <||@
  Comment 584 block B53 null  <||@
  Comment 584 1680 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 584 1682 NOP  <||@
  Comment 585 1684 NOP  <||@
  Comment 586 1686 NOP  <||@
  Comment 587 1688 NOP  <||@
  Comment 588 1690 NOP  <||@
  Comment 589 1692 NOP  <||@
  Comment 590 1694 NOP  <||@
  Comment 591 1696 r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 595 1700 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 598 1702 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD  <||@
  Comment 607 block B55 null  <||@
  Comment 607 1726 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 607 1728 NOP  <||@
  Comment 608 1730 NOP  <||@
  Comment 609 1732 NOP  <||@
  Comment 610 1734 NOP  <||@
  Comment 611 1736 CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD  <||@
  Comment 620 block B57 null  <||@
  Comment 620 1760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 620 1762 NOP  <||@
  Comment 621 1764 NOP  <||@
  Comment 622 1766 NOP  <||@
  Comment 623 1768 NOP  <||@
  Comment 624 1770 NOP  <||@
  Comment 625 1772 r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 628 1774 CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD  <||@
  Comment 637 block B59 null  <||@
  Comment 637 1798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 637 1800 stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 641 1802 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 646 1804 NOP  <||@
  Comment 647 1806 NOP  <||@
  Comment 648 1808 NOP  <||@
  Comment 649 1810 NOP  <||@
  Comment 650 1812 NOP  <||@
  Comment 651 1814 NOP  <||@
  Comment 652 1816 NOP  <||@
  Comment 653 1818 NOP  <||@
  Comment 654 1820 NOP  <||@
  Comment 655 1822 NOP  <||@
  Comment 656 1824 NOP  <||@
  Comment 657 1826 NOP  <||@
  Comment 658 1828 NOP  <||@
  Comment 659 1830 NOP  <||@
  Comment 660 1832 NOP  <||@
  Comment 661 1834 NOP  <||@
  Comment 662 1836 NOP  <||@
  Comment 663 1838 NOP  <||@
  Comment 664 1840 NOP  <||@
  Comment 665 1842 NOP  <||@
  Comment 666 1844 NOP  <||@
  Comment 667 1846 NOP  <||@
  Comment 668 1848 NOP  <||@
  Comment 669 1850 NOP  <||@
  Comment 670 1852 NOP  <||@
  Comment 671 1854 NOP  <||@
  Comment 672 1856 NOP  <||@
  Comment 673 1858 NOP  <||@
  Comment 674 1860 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 678 1862 r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 678 1864 r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 681 1866 r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 681 1868 rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 685 1870 rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD  <||@
  Comment 690 1872 rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 693 1874 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 693 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 698 1876 r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD  <||@
  Comment 708 1878 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 713 1880 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 717 1882 rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD  <||@
  Comment 721 1884 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 726 1886 rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD  <||@
  Comment 730 1888 rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 732 1890 MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE  <||@
  Comment 735 1892 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 738 1894 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 747 POLL_RETURN_FAR  <||@
  Comment 764 block B4 null  <||@
  Comment 764 132 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 134 NOP  <||@
  Comment 765 136 NOP  <||@
  Comment 766 138 NOP  <||@
  Comment 767 140 NOP  <||@
  Comment 768 142 NOP  <||@
  Comment 769 144 NOP  <||@
  Comment 770 146 NOP  <||@
  Comment 771 148 NOP  <||@
  Comment 772 150 NOP  <||@
  Comment 773 152 NOP  <||@
  Comment 774 154 NOP  <||@
  Comment 775 156 NOP  <||@
  Comment 776 158 NOP  <||@
  Comment 777 160 NOP  <||@
  Comment 778 162 NOP  <||@
  Comment 779 164 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 781 166 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 783 168 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 786 170 r13|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 792 174 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 795 176 r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 798 178 CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 801 180 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 805 182 rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 808 184 rcx|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 812 186 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 824 block B5 null  <||@
  Comment 824 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 824 190 NOP  <||@
  Comment 825 192 NOP  <||@
  Comment 826 194 NOP  <||@
  Comment 827 196 NOP  <||@
  Comment 828 198 NOP  <||@
  Comment 829 200 NOP  <||@
  Comment 830 202 NOP  <||@
  Comment 831 204 NOP  <||@
  Comment 832 206 NOP  <||@
  Comment 833 208 NOP  <||@
  Comment 834 210 NOP  <||@
  Comment 835 212 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 837 214 rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 839 218 rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 843 220 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 847 222 CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD  <||@
  Comment 856 block B10 null  <||@
  Comment 856 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 856 390 NOP  <||@
  Comment 857 392 NOP  <||@
  Comment 858 394 NOP  <||@
  Comment 859 396 NOP  <||@
  Comment 860 398 NOP  <||@
  Comment 861 400 NOP  <||@
  Comment 862 402 NOP  <||@
  Comment 863 404 NOP  <||@
  Comment 864 406 NOP  <||@
  Comment 865 408 NOP  <||@
  Comment 866 410 NOP  <||@
  Comment 867 412 r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 874 414 rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 876 416 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 880 418 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 884 420 rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 890 422 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD  <||@
  Comment 903 block B12 null  <||@
  Comment 903 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 903 472 NOP  <||@
  Comment 904 474 NOP  <||@
  Comment 905 476 NOP  <||@
  Comment 906 478 NOP  <||@
  Comment 907 480 NOP  <||@
  Comment 908 482 NOP  <||@
  Comment 909 484 NOP  <||@
  Comment 910 486 NOP  <||@
  Comment 911 488 NOP  <||@
  Comment 912 490 NOP  <||@
  Comment 913 492 NOP  <||@
  Comment 914 494 NOP  <||@
  Comment 915 496 NOP  <||@
  Comment 916 498 NOP  <||@
  Comment 917 500 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 924 502 AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0  <||@
  Comment 933 504 AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0  <||@
  Comment 942 506 AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0  <||@
  Comment 951 508 MOV x: [r13|QWORD] y: 1 size: QWORD  <||@
  Comment 959 510 MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 959 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 967 512 MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 971 514 rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 975 516 CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 988 block B13 null  <||@
  Comment 988 518 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 988 520 NOP  <||@
  Comment 989 522 NOP  <||@
  Comment 990 524 NOP  <||@
  Comment 991 526 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 998 528 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 1003 block B15 loop 0 depth 1 header:829|LoopBegin  <||@
  Comment 1003 542 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1024 544 NOP  <||@
  Comment 1025 546 NOP  <||@
  Comment 1026 548 NOP  <||@
  Comment 1027 550 NOP  <||@
  Comment 1028 552 NOP  <||@
  Comment 1029 554 NOP  <||@
  Comment 1030 556 NOP  <||@
  Comment 1031 558 MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1040 560 rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD  <||@
  Comment 1044 562 JUMP ~outgoingValues: [] destination: B15 -> B14  <||@
  Comment 1044 block B14 loop 0 depth 1 header:829|LoopBegin  <||@
  Comment 1044 530 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1044 532 NOP  <||@
  Comment 1045 534 NOP  <||@
  Comment 1046 536 NOP  <||@
  Comment 1047 538 NOP  <||@
  Comment 1048 540 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 1053 block B16 null  <||@
  Comment 1053 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1053 566 NOP  <||@
  Comment 1054 568 NOP  <||@
  Comment 1055 570 NOP  <||@
  Comment 1056 572 JUMP ~outgoingValues: [] destination: B16 -> B18  <||@
  Comment 1056 block B18 null  <||@
  Comment 1056 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1056 616 NOP  <||@
  Comment 1057 618 NOP  <||@
  Comment 1058 620 NOP  <||@
  Comment 1059 622 NOP  <||@
  Comment 1060 624 r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 1060 626 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 1060 block B19 null  <||@
  Comment 1060 628 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1060 630 NOP  <||@
  Comment 1061 632 NOP  <||@
  Comment 1062 634 NOP  <||@
  Comment 1063 636 NOP  <||@
  Comment 1064 638 NOP  <||@
  Comment 1065 640 NOP  <||@
  Comment 1066 642 CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1069 644 rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: >  <||@
  Comment 1075 646 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 1083 block B21 null  <||@
  Comment 1083 662 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1083 664 NOP  <||@
  Comment 1084 666 NOP  <||@
  Comment 1085 668 NOP  <||@
  Comment 1086 670 NOP  <||@
  Comment 1087 672 CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 1096 block B23 null  <||@
  Comment 1096 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1096 690 NOP  <||@
  Comment 1097 692 NOP  <||@
  Comment 1098 694 NOP  <||@
  Comment 1099 696 NOP  <||@
  Comment 1100 698 CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 1108 block B25 null  <||@
  Comment 1108 714 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1108 716 stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1112 718 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1117 720 NOP  <||@
  Comment 1118 722 NOP  <||@
  Comment 1119 724 NOP  <||@
  Comment 1120 726 NOP  <||@
  Comment 1121 728 NOP  <||@
  Comment 1122 730 NOP  <||@
  Comment 1123 732 NOP  <||@
  Comment 1124 734 NOP  <||@
  Comment 1125 736 NOP  <||@
  Comment 1126 738 NOP  <||@
  Comment 1127 740 NOP  <||@
  Comment 1128 742 NOP  <||@
  Comment 1129 744 NOP  <||@
  Comment 1130 746 NOP  <||@
  Comment 1131 748 NOP  <||@
  Comment 1132 750 r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1132 752 r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1135 754 rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1135 756 rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 1139 758 rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 1143 760 rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1146 762 stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1151 764 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1151 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1156 770 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 1156 block B26 null  <||@
  Comment 1156 772 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1156 382 r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1161 384 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1166 774 NOP  <||@
  Comment 1167 776 NOP  <||@
  Comment 1168 778 NOP  <||@
  Comment 1169 780 NOP  <||@
  Comment 1170 782 NOP  <||@
  Comment 1171 784 NOP  <||@
  Comment 1172 786 NOP  <||@
  Comment 1173 788 NOP  <||@
  Comment 1174 790 NOP  <||@
  Comment 1175 792 NOP  <||@
  Comment 1176 794 NOP  <||@
  Comment 1177 796 NOP  <||@
  Comment 1178 798 NOP  <||@
  Comment 1179 800 NOP  <||@
  Comment 1180 802 NOP  <||@
  Comment 1181 804 NOP  <||@
  Comment 1182 806 NOP  <||@
  Comment 1183 808 NOP  <||@
  Comment 1184 810 NOP  <||@
  Comment 1185 812 NOP  <||@
  Comment 1186 814 NOP  <||@
  Comment 1187 816 NOP  <||@
  Comment 1188 818 NOP  <||@
  Comment 1189 820 NOP  <||@
  Comment 1190 822 NOP  <||@
  Comment 1191 824 NOP  <||@
  Comment 1192 826 NOP  <||@
  Comment 1193 828 NOP  <||@
  Comment 1194 830 NOP  <||@
  Comment 1195 832 NOP  <||@
  Comment 1196 834 NOP  <||@
  Comment 1197 836 NOP  <||@
  Comment 1198 838 NOP  <||@
  Comment 1199 840 NOP  <||@
  Comment 1200 842 NOP  <||@
  Comment 1201 844 NOP  <||@
  Comment 1202 846 NOP  <||@
  Comment 1203 848 NOP  <||@
  Comment 1204 850 NOP  <||@
  Comment 1205 852 NOP  <||@
  Comment 1206 854 NOP  <||@
  Comment 1207 856 NOP  <||@
  Comment 1208 858 NOP  <||@
  Comment 1209 860 NOP  <||@
  Comment 1210 862 NOP  <||@
  Comment 1211 864 NOP  <||@
  Comment 1212 866 NOP  <||@
  Comment 1213 868 NOP  <||@
  Comment 1214 870 NOP  <||@
  Comment 1215 872 NOP  <||@
  Comment 1216 874 NOP  <||@
  Comment 1217 876 NOP  <||@
  Comment 1218 878 NOP  <||@
  Comment 1219 880 NOP  <||@
  Comment 1220 882 NOP  <||@
  Comment 1221 884 NOP  <||@
  Comment 1222 886 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2  <||@
  Comment 1279 888 rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 1286 890 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 1289 892 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2  <||@
  Comment 1371 894 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1375 896 rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1379 898 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1384 900 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1389 902 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1394 904 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 1399 block B49 null  <||@
  Comment 1399 1416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1399 1418 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1404 1420 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1409 1422 NOP  <||@
  Comment 1410 1424 NOP  <||@
  Comment 1411 1426 NOP  <||@
  Comment 1412 1428 NOP  <||@
  Comment 1413 1430 NOP  <||@
  Comment 1414 1432 NOP  <||@
  Comment 1415 1434 NOP  <||@
  Comment 1416 1436 NOP  <||@
  Comment 1417 1438 NOP  <||@
  Comment 1418 1440 NOP  <||@
  Comment 1419 1442 NOP  <||@
  Comment 1420 1444 NOP  <||@
  Comment 1421 1446 NOP  <||@
  Comment 1422 1448 NOP  <||@
  Comment 1423 1450 NOP  <||@
  Comment 1424 1452 NOP  <||@
  Comment 1425 1454 NOP  <||@
  Comment 1426 1456 NOP  <||@
  Comment 1427 1458 NOP  <||@
  Comment 1428 1460 NOP  <||@
  Comment 1429 1462 NOP  <||@
  Comment 1430 1464 NOP  <||@
  Comment 1431 1466 NOP  <||@
  Comment 1432 1468 NOP  <||@
  Comment 1433 1470 NOP  <||@
  Comment 1434 1472 NOP  <||@
  Comment 1435 1474 NOP  <||@
  Comment 1436 1476 NOP  <||@
  Comment 1437 1478 NOP  <||@
  Comment 1438 1480 NOP  <||@
  Comment 1439 1482 NOP  <||@
  Comment 1440 1484 NOP  <||@
  Comment 1441 1486 NOP  <||@
  Comment 1442 1488 NOP  <||@
  Comment 1443 1490 NOP  <||@
  Comment 1444 1492 NOP  <||@
  Comment 1445 1494 NOP  <||@
  Comment 1446 1496 NOP  <||@
  Comment 1447 1498 NOP  <||@
  Comment 1448 1500 NOP  <||@
  Comment 1449 1502 NOP  <||@
  Comment 1450 1504 NOP  <||@
  Comment 1451 1506 NOP  <||@
  Comment 1452 1508 NOP  <||@
  Comment 1453 1510 NOP  <||@
  Comment 1454 1512 NOP  <||@
  Comment 1455 1514 NOP  <||@
  Comment 1456 1516 NOP  <||@
  Comment 1457 1518 NOP  <||@
  Comment 1458 1520 NOP  <||@
  Comment 1459 1522 NOP  <||@
  Comment 1460 1524 NOP  <||@
  Comment 1461 1526 NOP  <||@
  Comment 1462 1528 NOP  <||@
  Comment 1463 1530 NOP  <||@
  Comment 1464 1532 NOP  <||@
  Comment 1465 1534 NOP  <||@
  Comment 1466 1536 NOP  <||@
  Comment 1467 1538 NOP  <||@
  Comment 1468 1540 NOP  <||@
  Comment 1469 1542 NOP  <||@
  Comment 1470 1544 NOP  <||@
  Comment 1471 1546 NOP  <||@
  Comment 1472 1548 NOP  <||@
  Comment 1473 1550 NOP  <||@
  Comment 1474 1552 NOP  <||@
  Comment 1475 1554 NOP  <||@
  Comment 1476 1556 NOP  <||@
  Comment 1477 1558 NOP  <||@
  Comment 1478 1560 NOP  <||@
  Comment 1479 1562 NOP  <||@
  Comment 1480 1564 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1483 1568 rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1486 1570 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37]  <||@
  Comment 1487 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1487 INVOKESPECIAL  <||@
  Comment 1492 [stack:16, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |-                  |- 
     stack:   |stack:48|QWORD[.]  |stack:64|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1500 1572 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1505 1574 rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1509 1576 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1511 1578 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1516 1580 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1518 1582 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37]  <||@
  Comment 1519 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 1519 INVOKESTATIC  <||@
  Comment 1524 [stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1532 1584 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1537 1586 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2  <||@
  Comment 1594 1588 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 1601 1590 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1605 1592 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2  <||@
  Comment 1699 1594 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1702 1596 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1707 1598 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1712 1600 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 1717 block B29 null  <||@
  Comment 1717 928 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1717 930 NOP  <||@
  Comment 1718 932 NOP  <||@
  Comment 1719 934 NOP  <||@
  Comment 1720 936 NOP  <||@
  Comment 1721 938 NOP  <||@
  Comment 1722 940 NOP  <||@
  Comment 1723 942 NOP  <||@
  Comment 1724 944 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1727 948 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21]  <||@
  Comment 1727 {HotSpotMethod<AbstractStringBuilder.inflate()>}  <||@
  Comment 1727 INVOKESPECIAL  <||@
  Comment 1732 [stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1               |2                 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:48|QWORD[.]  |-  |stack:32|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1740 950 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1744 952 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1749 954 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 956 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1759 958 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 1764 block B36 null  <||@
  Comment 1764 1126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1764 1128 NOP  <||@
  Comment 1765 1130 NOP  <||@
  Comment 1766 1132 NOP  <||@
  Comment 1767 1134 NOP  <||@
  Comment 1768 1136 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 1777 block B38 null  <||@
  Comment 1777 1154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1777 1156 NOP  <||@
  Comment 1778 1158 NOP  <||@
  Comment 1779 1160 NOP  <||@
  Comment 1780 1162 NOP  <||@
  Comment 1781 1164 NOP  <||@
  Comment 1782 1166 NOP  <||@
  Comment 1783 1168 r8|DWORD = SHR value: r8|DWORD size: DWORD  <||@
  Comment 1786 1170 rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1792 1172 CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD  <||@
  Comment 1801 block B41 null  <||@
  Comment 1801 1212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1801 1214 NOP  <||@
  Comment 1802 1216 NOP  <||@
  Comment 1803 1218 NOP  <||@
  Comment 1804 1220 NOP  <||@
  Comment 1805 1222 NOP  <||@
  Comment 1806 1224 NOP  <||@
  Comment 1807 1226 NOP  <||@
  Comment 1808 1228 NOP  <||@
  Comment 1809 1230 NOP  <||@
  Comment 1810 1232 NOP  <||@
  Comment 1811 1234 NOP  <||@
  Comment 1812 1236 NOP  <||@
  Comment 1813 1238 NOP  <||@
  Comment 1814 1240 NOP  <||@
  Comment 1815 1242 NOP  <||@
  Comment 1816 1244 NOP  <||@
  Comment 1817 1246 NOP  <||@
  Comment 1818 1248 NOP  <||@
  Comment 1819 1250 NOP  <||@
  Comment 1820 1252 rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1820 1254 r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1820 1256 rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 1824 1258 r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1824 1260 r9|QWORD = SHL value: r9|QWORD size: QWORD  <||@
  Comment 1827 1262 rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD  <||@
  Comment 1831 1264 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD  <||@
  Comment 1834 1266 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1834 1268 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1834 1270 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1837 1272 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 1837 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 1842 1278 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 1847 block B11 null  <||@
  Comment 1847 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1847 426 stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1851 428 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1856 430 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1856 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1866 432 NOP  <||@
  Comment 1867 434 NOP  <||@
  Comment 1868 436 NOP  <||@
  Comment 1869 438 NOP  <||@
  Comment 1870 440 NOP  <||@
  Comment 1871 442 NOP  <||@
  Comment 1872 444 NOP  <||@
  Comment 1873 446 NOP  <||@
  Comment 1874 448 NOP  <||@
  Comment 1875 450 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1877 452 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1877 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1882 [r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1890 454 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1890 [rax:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1890 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1892 456 r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1895 464 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1900 466 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1905 468 JUMP ~outgoingValues: [] destination: B11 -> B19  <||@
  Comment 1910 block B17 null  <||@
  Comment 1910 574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1910 576 stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1914 578 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1919 580 NOP  <||@
  Comment 1920 582 NOP  <||@
  Comment 1921 584 NOP  <||@
  Comment 1922 586 NOP  <||@
  Comment 1923 588 NOP  <||@
  Comment 1924 590 NOP  <||@
  Comment 1925 592 NOP  <||@
  Comment 1926 594 NOP  <||@
  Comment 1927 596 NOP  <||@
  Comment 1928 598 rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1931 600 ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1941 602 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1945 608 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1950 610 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1955 612 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 1960 block B6 null  <||@
  Comment 1960 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1960 226 stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1964 228 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1969 230 NOP  <||@
  Comment 1970 232 NOP  <||@
  Comment 1971 234 NOP  <||@
  Comment 1972 236 NOP  <||@
  Comment 1973 238 NOP  <||@
  Comment 1974 240 NOP  <||@
  Comment 1975 242 NOP  <||@
  Comment 1976 244 NOP  <||@
  Comment 1977 246 NOP  <||@
  Comment 1978 248 NOP  <||@
  Comment 1979 250 NOP  <||@
  Comment 1980 252 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1987 254 r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1990 256 rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD  <||@
  Comment 1994 258 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1998 260 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2004 262 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD  <||@
  Comment 2017 block B8 null  <||@
  Comment 2017 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2017 298 NOP  <||@
  Comment 2018 300 NOP  <||@
  Comment 2019 302 NOP  <||@
  Comment 2020 304 NOP  <||@
  Comment 2021 306 NOP  <||@
  Comment 2022 308 NOP  <||@
  Comment 2023 310 NOP  <||@
  Comment 2024 312 NOP  <||@
  Comment 2025 314 NOP  <||@
  Comment 2026 316 NOP  <||@
  Comment 2027 318 NOP  <||@
  Comment 2028 320 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 2035 322 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 2043 324 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 2051 326 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 2059 328 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 2066 330 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 2066 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 2073 332 MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 2077 334 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 2077 336 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 2077 block B9 null  <||@
  Comment 2077 338 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2077 340 NOP  <||@
  Comment 2078 342 NOP  <||@
  Comment 2079 344 NOP  <||@
  Comment 2080 346 NOP  <||@
  Comment 2081 348 NOP  <||@
  Comment 2082 350 NOP  <||@
  Comment 2083 352 NOP  <||@
  Comment 2084 354 NOP  <||@
  Comment 2085 356 NOP  <||@
  Comment 2086 358 NOP  <||@
  Comment 2087 360 NOP  <||@
  Comment 2088 362 NOP  <||@
  Comment 2089 364 NOP  <||@
  Comment 2090 366 NOP  <||@
  Comment 2091 368 r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2091 370 rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2094 372 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2099 374 rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 2103 376 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 2107 378 rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD  <||@
  Comment 2110 380 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2110 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 2115 386 JUMP ~outgoingValues: [] destination: B9 -> B26  <||@
  Comment 2120 block B7 null  <||@
  Comment 2120 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2120 266 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2120 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2130 268 NOP  <||@
  Comment 2131 270 NOP  <||@
  Comment 2132 272 NOP  <||@
  Comment 2133 274 NOP  <||@
  Comment 2134 276 NOP  <||@
  Comment 2135 278 NOP  <||@
  Comment 2136 280 NOP  <||@
  Comment 2137 282 NOP  <||@
  Comment 2138 284 NOP  <||@
  Comment 2139 286 rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2142 288 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 2142 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2147 [r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2155 290 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 2155 [rax:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2155 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2157 292 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2160 294 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 2162 block B63 null  <||@
  Comment 2162 1954 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2162 1956 NOP  <||@
  Comment 2163 1958 NOP  <||@
  Comment 2164 1960 NOP  <||@
  Comment 2165 1962 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 2172 1964 r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd]  <||@
  Comment 2178 1966 JUMP ~outgoingValues: [] destination: B63 -> B64  <||@
  Comment 2178 block B64 null  <||@
  Comment 2178 1968 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2178 1970 NOP  <||@
  Comment 2179 1972 NOP  <||@
  Comment 2180 1974 NOP  <||@
  Comment 2181 1976 NOP  <||@
  Comment 2182 1978 NOP  <||@
  Comment 2183 1980 NOP  <||@
  Comment 2184 1982 NOP  <||@
  Comment 2185 1984 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2192 1986 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2199 1988 DEOPT info [bci:0]  <||@
  Comment 2199 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2204 [stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2212 block B37 null  <||@
  Comment 2212 1138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2212 1140 NOP  <||@
  Comment 2213 1142 NOP  <||@
  Comment 2214 1144 NOP  <||@
  Comment 2215 1146 r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7]  <||@
  Comment 2221 1152 JUMP ~outgoingValues: [] destination: B37 -> B40  <||@
  Comment 2221 block B40 null  <||@
  Comment 2221 1190 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2221 1192 NOP  <||@
  Comment 2222 1194 NOP  <||@
  Comment 2223 1196 NOP  <||@
  Comment 2224 1198 NOP  <||@
  Comment 2225 1200 NOP  <||@
  Comment 2226 1202 NOP  <||@
  Comment 2227 1204 NOP  <||@
  Comment 2228 1206 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2235 1208 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2246 1210 DEOPT info [bci:21, 2, 30, 2, 2, 21]  <||@
  Comment 2246 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2251 [stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1         |2                 
     locals:  |stack:48|QWORD[.]  |r9|DWORD  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:48|QWORD[.]  |-  |rdi|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2259 block B22 null  <||@
  Comment 2259 674 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2259 676 NOP  <||@
  Comment 2260 678 NOP  <||@
  Comment 2261 680 NOP  <||@
  Comment 2262 682 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2269 684 r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7]  <||@
  Comment 2275 686 JUMP ~outgoingValues: [] destination: B22 -> B64  <||@
  Comment 2277 block B44 null  <||@
  Comment 2277 1320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2277 1322 NOP  <||@
  Comment 2278 1324 NOP  <||@
  Comment 2279 1326 NOP  <||@
  Comment 2280 1328 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 2287 1330 r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd]  <||@
  Comment 2293 1332 JUMP ~outgoingValues: [] destination: B44 -> B64  <||@
  Comment 2295 block B43 null  <||@
  Comment 2295 1306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2295 1308 NOP  <||@
  Comment 2296 1310 NOP  <||@
  Comment 2297 1312 NOP  <||@
  Comment 2298 1314 r11|QWORD = MOVE input: long[6420|0x1914]  <||@
  Comment 2305 1316 r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed]  <||@
  Comment 2311 1318 JUMP ~outgoingValues: [] destination: B43 -> B64  <||@
  Comment 2316 block B62 null  <||@
  Comment 2316 1940 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2316 1942 NOP  <||@
  Comment 2317 1944 NOP  <||@
  Comment 2318 1946 NOP  <||@
  Comment 2319 1948 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2326 1950 r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd]  <||@
  Comment 2332 1952 JUMP ~outgoingValues: [] destination: B62 -> B64  <||@
  Comment 2337 block B56 null  <||@
  Comment 2337 1738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2337 1740 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2342 1742 NOP  <||@
  Comment 2343 1744 NOP  <||@
  Comment 2344 1746 NOP  <||@
  Comment 2345 1748 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2352 1750 r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7]  <||@
  Comment 2358 1758 JUMP ~outgoingValues: [] destination: B56 -> B61  <||@
  Comment 2358 block B61 null  <||@
  Comment 2358 1918 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2358 1672 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2363 1674 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2368 1676 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2373 1920 NOP  <||@
  Comment 2374 1922 NOP  <||@
  Comment 2375 1924 NOP  <||@
  Comment 2376 1926 NOP  <||@
  Comment 2377 1928 NOP  <||@
  Comment 2378 1930 NOP  <||@
  Comment 2379 1932 NOP  <||@
  Comment 2380 1934 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2387 1936 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2394 1938 DEOPT info [bci:38, 21, 37]  <||@
  Comment 2394 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2399 [rdx:0, rsi:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2407 block B54 null  <||@
  Comment 2407 1704 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2407 1706 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2412 1708 NOP  <||@
  Comment 2413 1710 NOP  <||@
  Comment 2414 1712 NOP  <||@
  Comment 2415 1714 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2422 1716 r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7]  <||@
  Comment 2428 1724 JUMP ~outgoingValues: [] destination: B54 -> B61  <||@
  Comment 2430 block B39 null  <||@
  Comment 2430 1174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2430 1176 NOP  <||@
  Comment 2431 1178 NOP  <||@
  Comment 2432 1180 NOP  <||@
  Comment 2433 1182 r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7]  <||@
  Comment 2439 1188 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 2444 block B60 null  <||@
  Comment 2444 1896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2444 1898 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2449 1900 NOP  <||@
  Comment 2450 1902 NOP  <||@
  Comment 2451 1904 NOP  <||@
  Comment 2452 1906 r11|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 2459 1908 r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded]  <||@
  Comment 2465 1916 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 2467 block B20 null  <||@
  Comment 2467 648 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2467 650 NOP  <||@
  Comment 2468 652 NOP  <||@
  Comment 2469 654 NOP  <||@
  Comment 2470 656 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2477 658 r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7]  <||@
  Comment 2483 660 JUMP ~outgoingValues: [] destination: B20 -> B64  <||@
  Comment 2488 block B34 null  <||@
  Comment 2488 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2488 1060 NOP  <||@
  Comment 2489 1062 NOP  <||@
  Comment 2490 1064 NOP  <||@
  Comment 2491 1066 r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7]  <||@
  Comment 2497 1072 JUMP ~outgoingValues: [] destination: B34 -> B40  <||@
  Comment 2502 block B58 null  <||@
  Comment 2502 1776 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2502 1778 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2507 1780 NOP  <||@
  Comment 2508 1782 NOP  <||@
  Comment 2509 1784 NOP  <||@
  Comment 2510 1786 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2517 1788 r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7]  <||@
  Comment 2523 1796 JUMP ~outgoingValues: [] destination: B58 -> B61  <||@
  Comment 2528 block B24 null  <||@
  Comment 2528 700 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2528 702 NOP  <||@
  Comment 2529 704 NOP  <||@
  Comment 2530 706 NOP  <||@
  Comment 2531 708 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2538 710 r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7]  <||@
  Comment 2544 712 JUMP ~outgoingValues: [] destination: B24 -> B64  <||@
  Comment 2549 block B32 null  <||@
  Comment 2549 1026 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2549 1028 NOP  <||@
  Comment 2550 1030 NOP  <||@
  Comment 2551 1032 NOP  <||@
  Comment 2552 1034 r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7]  <||@
  Comment 2558 1040 JUMP ~outgoingValues: [] destination: B32 -> B40  <||@
  Comment 2563 block B52 null  <||@
  Comment 2563 1658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2563 1660 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2568 1662 NOP  <||@
  Comment 2569 1664 NOP  <||@
  Comment 2570 1666 NOP  <||@
  Comment 2571 1668 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2578 1670 r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7]  <||@
  Comment 2584 1678 JUMP ~outgoingValues: [] destination: B52 -> B61  <||@
  Comment 2594 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2619 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2639 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2649 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2664 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2679 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2694 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2727 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2732 [rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2767 [rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2797 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2802 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2832 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2837 [rcx:0, rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rdi|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2867 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2872 [rcx:0, rdx:0, rsi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rdi|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2902 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2907 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2937 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2942 [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2972 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2977 [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3007 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3012 [rax:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 3042 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3047 [rax:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 3055 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3055 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3061 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3061 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5817[java.lang.AbstractStringBuilder.append(CharSequence)]"
  method "HotSpotCompilation-5817[java.lang.AbstractStringBuilder.append(CharSequence)]"
  date 1724269728238
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad67080 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3dfa1fe66669089842400c0feff4883ec489041817f20030000000f85e30900009090909090909090909048896c244048897424204889542418448b5208448b5e084181fad8e800000f853c010000909090904181fb288100000f856c080000909090909090909090909090909090909090908b4a148b3ccd0c000000448b5614468b1cd50c000000440fbe4210448b4e0c44894c24340fbe5e10410fbec8d3ef897c2430418bc103c70fbeeb8bcd458beb41d3ed8bc8412bcd83f9010f8d2002000090909090909090413ad80f85c9050000909090909090909090909090909090908b4a14448b14cd0c000000448b5e14468b04dd0c0000000fbe5e1049c1e3038bc148c1e0033a5a100f85ba050000909090909090900fbecb418bd9d3e385db0f8cb40800009090909090452bc2413bd80f8f66080000909090909090909090909090909090488d7810498d741b10498bd2e80e2ca0fe8b7c2430488b742420909090909090909090017e0c488bc6488b6c24404883c448493ba7500400000f878d080000c5f877c3909090904181fa288100000f85bd060000909090904181fb288100000f854607000090909090909090909090909090908b7e14448b14fd0c000000448b5a0c458bc34403460c0fbe4e1041d3ea418bc8412bca48c1e70383f9010f8d730300009090909090909090909090448b5214468b04d50c000000448b4f0c0fbe4e103a4a100f856007000090909090909090908b5e0c0fbec18bc88bebd3e585ed0f8cbb07000090909090909090448b6a0c41d3e54585ed0f8c0807000090909090453be80f87b50600009090909090452bcd413be90f8f49070000895c243444895c24309090909090909090909090909090909090909090909090909090909049c1e2034c8bc7498d7a10498d742810498bd5e8c62aa0fe448b5c243044035c2434488b74242044895e0c0fb64611488b5424180fb64a110bc1884611488bc6488b6c24404883c448493ba7500400000f8749070000c5f877c39090909090909090909090909090908bcdd3e0412bc341bd0200000041d3e54503eb443be8410f4fc54103c38bc8ffc981f9f7ffff7f0f83bf05000090909090909090909090908bcdd3f88be8d3e549c1e203443bdd0f845004000090909090909090909090904d8bafb80100008bcd488d49174883e1f8488bc14903c5493b87c80100000f87b00300009090909090909090909090909090498987b8010000420f18842900010000420f18842940010000420f1884298001000049c745000100000041c74508c022000041896d0c488d41f04881f8000800000f839a03000090909048c7c010000000e9290000006666660f1f84000000000066666690660f1f4400009090909090909049c744050000000000488d400890909090483bc877e390909090909090909090909090443bdd418bcb0f4fcd85c90f8c6805000090909090413bcb0f878b040000909090903bcd0f878c050000895c242c44894424289090909090909090909090909090904d8bdd498d7a10498d7310488bd14c896c2410e83c28a0fe4c8b6c2410488b742420909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000448b561449c1e2034d85d20f841d000000498b57284883fa000f84650500004883ea0849895728490357384c8912498bd548c1ea03895614488bd64933d548c1ea160f8442000000488bd648c1ea0949ba00e0368d787f00004903d2803a027429f083042400803a00741fc602004d8b57484d85d20f84180500004983ea084d8957484d0357584989128b7c24308b5c242c448b4c2434448b442428488b542418e968fbffff48897c241044895c243090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8bd6418bd090e82cdda1fe0f1f8400c4070008488b7424200fbe4e10d3e0488b7424108bd090e80ce3a1fe0f1f8400e4070009488b74242041807f40000f842e000000448b5e1449c1e3034d85db0f841d0000004d8b57284983fa000f84480400004983ea084d8957284d0357384d891a4c8bd049c1ea03448956144c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84ee0300004983eb084d895f484d035f584d8913488bf8448b5c2430488b542418e952fbffff909090909090904c8bd6e83cdca1fe0f1f8400b408000a8b7c2430448b4c2434488b542418488b742420e90bfaffff909090904585c90f8cb301000090909090909041d1e8418bf14103f2413bf00f877502000090909090909090909090909090909090909090488d701049d1e1498d51104903d3418bcae84e36b7fee93bfaffff895c242c448944242848bec022002b787f00009090909090909090908bd5e82674b6fe0f1f84000000000085004c8be8488b542418488b742420e9aefcffff895c242c4489442428909090909090909090488bc8498d7d104833c0f348aa8b7c2430488b542418488b742420e978fcffff895c242c44894424289090909090909090909090498bbfb8010000458bc3498d70174883e6f8488bd64803d7493b97c80100000f87670000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708c022000044895f0c9090909090909090909090909090488bf748897c2410498d7a10488d7610498bd0e87d24a0fee93cfcffff48bec022002b787f0000909090909090909090418bd3e81d73b6fe0f1f8400000000008500488bf8ebab90909049c7c39402000041bacd79feff90909090909090458997840400004d899f90040000e85e38a2fe0f1f84000000000090909041bae7b5fdff909090909090904589978404000049c7879004000000000000e82f38a2fe0f1f84000000000090909049c7c30000000041bae7a1fdffeb9d90909049c7c31414000041bacdf2feffeb8b90909049c7c31419000041baeda9fdffe976ffffff90909049c7c39407000041bacd78feffe961ffffff44895c243090909049c7c30000000041bae781fdff448b442430488b542418488b74242090909090909090458997840400004d899f90040000e89b37a2fe0f1f84000000000044895c243090909049c7c30000000041bae785fdffebb890909041bae7b1fdffe921ffffff44895c243090909049c7c3140f000041baed8dfdffeb9390909049c7c30000000041bae7a5fdffe9cafeffff90909041bae7b9fdffe9e7feffff44895c243090909049c7c30000000041bae77dfdffe956ffffff90909049c7c30000000041bae79dfdffe98dfeffff90909041bae7bdfdffe9aafeffff44895c243090909049c7c30000000041bae789fdffe919ffffff48896c2440e87937a0fee90ef6fffff4488d0d5ff7ffff49898f68040000e94045a2fef4488d0da3f8ffff49898f68040000e92c45a2fef44c891424e82207b6fee99cfafffff448891424e89328b6fee9e9fafffff44c891c24e80407b6fee9b9fbfffff44c891424e87528b6fee913fcfffff441c78784040000edcefdff49c7879004000014000000e84e36a2fe0f1f84000000000041c78784040000f5ecfeff49c7879004000000000000e82b36a2fe0f1f84000000000041c78784040000f5defeff49c7879004000000000000e80836a2fe0f1f84000000000041c78784040000f59afeff49c7879004000000000000e8e535a2fe0f1f84000000000041c78784040000f5f7fdff49c7879004000000000000e8c235a2fe0f1f84000000000041c78784040000f56ffeff49c7879004000000000000e89f35a2fe0f1f84000000000041c78784040000f55efeff49c7879004000000000000e87c35a2fe0f1f84000000000041c78784040000f55dfeff49c7879004000000000000e85935a2fe0f1f84000000000041c787840400008f92fcff49c7879004000000000000e83635a2fe0f1f84000000000041c787840400008fe2fcff49c7879004000000000000e81335a2fe0f1f840000000000e88cd6b5fef4e8a632a2fef4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@33c10852 slotKind: QWORD  <||@
  Comment 73 26 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 78 28 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 83 30 r10|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 83 [rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 83 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 32 r11|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 91 34 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.6368791901525137 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B45 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 91 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 104 block B1 null  <||@
  Comment 104 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 38 NOP  <||@
  Comment 105 40 NOP  <||@
  Comment 106 42 NOP  <||@
  Comment 107 44 NOP  <||@
  Comment 108 46 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B44 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 108 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 121 block B2 null  <||@
  Comment 121 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 121 50 NOP  <||@
  Comment 122 52 NOP  <||@
  Comment 123 54 NOP  <||@
  Comment 124 56 NOP  <||@
  Comment 125 58 NOP  <||@
  Comment 126 60 NOP  <||@
  Comment 127 62 NOP  <||@
  Comment 128 64 NOP  <||@
  Comment 129 66 NOP  <||@
  Comment 130 68 NOP  <||@
  Comment 131 70 NOP  <||@
  Comment 132 72 NOP  <||@
  Comment 133 74 NOP  <||@
  Comment 134 76 NOP  <||@
  Comment 135 78 NOP  <||@
  Comment 136 80 NOP  <||@
  Comment 137 82 NOP  <||@
  Comment 138 84 NOP  <||@
  Comment 139 86 NOP  <||@
  Comment 140 88 rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 143 90 rdi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 143 [rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 143 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 150 92 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 154 94 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 154 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 154 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 162 96 r8|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 167 98 r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 171 100 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 176 102 rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 180 104 rcx|DWORD = MOVSXB value: r8|DWORD size: DWORD  <||@
  Comment 184 106 rdi|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 186 108 stack:32|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 190 110 rax|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 195 112 rbp|DWORD = MOVSXB value: rbx|DWORD size: DWORD  <||@
  Comment 198 114 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 200 116 r13|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 206 118 rcx|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 211 120 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null  <||@
  Comment 220 block B3 null  <||@
  Comment 220 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 220 124 NOP  <||@
  Comment 221 126 NOP  <||@
  Comment 222 128 NOP  <||@
  Comment 223 130 JUMP ~outgoingValues: [] destination: B3 -> B27  <||@
  Comment 223 block B27 null  <||@
  Comment 223 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 223 908 NOP  <||@
  Comment 224 910 NOP  <||@
  Comment 225 912 NOP  <||@
  Comment 226 914 NOP  <||@
  Comment 227 916 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.998717015375415 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: BYTE  <||@
  Comment 236 block B28 null  <||@
  Comment 236 918 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 236 920 NOP  <||@
  Comment 237 922 NOP  <||@
  Comment 238 924 NOP  <||@
  Comment 239 926 JUMP ~outgoingValues: [] destination: B28 -> B30  <||@
  Comment 239 block B30 null  <||@
  Comment 239 960 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 239 962 NOP  <||@
  Comment 240 964 NOP  <||@
  Comment 241 966 NOP  <||@
  Comment 242 968 NOP  <||@
  Comment 243 970 NOP  <||@
  Comment 244 972 NOP  <||@
  Comment 245 974 NOP  <||@
  Comment 246 976 NOP  <||@
  Comment 247 978 NOP  <||@
  Comment 248 980 NOP  <||@
  Comment 249 982 NOP  <||@
  Comment 250 984 NOP  <||@
  Comment 251 986 NOP  <||@
  Comment 252 988 rcx|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 255 990 r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21]  <||@
  Comment 255 [rcx:0, rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rdi|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 255 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 263 992 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 267 994 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21]  <||@
  Comment 267 [rcx:0, rdx:0, rsi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rdi|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 267 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 275 996 rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 279 998 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 283 1000 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 289 1002 CMPBRANCH (x: rbx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 size: BYTE  <||@
  Comment 298 block B31 null  <||@
  Comment 298 1004 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 298 1006 NOP  <||@
  Comment 299 1008 NOP  <||@
  Comment 300 1010 NOP  <||@
  Comment 301 1012 NOP  <||@
  Comment 302 1014 NOP  <||@
  Comment 303 1016 NOP  <||@
  Comment 304 1018 NOP  <||@
  Comment 305 1020 rcx|DWORD = MOVSXB value: rbx|DWORD size: DWORD  <||@
  Comment 308 1022 rbx|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 313 1024 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD  <||@
  Comment 321 block B33 null  <||@
  Comment 321 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 321 1044 NOP  <||@
  Comment 322 1046 NOP  <||@
  Comment 323 1048 NOP  <||@
  Comment 324 1050 NOP  <||@
  Comment 325 1052 NOP  <||@
  Comment 326 1054 r8|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 329 1056 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 338 block B35 null  <||@
  Comment 338 1074 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 338 1076 NOP  <||@
  Comment 339 1078 NOP  <||@
  Comment 340 1080 NOP  <||@
  Comment 341 1082 NOP  <||@
  Comment 342 1084 NOP  <||@
  Comment 343 1086 NOP  <||@
  Comment 344 1088 NOP  <||@
  Comment 345 1090 NOP  <||@
  Comment 346 1092 NOP  <||@
  Comment 347 1094 NOP  <||@
  Comment 348 1096 NOP  <||@
  Comment 349 1098 NOP  <||@
  Comment 350 1100 NOP  <||@
  Comment 351 1102 NOP  <||@
  Comment 352 1104 NOP  <||@
  Comment 353 1106 rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 353 1108 r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 353 1110 r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 353 1112 rdi|QWORD = LEA address: [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 357 1114 rsi|QWORD = LEA address: [r11|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD  <||@
  Comment 362 1116 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 365 1118 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 365 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 370 1124 JUMP ~outgoingValues: [] destination: B35 -> B42  <||@
  Comment 370 block B42 null  <||@
  Comment 370 1280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 370 1120 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 374 1122 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 379 1282 NOP  <||@
  Comment 380 1284 NOP  <||@
  Comment 381 1286 NOP  <||@
  Comment 382 1288 NOP  <||@
  Comment 383 1290 NOP  <||@
  Comment 384 1292 NOP  <||@
  Comment 385 1294 NOP  <||@
  Comment 386 1296 NOP  <||@
  Comment 387 1298 NOP  <||@
  Comment 388 1300 ADD (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 391 1302 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 394 1304 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 403 POLL_RETURN_FAR  <||@
  Comment 420 block B45 null  <||@
  Comment 420 1334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 420 1336 NOP  <||@
  Comment 421 1338 NOP  <||@
  Comment 422 1340 NOP  <||@
  Comment 423 1342 NOP  <||@
  Comment 424 1344 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B63 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 424 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 437 block B46 null  <||@
  Comment 437 1346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 437 1348 NOP  <||@
  Comment 438 1350 NOP  <||@
  Comment 439 1352 NOP  <||@
  Comment 440 1354 NOP  <||@
  Comment 441 1356 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B62 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 441 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 454 block B47 null  <||@
  Comment 454 1358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 1360 NOP  <||@
  Comment 455 1362 NOP  <||@
  Comment 456 1364 NOP  <||@
  Comment 457 1366 NOP  <||@
  Comment 458 1368 NOP  <||@
  Comment 459 1370 NOP  <||@
  Comment 460 1372 NOP  <||@
  Comment 461 1374 NOP  <||@
  Comment 462 1376 NOP  <||@
  Comment 463 1378 NOP  <||@
  Comment 464 1380 NOP  <||@
  Comment 465 1382 NOP  <||@
  Comment 466 1384 NOP  <||@
  Comment 467 1386 NOP  <||@
  Comment 468 1388 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 471 1390 r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 471 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 471 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 479 1392 r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 483 1394 r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 490 1396 rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 494 1398 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 497 1400 rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 503 1402 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 507 1404 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 1 size: DWORD inlinedY: null  <||@
  Comment 516 block B48 null  <||@
  Comment 516 1406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 516 1408 NOP  <||@
  Comment 517 1410 NOP  <||@
  Comment 518 1412 NOP  <||@
  Comment 519 1414 JUMP ~outgoingValues: [] destination: B48 -> B50  <||@
  Comment 519 block B50 null  <||@
  Comment 519 1602 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 519 1604 NOP  <||@
  Comment 520 1606 NOP  <||@
  Comment 521 1608 NOP  <||@
  Comment 522 1610 NOP  <||@
  Comment 523 1612 NOP  <||@
  Comment 524 1614 NOP  <||@
  Comment 525 1616 NOP  <||@
  Comment 526 1618 NOP  <||@
  Comment 527 1620 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 531 1622 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37]  <||@
  Comment 531 [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 531 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 539 1624 r9|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37]  <||@
  Comment 539 [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 539 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 543 1626 rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 547 1628 CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B60 size: BYTE  <||@
  Comment 556 block B51 null  <||@
  Comment 556 1630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 556 1632 NOP  <||@
  Comment 557 1634 NOP  <||@
  Comment 558 1636 NOP  <||@
  Comment 559 1638 NOP  <||@
  Comment 560 1640 NOP  <||@
  Comment 561 1642 NOP  <||@
  Comment 562 1644 NOP  <||@
  Comment 563 1646 NOP  <||@
  Comment 564 1648 rbx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 567 1650 rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD  <||@
  Comment 570 1652 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 572 1654 rbp|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 576 1656 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD  <||@
  Comment 584 block B53 null  <||@
  Comment 584 1680 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 584 1682 NOP  <||@
  Comment 585 1684 NOP  <||@
  Comment 586 1686 NOP  <||@
  Comment 587 1688 NOP  <||@
  Comment 588 1690 NOP  <||@
  Comment 589 1692 NOP  <||@
  Comment 590 1694 NOP  <||@
  Comment 591 1696 r13|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 595 1700 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 598 1702 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD  <||@
  Comment 607 block B55 null  <||@
  Comment 607 1726 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 607 1728 NOP  <||@
  Comment 608 1730 NOP  <||@
  Comment 609 1732 NOP  <||@
  Comment 610 1734 NOP  <||@
  Comment 611 1736 CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD  <||@
  Comment 620 block B57 null  <||@
  Comment 620 1760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 620 1762 NOP  <||@
  Comment 621 1764 NOP  <||@
  Comment 622 1766 NOP  <||@
  Comment 623 1768 NOP  <||@
  Comment 624 1770 NOP  <||@
  Comment 625 1772 r9|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 628 1774 CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD  <||@
  Comment 637 block B59 null  <||@
  Comment 637 1798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 637 1800 stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 641 1802 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 646 1804 NOP  <||@
  Comment 647 1806 NOP  <||@
  Comment 648 1808 NOP  <||@
  Comment 649 1810 NOP  <||@
  Comment 650 1812 NOP  <||@
  Comment 651 1814 NOP  <||@
  Comment 652 1816 NOP  <||@
  Comment 653 1818 NOP  <||@
  Comment 654 1820 NOP  <||@
  Comment 655 1822 NOP  <||@
  Comment 656 1824 NOP  <||@
  Comment 657 1826 NOP  <||@
  Comment 658 1828 NOP  <||@
  Comment 659 1830 NOP  <||@
  Comment 660 1832 NOP  <||@
  Comment 661 1834 NOP  <||@
  Comment 662 1836 NOP  <||@
  Comment 663 1838 NOP  <||@
  Comment 664 1840 NOP  <||@
  Comment 665 1842 NOP  <||@
  Comment 666 1844 NOP  <||@
  Comment 667 1846 NOP  <||@
  Comment 668 1848 NOP  <||@
  Comment 669 1850 NOP  <||@
  Comment 670 1852 NOP  <||@
  Comment 671 1854 NOP  <||@
  Comment 672 1856 NOP  <||@
  Comment 673 1858 NOP  <||@
  Comment 674 1860 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 678 1862 r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 678 1864 r8|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 681 1866 r13|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 681 1868 rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 685 1870 rsi|QWORD = LEA address: [r8|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD  <||@
  Comment 690 1872 rdx|QWORD = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 693 1874 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 693 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 698 1876 r11|DWORD = ADD (x: stack:32|DWORD, y: stack:28|DWORD) size: DWORD  <||@
  Comment 708 1878 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 713 1880 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 717 1882 rax|DWORD = MOVZXB input: [rsi|QWORD[.] + 17] size: DWORD  <||@
  Comment 721 1884 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 726 1886 rcx|DWORD = MOVZXB input: [rdx|QWORD[.] + 17] size: DWORD  <||@
  Comment 730 1888 rax|DWORD = OR (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 732 1890 MOVB (x: [rsi|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE  <||@
  Comment 735 1892 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 738 1894 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 747 POLL_RETURN_FAR  <||@
  Comment 764 block B4 null  <||@
  Comment 764 132 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 134 NOP  <||@
  Comment 765 136 NOP  <||@
  Comment 766 138 NOP  <||@
  Comment 767 140 NOP  <||@
  Comment 768 142 NOP  <||@
  Comment 769 144 NOP  <||@
  Comment 770 146 NOP  <||@
  Comment 771 148 NOP  <||@
  Comment 772 150 NOP  <||@
  Comment 773 152 NOP  <||@
  Comment 774 154 NOP  <||@
  Comment 775 156 NOP  <||@
  Comment 776 158 NOP  <||@
  Comment 777 160 NOP  <||@
  Comment 778 162 NOP  <||@
  Comment 779 164 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 781 166 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 783 168 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 786 170 r13|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 792 174 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 795 176 r13|DWORD = ADD (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 798 178 CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 801 180 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 805 182 rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 808 184 rcx|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 812 186 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B43 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 824 block B5 null  <||@
  Comment 824 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 824 190 NOP  <||@
  Comment 825 192 NOP  <||@
  Comment 826 194 NOP  <||@
  Comment 827 196 NOP  <||@
  Comment 828 198 NOP  <||@
  Comment 829 200 NOP  <||@
  Comment 830 202 NOP  <||@
  Comment 831 204 NOP  <||@
  Comment 832 206 NOP  <||@
  Comment 833 208 NOP  <||@
  Comment 834 210 NOP  <||@
  Comment 835 212 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 837 214 rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 839 218 rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 843 220 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 847 222 CMPBRANCH (x: r11|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B10 size: DWORD  <||@
  Comment 856 block B10 null  <||@
  Comment 856 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 856 390 NOP  <||@
  Comment 857 392 NOP  <||@
  Comment 858 394 NOP  <||@
  Comment 859 396 NOP  <||@
  Comment 860 398 NOP  <||@
  Comment 861 400 NOP  <||@
  Comment 862 402 NOP  <||@
  Comment 863 404 NOP  <||@
  Comment 864 406 NOP  <||@
  Comment 865 408 NOP  <||@
  Comment 866 410 NOP  <||@
  Comment 867 412 r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 874 414 rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 876 416 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 880 418 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 884 420 rax|QWORD = ADD (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 890 422 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD  <||@
  Comment 903 block B12 null  <||@
  Comment 903 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 903 472 NOP  <||@
  Comment 904 474 NOP  <||@
  Comment 905 476 NOP  <||@
  Comment 906 478 NOP  <||@
  Comment 907 480 NOP  <||@
  Comment 908 482 NOP  <||@
  Comment 909 484 NOP  <||@
  Comment 910 486 NOP  <||@
  Comment 911 488 NOP  <||@
  Comment 912 490 NOP  <||@
  Comment 913 492 NOP  <||@
  Comment 914 494 NOP  <||@
  Comment 915 496 NOP  <||@
  Comment 916 498 NOP  <||@
  Comment 917 500 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 924 502 AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 256] instr: 0  <||@
  Comment 933 504 AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 320] instr: 0  <||@
  Comment 942 506 AMD64PREFETCH ~address: [rcx|QWORD + r13|QWORD * 1 + 384] instr: 0  <||@
  Comment 951 508 MOV x: [r13|QWORD] y: 1 size: QWORD  <||@
  Comment 959 510 MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 959 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 967 512 MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 971 514 rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 975 516 CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 988 block B13 null  <||@
  Comment 988 518 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 988 520 NOP  <||@
  Comment 989 522 NOP  <||@
  Comment 990 524 NOP  <||@
  Comment 991 526 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 998 528 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 1003 block B15 loop 0 depth 1 header:829|LoopBegin  <||@
  Comment 1003 542 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1024 544 NOP  <||@
  Comment 1025 546 NOP  <||@
  Comment 1026 548 NOP  <||@
  Comment 1027 550 NOP  <||@
  Comment 1028 552 NOP  <||@
  Comment 1029 554 NOP  <||@
  Comment 1030 556 NOP  <||@
  Comment 1031 558 MOV x: [r13|QWORD + rax|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1040 560 rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD  <||@
  Comment 1044 562 JUMP ~outgoingValues: [] destination: B15 -> B14  <||@
  Comment 1044 block B14 loop 0 depth 1 header:829|LoopBegin  <||@
  Comment 1044 530 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1044 532 NOP  <||@
  Comment 1045 534 NOP  <||@
  Comment 1046 536 NOP  <||@
  Comment 1047 538 NOP  <||@
  Comment 1048 540 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 1053 block B16 null  <||@
  Comment 1053 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1053 566 NOP  <||@
  Comment 1054 568 NOP  <||@
  Comment 1055 570 NOP  <||@
  Comment 1056 572 JUMP ~outgoingValues: [] destination: B16 -> B18  <||@
  Comment 1056 block B18 null  <||@
  Comment 1056 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1056 616 NOP  <||@
  Comment 1057 618 NOP  <||@
  Comment 1058 620 NOP  <||@
  Comment 1059 622 NOP  <||@
  Comment 1060 624 r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 1060 626 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 1060 block B19 null  <||@
  Comment 1060 628 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1060 630 NOP  <||@
  Comment 1061 632 NOP  <||@
  Comment 1062 634 NOP  <||@
  Comment 1063 636 NOP  <||@
  Comment 1064 638 NOP  <||@
  Comment 1065 640 NOP  <||@
  Comment 1066 642 CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1069 644 rcx|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rbp|DWORD) condition: >  <||@
  Comment 1075 646 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 1083 block B21 null  <||@
  Comment 1083 662 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1083 664 NOP  <||@
  Comment 1084 666 NOP  <||@
  Comment 1085 668 NOP  <||@
  Comment 1086 670 NOP  <||@
  Comment 1087 672 CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 1096 block B23 null  <||@
  Comment 1096 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1096 690 NOP  <||@
  Comment 1097 692 NOP  <||@
  Comment 1098 694 NOP  <||@
  Comment 1099 696 NOP  <||@
  Comment 1100 698 CMPBRANCH (x: rcx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 1108 block B25 null  <||@
  Comment 1108 714 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1108 716 stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1112 718 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1117 720 NOP  <||@
  Comment 1118 722 NOP  <||@
  Comment 1119 724 NOP  <||@
  Comment 1120 726 NOP  <||@
  Comment 1121 728 NOP  <||@
  Comment 1122 730 NOP  <||@
  Comment 1123 732 NOP  <||@
  Comment 1124 734 NOP  <||@
  Comment 1125 736 NOP  <||@
  Comment 1126 738 NOP  <||@
  Comment 1127 740 NOP  <||@
  Comment 1128 742 NOP  <||@
  Comment 1129 744 NOP  <||@
  Comment 1130 746 NOP  <||@
  Comment 1131 748 NOP  <||@
  Comment 1132 750 r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1132 752 r11|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1135 754 rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1135 756 rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 1139 758 rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 1143 760 rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1146 762 stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1151 764 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1151 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1156 770 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 1156 block B26 null  <||@
  Comment 1156 772 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1156 382 r13|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1161 384 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1166 774 NOP  <||@
  Comment 1167 776 NOP  <||@
  Comment 1168 778 NOP  <||@
  Comment 1169 780 NOP  <||@
  Comment 1170 782 NOP  <||@
  Comment 1171 784 NOP  <||@
  Comment 1172 786 NOP  <||@
  Comment 1173 788 NOP  <||@
  Comment 1174 790 NOP  <||@
  Comment 1175 792 NOP  <||@
  Comment 1176 794 NOP  <||@
  Comment 1177 796 NOP  <||@
  Comment 1178 798 NOP  <||@
  Comment 1179 800 NOP  <||@
  Comment 1180 802 NOP  <||@
  Comment 1181 804 NOP  <||@
  Comment 1182 806 NOP  <||@
  Comment 1183 808 NOP  <||@
  Comment 1184 810 NOP  <||@
  Comment 1185 812 NOP  <||@
  Comment 1186 814 NOP  <||@
  Comment 1187 816 NOP  <||@
  Comment 1188 818 NOP  <||@
  Comment 1189 820 NOP  <||@
  Comment 1190 822 NOP  <||@
  Comment 1191 824 NOP  <||@
  Comment 1192 826 NOP  <||@
  Comment 1193 828 NOP  <||@
  Comment 1194 830 NOP  <||@
  Comment 1195 832 NOP  <||@
  Comment 1196 834 NOP  <||@
  Comment 1197 836 NOP  <||@
  Comment 1198 838 NOP  <||@
  Comment 1199 840 NOP  <||@
  Comment 1200 842 NOP  <||@
  Comment 1201 844 NOP  <||@
  Comment 1202 846 NOP  <||@
  Comment 1203 848 NOP  <||@
  Comment 1204 850 NOP  <||@
  Comment 1205 852 NOP  <||@
  Comment 1206 854 NOP  <||@
  Comment 1207 856 NOP  <||@
  Comment 1208 858 NOP  <||@
  Comment 1209 860 NOP  <||@
  Comment 1210 862 NOP  <||@
  Comment 1211 864 NOP  <||@
  Comment 1212 866 NOP  <||@
  Comment 1213 868 NOP  <||@
  Comment 1214 870 NOP  <||@
  Comment 1215 872 NOP  <||@
  Comment 1216 874 NOP  <||@
  Comment 1217 876 NOP  <||@
  Comment 1218 878 NOP  <||@
  Comment 1219 880 NOP  <||@
  Comment 1220 882 NOP  <||@
  Comment 1221 884 NOP  <||@
  Comment 1222 886 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2  <||@
  Comment 1279 888 rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 1286 890 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 1289 892 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2  <||@
  Comment 1371 894 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1375 896 rbx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1379 898 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1384 900 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1389 902 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1394 904 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 1399 block B49 null  <||@
  Comment 1399 1416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1399 1418 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1404 1420 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1409 1422 NOP  <||@
  Comment 1410 1424 NOP  <||@
  Comment 1411 1426 NOP  <||@
  Comment 1412 1428 NOP  <||@
  Comment 1413 1430 NOP  <||@
  Comment 1414 1432 NOP  <||@
  Comment 1415 1434 NOP  <||@
  Comment 1416 1436 NOP  <||@
  Comment 1417 1438 NOP  <||@
  Comment 1418 1440 NOP  <||@
  Comment 1419 1442 NOP  <||@
  Comment 1420 1444 NOP  <||@
  Comment 1421 1446 NOP  <||@
  Comment 1422 1448 NOP  <||@
  Comment 1423 1450 NOP  <||@
  Comment 1424 1452 NOP  <||@
  Comment 1425 1454 NOP  <||@
  Comment 1426 1456 NOP  <||@
  Comment 1427 1458 NOP  <||@
  Comment 1428 1460 NOP  <||@
  Comment 1429 1462 NOP  <||@
  Comment 1430 1464 NOP  <||@
  Comment 1431 1466 NOP  <||@
  Comment 1432 1468 NOP  <||@
  Comment 1433 1470 NOP  <||@
  Comment 1434 1472 NOP  <||@
  Comment 1435 1474 NOP  <||@
  Comment 1436 1476 NOP  <||@
  Comment 1437 1478 NOP  <||@
  Comment 1438 1480 NOP  <||@
  Comment 1439 1482 NOP  <||@
  Comment 1440 1484 NOP  <||@
  Comment 1441 1486 NOP  <||@
  Comment 1442 1488 NOP  <||@
  Comment 1443 1490 NOP  <||@
  Comment 1444 1492 NOP  <||@
  Comment 1445 1494 NOP  <||@
  Comment 1446 1496 NOP  <||@
  Comment 1447 1498 NOP  <||@
  Comment 1448 1500 NOP  <||@
  Comment 1449 1502 NOP  <||@
  Comment 1450 1504 NOP  <||@
  Comment 1451 1506 NOP  <||@
  Comment 1452 1508 NOP  <||@
  Comment 1453 1510 NOP  <||@
  Comment 1454 1512 NOP  <||@
  Comment 1455 1514 NOP  <||@
  Comment 1456 1516 NOP  <||@
  Comment 1457 1518 NOP  <||@
  Comment 1458 1520 NOP  <||@
  Comment 1459 1522 NOP  <||@
  Comment 1460 1524 NOP  <||@
  Comment 1461 1526 NOP  <||@
  Comment 1462 1528 NOP  <||@
  Comment 1463 1530 NOP  <||@
  Comment 1464 1532 NOP  <||@
  Comment 1465 1534 NOP  <||@
  Comment 1466 1536 NOP  <||@
  Comment 1467 1538 NOP  <||@
  Comment 1468 1540 NOP  <||@
  Comment 1469 1542 NOP  <||@
  Comment 1470 1544 NOP  <||@
  Comment 1471 1546 NOP  <||@
  Comment 1472 1548 NOP  <||@
  Comment 1473 1550 NOP  <||@
  Comment 1474 1552 NOP  <||@
  Comment 1475 1554 NOP  <||@
  Comment 1476 1556 NOP  <||@
  Comment 1477 1558 NOP  <||@
  Comment 1478 1560 NOP  <||@
  Comment 1479 1562 NOP  <||@
  Comment 1480 1564 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1483 1568 rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1486 1570 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:24, 21, 37]  <||@
  Comment 1487 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1487 INVOKESPECIAL  <||@
  Comment 1492 [stack:16, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |-                  |- 
     stack:   |stack:48|QWORD[.]  |stack:64|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1500 1572 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1505 1574 rcx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1509 1576 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1511 1578 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1516 1580 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1518 1582 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:32, 21, 37]  <||@
  Comment 1519 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 1519 INVOKESTATIC  <||@
  Comment 1524 [stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:32|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1532 1584 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1537 1586 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2  <||@
  Comment 1594 1588 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@729781e7 encoding: base: 0 shift: 3  <||@
  Comment 1601 1590 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1605 1592 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@136527d2  <||@
  Comment 1699 1594 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1702 1596 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1707 1598 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1712 1600 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 1717 block B29 null  <||@
  Comment 1717 928 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1717 930 NOP  <||@
  Comment 1718 932 NOP  <||@
  Comment 1719 934 NOP  <||@
  Comment 1720 936 NOP  <||@
  Comment 1721 938 NOP  <||@
  Comment 1722 940 NOP  <||@
  Comment 1723 942 NOP  <||@
  Comment 1724 944 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1727 948 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:18, 2, 30, 2, 2, 21]  <||@
  Comment 1727 {HotSpotMethod<AbstractStringBuilder.inflate()>}  <||@
  Comment 1727 INVOKESPECIAL  <||@
  Comment 1732 [stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1               |2                 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:48|QWORD[.]  |-  |stack:32|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1740 950 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1744 952 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1749 954 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 956 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1759 958 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 1764 block B36 null  <||@
  Comment 1764 1126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1764 1128 NOP  <||@
  Comment 1765 1130 NOP  <||@
  Comment 1766 1132 NOP  <||@
  Comment 1767 1134 NOP  <||@
  Comment 1768 1136 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 1777 block B38 null  <||@
  Comment 1777 1154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1777 1156 NOP  <||@
  Comment 1778 1158 NOP  <||@
  Comment 1779 1160 NOP  <||@
  Comment 1780 1162 NOP  <||@
  Comment 1781 1164 NOP  <||@
  Comment 1782 1166 NOP  <||@
  Comment 1783 1168 r8|DWORD = SHR value: r8|DWORD size: DWORD  <||@
  Comment 1786 1170 rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1792 1172 CMPBRANCH (x: rsi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B41 size: DWORD  <||@
  Comment 1801 block B41 null  <||@
  Comment 1801 1212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1801 1214 NOP  <||@
  Comment 1802 1216 NOP  <||@
  Comment 1803 1218 NOP  <||@
  Comment 1804 1220 NOP  <||@
  Comment 1805 1222 NOP  <||@
  Comment 1806 1224 NOP  <||@
  Comment 1807 1226 NOP  <||@
  Comment 1808 1228 NOP  <||@
  Comment 1809 1230 NOP  <||@
  Comment 1810 1232 NOP  <||@
  Comment 1811 1234 NOP  <||@
  Comment 1812 1236 NOP  <||@
  Comment 1813 1238 NOP  <||@
  Comment 1814 1240 NOP  <||@
  Comment 1815 1242 NOP  <||@
  Comment 1816 1244 NOP  <||@
  Comment 1817 1246 NOP  <||@
  Comment 1818 1248 NOP  <||@
  Comment 1819 1250 NOP  <||@
  Comment 1820 1252 rax|QWORD[*] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1820 1254 r11|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1820 1256 rsi|QWORD[*] = LEA address: [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 1824 1258 r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1824 1260 r9|QWORD = SHL value: r9|QWORD size: QWORD  <||@
  Comment 1827 1262 rdx|QWORD = LEA address: [r9|QWORD + 16] size: QWORD  <||@
  Comment 1831 1264 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: r11|QWORD[*]) size: QWORD  <||@
  Comment 1834 1266 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1834 1268 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1834 1270 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1837 1272 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 1837 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 1842 1278 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 1847 block B11 null  <||@
  Comment 1847 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1847 426 stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1851 428 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1856 430 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1856 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1866 432 NOP  <||@
  Comment 1867 434 NOP  <||@
  Comment 1868 436 NOP  <||@
  Comment 1869 438 NOP  <||@
  Comment 1870 440 NOP  <||@
  Comment 1871 442 NOP  <||@
  Comment 1872 444 NOP  <||@
  Comment 1873 446 NOP  <||@
  Comment 1874 448 NOP  <||@
  Comment 1875 450 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1877 452 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1877 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1882 [r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1890 454 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1890 [rax:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1890 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1892 456 r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1895 464 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1900 466 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1905 468 JUMP ~outgoingValues: [] destination: B11 -> B19  <||@
  Comment 1910 block B17 null  <||@
  Comment 1910 574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1910 576 stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1914 578 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1919 580 NOP  <||@
  Comment 1920 582 NOP  <||@
  Comment 1921 584 NOP  <||@
  Comment 1922 586 NOP  <||@
  Comment 1923 588 NOP  <||@
  Comment 1924 590 NOP  <||@
  Comment 1925 592 NOP  <||@
  Comment 1926 594 NOP  <||@
  Comment 1927 596 NOP  <||@
  Comment 1928 598 rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1931 600 ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1941 602 rdi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1945 608 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1950 610 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1955 612 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 1960 block B6 null  <||@
  Comment 1960 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1960 226 stack:36|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1964 228 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1969 230 NOP  <||@
  Comment 1970 232 NOP  <||@
  Comment 1971 234 NOP  <||@
  Comment 1972 236 NOP  <||@
  Comment 1973 238 NOP  <||@
  Comment 1974 240 NOP  <||@
  Comment 1975 242 NOP  <||@
  Comment 1976 244 NOP  <||@
  Comment 1977 246 NOP  <||@
  Comment 1978 248 NOP  <||@
  Comment 1979 250 NOP  <||@
  Comment 1980 252 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1987 254 r8|QWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1990 256 rsi|QWORD = LEA address: [r8|QWORD + 23] size: QWORD  <||@
  Comment 1994 258 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1998 260 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2004 262 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD  <||@
  Comment 2017 block B8 null  <||@
  Comment 2017 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2017 298 NOP  <||@
  Comment 2018 300 NOP  <||@
  Comment 2019 302 NOP  <||@
  Comment 2020 304 NOP  <||@
  Comment 2021 306 NOP  <||@
  Comment 2022 308 NOP  <||@
  Comment 2023 310 NOP  <||@
  Comment 2024 312 NOP  <||@
  Comment 2025 314 NOP  <||@
  Comment 2026 316 NOP  <||@
  Comment 2027 318 NOP  <||@
  Comment 2028 320 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 2035 322 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 2043 324 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 2051 326 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 2059 328 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 2066 330 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 2066 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 2073 332 MOV (x: [rdi|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 2077 334 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 2077 336 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 2077 block B9 null  <||@
  Comment 2077 338 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2077 340 NOP  <||@
  Comment 2078 342 NOP  <||@
  Comment 2079 344 NOP  <||@
  Comment 2080 346 NOP  <||@
  Comment 2081 348 NOP  <||@
  Comment 2082 350 NOP  <||@
  Comment 2083 352 NOP  <||@
  Comment 2084 354 NOP  <||@
  Comment 2085 356 NOP  <||@
  Comment 2086 358 NOP  <||@
  Comment 2087 360 NOP  <||@
  Comment 2088 362 NOP  <||@
  Comment 2089 364 NOP  <||@
  Comment 2090 366 NOP  <||@
  Comment 2091 368 r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2091 370 rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2094 372 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2099 374 rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 2103 376 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 2107 378 rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD  <||@
  Comment 2110 380 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2110 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 2115 386 JUMP ~outgoingValues: [] destination: B9 -> B26  <||@
  Comment 2120 block B7 null  <||@
  Comment 2120 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2120 266 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2120 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2130 268 NOP  <||@
  Comment 2131 270 NOP  <||@
  Comment 2132 272 NOP  <||@
  Comment 2133 274 NOP  <||@
  Comment 2134 276 NOP  <||@
  Comment 2135 278 NOP  <||@
  Comment 2136 280 NOP  <||@
  Comment 2137 282 NOP  <||@
  Comment 2138 284 NOP  <||@
  Comment 2139 286 rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2142 288 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 2142 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2147 [r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2155 290 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 2155 [rax:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2155 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2157 292 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2160 294 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 2162 block B63 null  <||@
  Comment 2162 1954 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2162 1956 NOP  <||@
  Comment 2163 1958 NOP  <||@
  Comment 2164 1960 NOP  <||@
  Comment 2165 1962 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 2172 1964 r10|DWORD = MOVE input: int[-99891|0xfffffffffffe79cd]  <||@
  Comment 2178 1966 JUMP ~outgoingValues: [] destination: B63 -> B64  <||@
  Comment 2178 block B64 null  <||@
  Comment 2178 1968 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2178 1970 NOP  <||@
  Comment 2179 1972 NOP  <||@
  Comment 2180 1974 NOP  <||@
  Comment 2181 1976 NOP  <||@
  Comment 2182 1978 NOP  <||@
  Comment 2183 1980 NOP  <||@
  Comment 2184 1982 NOP  <||@
  Comment 2185 1984 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2192 1986 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2199 1988 DEOPT info [bci:0]  <||@
  Comment 2199 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2204 [stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 2212 block B37 null  <||@
  Comment 2212 1138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2212 1140 NOP  <||@
  Comment 2213 1142 NOP  <||@
  Comment 2214 1144 NOP  <||@
  Comment 2215 1146 r10|DWORD = MOVE input: int[-150041|0xfffffffffffdb5e7]  <||@
  Comment 2221 1152 JUMP ~outgoingValues: [] destination: B37 -> B40  <||@
  Comment 2221 block B40 null  <||@
  Comment 2221 1190 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2221 1192 NOP  <||@
  Comment 2222 1194 NOP  <||@
  Comment 2223 1196 NOP  <||@
  Comment 2224 1198 NOP  <||@
  Comment 2225 1200 NOP  <||@
  Comment 2226 1202 NOP  <||@
  Comment 2227 1204 NOP  <||@
  Comment 2228 1206 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2235 1208 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2246 1210 DEOPT info [bci:21, 2, 30, 2, 2, 21]  <||@
  Comment 2246 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2251 [stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1         |2                 
     locals:  |stack:48|QWORD[.]  |r9|DWORD  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:48|QWORD[.]  |-  |rdi|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2259 block B22 null  <||@
  Comment 2259 674 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2259 676 NOP  <||@
  Comment 2260 678 NOP  <||@
  Comment 2261 680 NOP  <||@
  Comment 2262 682 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2269 684 r10|DWORD = MOVE input: int[-155161|0xfffffffffffda1e7]  <||@
  Comment 2275 686 JUMP ~outgoingValues: [] destination: B22 -> B64  <||@
  Comment 2277 block B44 null  <||@
  Comment 2277 1320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2277 1322 NOP  <||@
  Comment 2278 1324 NOP  <||@
  Comment 2279 1326 NOP  <||@
  Comment 2280 1328 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 2287 1330 r10|DWORD = MOVE input: int[-68915|0xfffffffffffef2cd]  <||@
  Comment 2293 1332 JUMP ~outgoingValues: [] destination: B44 -> B64  <||@
  Comment 2295 block B43 null  <||@
  Comment 2295 1306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2295 1308 NOP  <||@
  Comment 2296 1310 NOP  <||@
  Comment 2297 1312 NOP  <||@
  Comment 2298 1314 r11|QWORD = MOVE input: long[6420|0x1914]  <||@
  Comment 2305 1316 r10|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed]  <||@
  Comment 2311 1318 JUMP ~outgoingValues: [] destination: B43 -> B64  <||@
  Comment 2316 block B62 null  <||@
  Comment 2316 1940 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2316 1942 NOP  <||@
  Comment 2317 1944 NOP  <||@
  Comment 2318 1946 NOP  <||@
  Comment 2319 1948 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2326 1950 r10|DWORD = MOVE input: int[-100147|0xfffffffffffe78cd]  <||@
  Comment 2332 1952 JUMP ~outgoingValues: [] destination: B62 -> B64  <||@
  Comment 2337 block B56 null  <||@
  Comment 2337 1738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2337 1740 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2342 1742 NOP  <||@
  Comment 2343 1744 NOP  <||@
  Comment 2344 1746 NOP  <||@
  Comment 2345 1748 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2352 1750 r10|DWORD = MOVE input: int[-163353|0xfffffffffffd81e7]  <||@
  Comment 2358 1758 JUMP ~outgoingValues: [] destination: B56 -> B61  <||@
  Comment 2358 block B61 null  <||@
  Comment 2358 1918 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2358 1672 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2363 1674 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2368 1676 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2373 1920 NOP  <||@
  Comment 2374 1922 NOP  <||@
  Comment 2375 1924 NOP  <||@
  Comment 2376 1926 NOP  <||@
  Comment 2377 1928 NOP  <||@
  Comment 2378 1930 NOP  <||@
  Comment 2379 1932 NOP  <||@
  Comment 2380 1934 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2387 1936 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2394 1938 DEOPT info [bci:38, 21, 37]  <||@
  Comment 2394 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2399 [rdx:0, rsi:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2407 block B54 null  <||@
  Comment 2407 1704 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2407 1706 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2412 1708 NOP  <||@
  Comment 2413 1710 NOP  <||@
  Comment 2414 1712 NOP  <||@
  Comment 2415 1714 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2422 1716 r10|DWORD = MOVE input: int[-162329|0xfffffffffffd85e7]  <||@
  Comment 2428 1724 JUMP ~outgoingValues: [] destination: B54 -> B61  <||@
  Comment 2430 block B39 null  <||@
  Comment 2430 1174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2430 1176 NOP  <||@
  Comment 2431 1178 NOP  <||@
  Comment 2432 1180 NOP  <||@
  Comment 2433 1182 r10|DWORD = MOVE input: int[-151065|0xfffffffffffdb1e7]  <||@
  Comment 2439 1188 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 2444 block B60 null  <||@
  Comment 2444 1896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2444 1898 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2449 1900 NOP  <||@
  Comment 2450 1902 NOP  <||@
  Comment 2451 1904 NOP  <||@
  Comment 2452 1906 r11|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 2459 1908 r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded]  <||@
  Comment 2465 1916 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 2467 block B20 null  <||@
  Comment 2467 648 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2467 650 NOP  <||@
  Comment 2468 652 NOP  <||@
  Comment 2469 654 NOP  <||@
  Comment 2470 656 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2477 658 r10|DWORD = MOVE input: int[-154137|0xfffffffffffda5e7]  <||@
  Comment 2483 660 JUMP ~outgoingValues: [] destination: B20 -> B64  <||@
  Comment 2488 block B34 null  <||@
  Comment 2488 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2488 1060 NOP  <||@
  Comment 2489 1062 NOP  <||@
  Comment 2490 1064 NOP  <||@
  Comment 2491 1066 r10|DWORD = MOVE input: int[-149017|0xfffffffffffdb9e7]  <||@
  Comment 2497 1072 JUMP ~outgoingValues: [] destination: B34 -> B40  <||@
  Comment 2502 block B58 null  <||@
  Comment 2502 1776 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2502 1778 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2507 1780 NOP  <||@
  Comment 2508 1782 NOP  <||@
  Comment 2509 1784 NOP  <||@
  Comment 2510 1786 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2517 1788 r10|DWORD = MOVE input: int[-164377|0xfffffffffffd7de7]  <||@
  Comment 2523 1796 JUMP ~outgoingValues: [] destination: B58 -> B61  <||@
  Comment 2528 block B24 null  <||@
  Comment 2528 700 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2528 702 NOP  <||@
  Comment 2529 704 NOP  <||@
  Comment 2530 706 NOP  <||@
  Comment 2531 708 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2538 710 r10|DWORD = MOVE input: int[-156185|0xfffffffffffd9de7]  <||@
  Comment 2544 712 JUMP ~outgoingValues: [] destination: B24 -> B64  <||@
  Comment 2549 block B32 null  <||@
  Comment 2549 1026 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2549 1028 NOP  <||@
  Comment 2550 1030 NOP  <||@
  Comment 2551 1032 NOP  <||@
  Comment 2552 1034 r10|DWORD = MOVE input: int[-147993|0xfffffffffffdbde7]  <||@
  Comment 2558 1040 JUMP ~outgoingValues: [] destination: B32 -> B40  <||@
  Comment 2563 block B52 null  <||@
  Comment 2563 1658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2563 1660 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2568 1662 NOP  <||@
  Comment 2569 1664 NOP  <||@
  Comment 2570 1666 NOP  <||@
  Comment 2571 1668 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2578 1670 r10|DWORD = MOVE input: int[-161305|0xfffffffffffd89e7]  <||@
  Comment 2584 1678 JUMP ~outgoingValues: [] destination: B52 -> B61  <||@
  Comment 2594 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2619 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2639 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2649 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2664 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2679 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2694 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2727 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2732 [rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2767 [rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2797 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2802 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2832 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2837 [rcx:0, rdx:0, rsi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rdi|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2867 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2872 [rcx:0, rdx:0, rsi:0, r11:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r9|DWORD  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rdi|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2902 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2907 [rdx:0, rsi:0, rdi:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 2937 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2942 [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2972 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2977 [rdx:0, rsi:0, rdi:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3007 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3012 [rax:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 3042 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3047 [rax:0, r10:0, stack:24, stack:32]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 3055 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3055 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3061 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3061 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
