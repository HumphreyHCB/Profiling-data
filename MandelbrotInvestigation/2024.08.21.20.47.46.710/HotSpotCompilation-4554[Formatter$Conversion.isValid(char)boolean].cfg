begin_compilation
  name " HotSpotCompilation-4554[java.util.Formatter$Conversion.isValid(char)]"
  method "HotSpotCompilation-4554[java.util.Formatter$Conversion.isValid(char)]"
  date 1724269727337
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v3 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v3  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3 <|@
d <@d|@=== Debug Properties ===
areKeysContiguous: true
keySuccessors: [I@4b19eb6c
keys: [I@6f93ac3c
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 1]
profileData: PROFILED keyProbabilities: [0.19316964642825454, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002898884499508132, 8.363367079103409E-5, 0.0, 9.424391260780707E-5, 0.0, 0.0, 0.0, 0.034941606742205346, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06441415393775721, 0.2871312433861526, 0.0, 0.003128356984290497, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002772809861450006, 0.0, 0.0, 0.0, 0.0, 0.34465300504412977, 0.0, 0.0, 0.0, 0.0, 0.0667124155328531, 0.0]
stamp: void
=== Inputs ===
value: i1 
=== Succesors ===
successors: v4 v5 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@IntegerSwitch|@jdk.graal.compiler.nodes.extended.IntegerSwitchNode>@ value: i1 #successors: v4 v5  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4769) [bci: 352]
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v3 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4769) [bci: 352]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v4 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4770) [bci: 356]
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v3 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4770) [bci: 356]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v5 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 357]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v10 
values: i6 i8 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i6 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 357]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v9 v11 
=== Succesors ===
next: v14 
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v9 v11 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 357]
stamp: void
=== Inputs ===
memoryMap: - 
result: i12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i12  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v3 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v3  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3 <|@
d <@d|@=== Debug Properties ===
areKeysContiguous: true
keySuccessors: [I@4b19eb6c
keys: [I@6f93ac3c
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 1]
profileData: PROFILED keyProbabilities: [0.19316964642825454, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002898884499508132, 8.363367079103409E-5, 0.0, 9.424391260780707E-5, 0.0, 0.0, 0.0, 0.034941606742205346, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06441415393775721, 0.2871312433861526, 0.0, 0.003128356984290497, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.002772809861450006, 0.0, 0.0, 0.0, 0.0, 0.34465300504412977, 0.0, 0.0, 0.0, 0.0, 0.0667124155328531, 0.0]
stamp: void
=== Inputs ===
value: i1 
=== Succesors ===
successors: v4 v5 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@IntegerSwitch|@jdk.graal.compiler.nodes.extended.IntegerSwitchNode>@ value: i1 #successors: v4 v5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4769) [bci: 352]
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v3 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4769) [bci: 352]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v4 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4770) [bci: 356]
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v3 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4770) [bci: 356]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v5 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i12 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 357]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v10 
values: i6 i8 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i6 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 357]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v9 v11 
=== Succesors ===
next: v14 
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v9 v11 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Conversion.isValid(Formatter.java:4748) [bci: 357]
stamp: void
=== Inputs ===
memoryMap: - 
result: i12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1] defaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1] defaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v1|d [0, 1[[64, 66[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 32[ "NoSpillStore"
  v0|d DWORD "[v0|d]" v0|d rsi|d [32, 35[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [46, 64[64 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rbp|q [28, 66[[68, 78[28 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v1|d [0, 1[[64, 66[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 32[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [32, 35[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [46, 64[64 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rbp|q]" v2|q rbp|q [28, 66[[68, 78[28 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v1|d [0, 1[[64, 66[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 32[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [32, 35[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [46, 64[64 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rbp|q]" v2|q rbp|q [28, 66[[68, 78[28 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v1|d [0, 1[[64, 66[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|d fixed "[rsi|d]" rsi|d -1 [0, 32[ "NoSpillStore"
  v0|d DWORD "[rsi|d]" v0|d rsi|d [32, 35[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [46, 64[64 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rbp|q]" v2|q rbp|q [28, 66[[68, 78[28 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [v1|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction v2|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v0|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: v2|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1] defaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B2, B0 -> B1] defaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606839979776669389
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4585639845409362749
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: tableswitch   [84] {37: 352, 38: 356, 39: 356, 40: 356, 41: 356, 42: 356, 43: 356, 44: 356, 45: 356, 46: 356, 47: 356, 48: 356, 49: 356, 50: 356, 51: 356, 52: 356, 53: 356, 54: 356, 55: 356, 56: 356, 57: 356, 58: 356, 59: 356, 60: 356, 61: 356, 62: 356, 63: 356, 64: 356, 65: 352, 66: 352, 67: 352, 68: 356, 69: 352, 70: 356, 71: 352, 72: 352, 73: 356, 74: 356, 75: 356, 76: 356, 77: 356, 78: 356, 79: 356, 80: 356, 81: 356, 82: 356, 83: 352, 84: 356, 85: 356, 86: 356, 87: 356, 88: 352, 89: 356, 90: 356, 91: 356, 92: 356, 93: 356, 94: 356, 95: 356, 96: 356, 97: 352, 98: 352, 99: 352, 100: 352, 101: 352, 102: 352, 103: 352, 104: 352, 105: 356, 106: 356, 107: 356, 108: 356, 109: 356, 110: 352, 111: 352, 112: 356, 113: 356, 114: 356, 115: 352, 116: 356, 117: 356, 118: 356, 119: 356, 120: 352} default: 356
   352: iconst_1      
   353: goto          357
   356: iconst_0      
   357: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f85320300009090909090909090909090909083fe730f84f002000083fe640f84e702000083fe250f84de02000083fe780f84d502000083fe630f84cc02000083fe340f84e502000083fe660f84ba02000083fe2d0f84d302000083fe6e0f84a802000083fe300f84c102000083fe2e0f84b802000083fe260f84af02000083fe270f84a602000083fe280f849d02000083fe290f849402000083fe2a0f848b02000083fe2b0f848202000083fe2c0f847902000083fe2f0f847002000083fe310f846702000083fe320f845e02000083fe330f845502000083fe350f844c02000083fe360f844302000083fe370f843a02000083fe380f843102000083fe390f842802000083fe3a0f841f02000083fe3b0f841602000083fe3c0f840d02000083fe3d0f840402000083fe3e0f84fb01000083fe3f0f84f201000083fe400f84e901000083fe410f84be01000083fe420f84b501000083fe430f84ac01000083fe440f84c501000083fe450f849a01000083fe460f84b301000083fe470f848801000083fe480f847f01000083fe490f849801000083fe4a0f848f01000083fe4b0f848601000083fe4c0f847d01000083fe4d0f847401000083fe4e0f846b01000083fe4f0f846201000083fe500f845901000083fe510f845001000083fe520f844701000083fe530f841c01000083fe540f843501000083fe550f842c01000083fe560f842301000083fe570f841a01000083fe580f84ef00000083fe590f840801000083fe5a0f84ff00000083fe5b0f84f600000083fe5c0f84ed00000083fe5d0f84e400000083fe5e0f84db00000083fe5f0f84d200000083fe600f84c900000083fe610f849e00000083fe620f849500000083fe650f848c00000083fe670f848300000083fe680f847a00000083fe690f849300000083fe6a0f848a00000083fe6b0f848100000083fe6c0f847800000083fe6d0f846f00000083fe6f0f844400000083fe700f845d00000083fe710f845400000083fe720f844b00000083fe740f844200000083fe750f843900000083fe760f843000000083fe770f8427000000e922000000909090b80100000090909090909090904883c418493ba7500400000f871b000000c3909090b800000000ebdc48896c2410e800000000e9bffcfffff4488d0dd1ffffff49898f68040000e991fcfffff4e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD  <||@
  Comment 39 34 AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585]  <||@
  Comment 800 block B1 null  <||@
  Comment 800 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 800 38 NOP  <||@
  Comment 801 40 NOP  <||@
  Comment 802 42 NOP  <||@
  Comment 803 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 808 44 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 808 block B3 null  <||@
  Comment 808 46 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 808 48 NOP  <||@
  Comment 809 50 NOP  <||@
  Comment 810 52 NOP  <||@
  Comment 811 54 NOP  <||@
  Comment 812 56 NOP  <||@
  Comment 813 58 NOP  <||@
  Comment 814 60 NOP  <||@
  Comment 815 62 NOP  <||@
  Comment 816 66 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 820 POLL_RETURN_FAR  <||@
  Comment 834 block B2 null  <||@
  Comment 834 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 834 70 NOP  <||@
  Comment 835 72 NOP  <||@
  Comment 836 74 NOP  <||@
  Comment 837 -1 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 842 76 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 849 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 874 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 880 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 880 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 886 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 886 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4554[java.util.Formatter$Conversion.isValid(char)]"
  method "HotSpotCompilation-4554[java.util.Formatter$Conversion.isValid(char)]"
  date 1724269727378
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad55a00 89842400c0feff4883ec189041817f20000000000f85320300009090909090909090909090909083fe730f84f002000083fe640f84e702000083fe250f84de02000083fe780f84d502000083fe630f84cc02000083fe340f84e502000083fe660f84ba02000083fe2d0f84d302000083fe6e0f84a802000083fe300f84c102000083fe2e0f84b802000083fe260f84af02000083fe270f84a602000083fe280f849d02000083fe290f849402000083fe2a0f848b02000083fe2b0f848202000083fe2c0f847902000083fe2f0f847002000083fe310f846702000083fe320f845e02000083fe330f845502000083fe350f844c02000083fe360f844302000083fe370f843a02000083fe380f843102000083fe390f842802000083fe3a0f841f02000083fe3b0f841602000083fe3c0f840d02000083fe3d0f840402000083fe3e0f84fb01000083fe3f0f84f201000083fe400f84e901000083fe410f84be01000083fe420f84b501000083fe430f84ac01000083fe440f84c501000083fe450f849a01000083fe460f84b301000083fe470f848801000083fe480f847f01000083fe490f849801000083fe4a0f848f01000083fe4b0f848601000083fe4c0f847d01000083fe4d0f847401000083fe4e0f846b01000083fe4f0f846201000083fe500f845901000083fe510f845001000083fe520f844701000083fe530f841c01000083fe540f843501000083fe550f842c01000083fe560f842301000083fe570f841a01000083fe580f84ef00000083fe590f840801000083fe5a0f84ff00000083fe5b0f84f600000083fe5c0f84ed00000083fe5d0f84e400000083fe5e0f84db00000083fe5f0f84d200000083fe600f84c900000083fe610f849e00000083fe620f849500000083fe650f848c00000083fe670f848300000083fe680f847a00000083fe690f849300000083fe6a0f848a00000083fe6b0f848100000083fe6c0f847800000083fe6d0f846f00000083fe6f0f844400000083fe700f845d00000083fe710f845400000083fe720f844b00000083fe740f844200000083fe750f843900000083fe760f843000000083fe770f8427000000e922000000909090b80100000090909090909090904883c418493ba7500400000f871b000000c3909090b800000000ebdc48896c2410e8ca54a1fee9bffcfffff4488d0dd1ffffff49898f68040000e99162a3fef4e88bf5b6fef4e8a551a3fef4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4caef1da slotKind: QWORD  <||@
  Comment 39 34 AMD64HOTSPOTSTRATEGYSWITCH ~key: rsi|DWORD scratch: - keyConstants: [int[37|0x25], int[38|0x26], int[39|0x27], int[40|0x28], int[41|0x29], int[42|0x2a], int[43|0x2b], int[44|0x2c], int[45|0x2d], int[46|0x2e], int[47|0x2f], int[48|0x30], int[49|0x31], int[50|0x32], int[51|0x33], int[52|0x34], int[53|0x35], int[54|0x36], int[55|0x37], int[56|0x38], int[57|0x39], int[58|0x3a], int[59|0x3b], int[60|0x3c], int[61|0x3d], int[62|0x3e], int[63|0x3f], int[64|0x40], int[65|0x41], int[66|0x42], int[67|0x43], int[68|0x44], int[69|0x45], int[70|0x46], int[71|0x47], int[72|0x48], int[73|0x49], int[74|0x4a], int[75|0x4b], int[76|0x4c], int[77|0x4d], int[78|0x4e], int[79|0x4f], int[80|0x50], int[81|0x51], int[82|0x52], int[83|0x53], int[84|0x54], int[85|0x55], int[86|0x56], int[87|0x57], int[88|0x58], int[89|0x59], int[90|0x5a], int[91|0x5b], int[92|0x5c], int[93|0x5d], int[94|0x5e], int[95|0x5f], int[96|0x60], int[97|0x61], int[98|0x62], int[99|0x63], int[100|0x64], int[101|0x65], int[102|0x66], int[103|0x67], int[104|0x68], int[105|0x69], int[106|0x6a], int[107|0x6b], int[108|0x6c], int[109|0x6d], int[110|0x6e], int[111|0x6f], int[112|0x70], int[113|0x71], int[114|0x72], int[115|0x73], int[116|0x74], int[117|0x75], int[118|0x76], int[119|0x77], int[120|0x78]] keyTargetsdefaultTarget: B0 -> B2 strategy: SequentialStrategy[avgEffort=2.3689017765185585]  <||@
  Comment 800 block B1 null  <||@
  Comment 800 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 800 38 NOP  <||@
  Comment 801 40 NOP  <||@
  Comment 802 42 NOP  <||@
  Comment 803 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 808 44 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 808 block B3 null  <||@
  Comment 808 46 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 808 48 NOP  <||@
  Comment 809 50 NOP  <||@
  Comment 810 52 NOP  <||@
  Comment 811 54 NOP  <||@
  Comment 812 56 NOP  <||@
  Comment 813 58 NOP  <||@
  Comment 814 60 NOP  <||@
  Comment 815 62 NOP  <||@
  Comment 816 66 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 820 POLL_RETURN_FAR  <||@
  Comment 834 block B2 null  <||@
  Comment 834 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 834 70 NOP  <||@
  Comment 835 72 NOP  <||@
  Comment 836 74 NOP  <||@
  Comment 837 -1 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 842 76 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 849 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 874 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 880 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 880 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 886 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 886 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
