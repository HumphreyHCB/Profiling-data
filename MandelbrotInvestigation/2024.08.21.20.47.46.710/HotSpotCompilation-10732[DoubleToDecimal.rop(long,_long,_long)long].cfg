begin_compilation
  name " HotSpotCompilation-10732[jdk.internal.math.DoubleToDecimal.rop(long, long, long)]"
  method "HotSpotCompilation-10732[jdk.internal.math.DoubleToDecimal.rop(long, long, long)]"
  date 1724269767478
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid j1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j7 j6 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j7 j5 j6 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.multiplyHigh(long, long) [bci: -1]
at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:362) [bci: 17]
stamp: i64
=== Inputs ===
x: j1 
y: j3 
=== Succesors ===
=== Usages ===
j13 
=== Predecessor ===
- >@ <|@
instruction <@*H|@jdk.graal.compiler.nodes.calc.IntegerMulHighNode>@ x: j1 y: j3  <|@  <|@
f <@~|@floating>@ <|@
tid j2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.multiplyHigh(long, long) [bci: -1]
at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:360) [bci: 3]
stamp: i64
=== Inputs ===
x: j2 
y: j3 
=== Succesors ===
=== Usages ===
j10 
=== Predecessor ===
- >@ <|@
instruction <@*H|@jdk.graal.compiler.nodes.calc.IntegerMulHighNode>@ x: j2 y: j3  <|@  <|@
f <@~|@floating>@ <|@
tid j6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:361) [bci: 11]
stamp: i64
=== Inputs ===
x: j1 
y: j3 
=== Succesors ===
=== Usages ===
j9 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: j1 y: j3  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:363) [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:363) [bci: 25]
stamp: i64 [0 - 9223372036854775807] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j6 
y: i8 
=== Succesors ===
=== Usages ===
j10 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j6 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:363) [bci: 28]
stamp: i64
=== Inputs ===
x: j5 
y: j9 
=== Succesors ===
=== Usages ===
j12 j15 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j5 y: j9  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:364) [bci: 35]
rawvalue: 63
stableDimension: 0
stamp: i32 [63]
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j12 j17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:364) [bci: 37]
stamp: i64 [0 - 1] bits:0...0x
=== Inputs ===
x: j10 
y: i11 
=== Succesors ===
=== Usages ===
j13 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j10 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid j13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:364) [bci: 38]
stamp: i64
=== Inputs ===
x: j7 
y: j12 
=== Succesors ===
=== Usages ===
j18 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j7 y: j12  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 45]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807]
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j15 j16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 48]
stamp: i64 [0 - 9223372036854775807] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j10 
y: j14 
=== Succesors ===
=== Usages ===
j16 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j10 y: j14  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 52]
stamp: i64
=== Inputs ===
x: j15 
y: j14 
=== Succesors ===
=== Usages ===
j17 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j15 y: j14  <|@  <|@
f <@~|@floating>@ <|@
tid j17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 55]
stamp: i64 [0 - 1] bits:0...0x
=== Inputs ===
x: j16 
y: i11 
=== Succesors ===
=== Usages ===
j18 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j16 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid j18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 56]
stamp: i64
=== Inputs ===
x: j13 
y: j17 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: j13 y: j17  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 57]
stamp: void
=== Inputs ===
memoryMap: - 
result: j18 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: j18  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid j1 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j7 j6 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j7 j5 j6 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j7 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.multiplyHigh(long, long) [bci: -1]
at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:362) [bci: 17]
stamp: i64
=== Inputs ===
x: j1 
y: j3 
=== Succesors ===
=== Usages ===
j13 
=== Predecessor ===
- >@ <|@
instruction <@*H|@jdk.graal.compiler.nodes.calc.IntegerMulHighNode>@ x: j1 y: j3  <|@  <|@
f <@~|@floating>@ <|@
tid j2 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.multiplyHigh(long, long) [bci: -1]
at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:360) [bci: 3]
stamp: i64
=== Inputs ===
x: j2 
y: j3 
=== Succesors ===
=== Usages ===
j10 
=== Predecessor ===
- >@ <|@
instruction <@*H|@jdk.graal.compiler.nodes.calc.IntegerMulHighNode>@ x: j2 y: j3  <|@  <|@
f <@~|@floating>@ <|@
tid j6 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:361) [bci: 11]
stamp: i64
=== Inputs ===
x: j1 
y: j3 
=== Succesors ===
=== Usages ===
j9 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: j1 y: j3  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:363) [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j9 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:363) [bci: 25]
stamp: i64 [0 - 9223372036854775807] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j6 
y: i8 
=== Succesors ===
=== Usages ===
j10 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j6 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j10 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:363) [bci: 28]
stamp: i64
=== Inputs ===
x: j5 
y: j9 
=== Succesors ===
=== Usages ===
j12 j15 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j5 y: j9  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:364) [bci: 35]
rawvalue: 63
stableDimension: 0
stamp: i32 [63]
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j12 j17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j12 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:364) [bci: 37]
stamp: i64 [0 - 1] bits:0...0x
=== Inputs ===
x: j10 
y: i11 
=== Succesors ===
=== Usages ===
j13 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j10 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid j13 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:364) [bci: 38]
stamp: i64
=== Inputs ===
x: j7 
y: j12 
=== Succesors ===
=== Usages ===
j18 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j7 y: j12  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 45]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807]
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j15 j16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 48]
stamp: i64 [0 - 9223372036854775807] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j10 
y: j14 
=== Succesors ===
=== Usages ===
j16 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j10 y: j14  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 52]
stamp: i64
=== Inputs ===
x: j15 
y: j14 
=== Succesors ===
=== Usages ===
j17 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j15 y: j14  <|@  <|@
f <@~|@floating>@ <|@
tid j17 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 55]
stamp: i64 [0 - 1] bits:0...0x
=== Inputs ===
x: j16 
y: i11 
=== Succesors ===
=== Usages ===
j18 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j16 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid j18 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 56]
stamp: i64
=== Inputs ===
x: j13 
y: j17 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: j13 y: j17  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.DoubleToDecimal.rop(DoubleToDecimal.java:365) [bci: 57]
stamp: void
=== Inputs ===
memoryMap: - 
result: j18 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: j18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[90, 93[[96, 99[[122, 124[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 88[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 86[[92, 94[[98, 100[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 80[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 84[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [84, 102[84 MustHaveRegister 90 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|q [86, 96[86 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|q [88, 102[88 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q rdx|q [94, 110[94 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q rdx|q [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v0|q [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v5|q [104, 106[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v4|q [106, 114[106 MustHaveRegister 108 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v7|q [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v3|q [110, 120[110 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [112, 116[112 MustHaveRegister 114 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v7|q [114, 116[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v11|q [116, 118[116 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|q [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v9|q [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q rbp|q [80, 124[80 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[90, 93[[96, 99[[122, 124[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 88[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 86[[92, 94[[98, 100[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 80[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 84[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [84, 102[84 MustHaveRegister 90 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q rdx|q [86, 96[86 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [88, 102[88 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q rdx|q [94, 110[94 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rdx|q]" v4|q rdx|q [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q v0|q [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q v5|q [104, 106[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q v4|q [106, 114[106 MustHaveRegister 108 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|q [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v3|q [110, 120[110 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [112, 116[112 MustHaveRegister 114 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q v7|q [114, 116[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v11|q [116, 118[116 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|q [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v9|q [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q rbp|q [80, 124[80 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[90, 93[[96, 99[[122, 124[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 88[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 86[[92, 94[[98, 100[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 80[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 84[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [84, 102[84 MustHaveRegister 90 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q rdx|q [86, 96[86 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [88, 102[88 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q rdx|q [94, 110[94 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rdx|q]" v4|q rdx|q [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q v0|q [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q v5|q [104, 106[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q v4|q [106, 114[106 MustHaveRegister 108 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|q [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v3|q [110, 120[110 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [112, 116[112 MustHaveRegister 114 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q v7|q [114, 116[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v11|q [116, 118[116 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|q [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v9|q [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q rbp|q [80, 124[80 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[90, 93[[96, 99[[122, 124[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 88[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 86[[92, 94[[98, 100[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 80[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 84[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [84, 102[84 MustHaveRegister 90 ShouldHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q rdx|q [86, 96[86 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [88, 102[88 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q rdx|q [94, 110[94 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rdx|q]" v4|q rdx|q [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q v0|q [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q v5|q [104, 106[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q v4|q [106, 114[106 MustHaveRegister 108 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|q [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v3|q [110, 120[110 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [112, 116[112 MustHaveRegister 114 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q v7|q [114, 116[114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v11|q [116, 118[116 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|q [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v9|q [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q rbp|q [80, 124[80 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v15|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   84  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction v2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: v0|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction v3|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction v4|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction v5|QWORD = IMUL (x: v0|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction v6|QWORD = SHR value: v5|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction v7|QWORD = ADD (x: v4|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction v8|QWORD = SHR x: v7|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction v9|QWORD = ADD (x: v3|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v10|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction v11|QWORD = AND (x: v7|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction v13|QWORD = SHR x: v12|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction v14|QWORD = OR (x: v9|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: v15|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = SHR value: rsi|QWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD <|@ <|@
      nr  120  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_2       
     1: lload         4
     3: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
     6: lstore        6
     8: lload_0       
     9: lload         4
    11: lmul          
    12: lstore        8
    14: lload_0       
    15: lload         4
    17: invokestatic  #22         // java.lang.Math.multiplyHigh:(long, long)long
    20: lstore        10
    22: lload         8
    24: iconst_1      
    25: lushr         
    26: lload         6
    28: ladd          
    29: lstore        12
    31: lload         10
    33: lload         12
    35: bipush        63
    37: lushr         
    38: ladd          
    39: lstore        14
    41: lload         14
    43: lload         12
    45: ldc2_w        #124        // 9223372036854775807
    48: land          
    49: ldc2_w        #124        // 9223372036854775807
    52: ladd          
    53: bipush        63
    55: lushr         
    56: lor           
    57: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f85790000009090909090909090909090909090909090909090909090909090909090909090909090909090904c8bd2488bc648f7e94c8bda498bc248f7e9480faff148d1ee4803d6488bc248c1e83f4c03d848b8ffffffffffffff7f4823d04803d048c1ea3f4c0bda498bc34883c418493ba7500400000f8711000000c348896c2410e800000000e978fffffff4488d0ddbffffff49898f68040000e94afffffff4e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 NOP  <||@
  Comment 40 30 NOP  <||@
  Comment 41 32 NOP  <||@
  Comment 42 34 NOP  <||@
  Comment 43 36 NOP  <||@
  Comment 44 38 NOP  <||@
  Comment 45 40 NOP  <||@
  Comment 46 42 NOP  <||@
  Comment 47 44 NOP  <||@
  Comment 48 46 NOP  <||@
  Comment 49 48 NOP  <||@
  Comment 50 50 NOP  <||@
  Comment 51 52 NOP  <||@
  Comment 52 54 NOP  <||@
  Comment 53 56 NOP  <||@
  Comment 54 58 NOP  <||@
  Comment 55 60 NOP  <||@
  Comment 56 62 NOP  <||@
  Comment 57 64 NOP  <||@
  Comment 58 66 NOP  <||@
  Comment 59 68 NOP  <||@
  Comment 60 70 NOP  <||@
  Comment 61 72 NOP  <||@
  Comment 62 74 NOP  <||@
  Comment 63 76 NOP  <||@
  Comment 64 78 NOP  <||@
  Comment 65 82 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD  <||@
  Comment 65 86 r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 68 90 rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 71 92 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 74 94 r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 77 96 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 80 98 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 83 102 rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 87 104 rsi|QWORD = SHR value: rsi|QWORD size: QWORD  <||@
  Comment 90 106 rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 93 108 rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD  <||@
  Comment 100 110 r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 103 112 rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 113 114 rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 116 116 rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 119 118 rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD  <||@
  Comment 123 120 r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 126 122 rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 129 124 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 133 POLL_RETURN_FAR  <||@
  Comment 152 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 177 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 183 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 183 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 189 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 189 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10732[jdk.internal.math.DoubleToDecimal.rop(long, long, long)]"
  method "HotSpotCompilation-10732[jdk.internal.math.DoubleToDecimal.rop(long, long, long)]"
  date 1724269767515
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af86b80 89842400c0feff4883ec189041817f20000000000f85790000009090909090909090909090909090909090909090909090909090909090909090909090909090904c8bd2488bc648f7e94c8bda498bc248f7e9480faff148d1ee4803d6488bc248c1e83f4c03d848b8ffffffffffffff7f4823d04803d048c1ea3f4c0bda498bc34883c418493ba7500400000f8711000000c348896c2410e803467efee978fffffff4488d0ddbffffff49898f68040000e9ca5380fef4e8c4e693fef4e8de4280fef4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD, rdx|QWORD, rcx|QWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 NOP  <||@
  Comment 40 30 NOP  <||@
  Comment 41 32 NOP  <||@
  Comment 42 34 NOP  <||@
  Comment 43 36 NOP  <||@
  Comment 44 38 NOP  <||@
  Comment 45 40 NOP  <||@
  Comment 46 42 NOP  <||@
  Comment 47 44 NOP  <||@
  Comment 48 46 NOP  <||@
  Comment 49 48 NOP  <||@
  Comment 50 50 NOP  <||@
  Comment 51 52 NOP  <||@
  Comment 52 54 NOP  <||@
  Comment 53 56 NOP  <||@
  Comment 54 58 NOP  <||@
  Comment 55 60 NOP  <||@
  Comment 56 62 NOP  <||@
  Comment 57 64 NOP  <||@
  Comment 58 66 NOP  <||@
  Comment 59 68 NOP  <||@
  Comment 60 70 NOP  <||@
  Comment 61 72 NOP  <||@
  Comment 62 74 NOP  <||@
  Comment 63 76 NOP  <||@
  Comment 64 78 NOP  <||@
  Comment 65 82 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bc53ec1 slotKind: QWORD  <||@
  Comment 65 86 r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 68 90 rax|QWORD = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 71 92 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 74 94 r11|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 77 96 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 80 98 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 83 102 rsi|QWORD = IMUL (x: rsi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 87 104 rsi|QWORD = SHR value: rsi|QWORD size: QWORD  <||@
  Comment 90 106 rdx|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 93 108 rax|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD  <||@
  Comment 100 110 r11|QWORD = ADD (x: r11|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 103 112 rax|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 113 114 rdx|QWORD = AND (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 116 116 rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 119 118 rdx|QWORD = SHR x: rdx|QWORD y: 63 size: QWORD  <||@
  Comment 123 120 r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 126 122 rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 129 124 RETURN (savedRbp: rbp|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 133 POLL_RETURN_FAR  <||@
  Comment 152 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 177 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 183 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 183 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 189 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 189 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
