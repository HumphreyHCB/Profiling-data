begin_compilation
  name " HotSpotCompilation-4744[java.nio.HeapCharBuffer.<init>(char[], int, int, MemorySegment)]"
  method "HotSpotCompilation-4744[java.nio.HeapCharBuffer.<init>(char[], int, int, MemorySegment)]"
  date 1724269736403
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i158 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i158  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.nio.HeapCharBuffer
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v167 v170 v166 ?14 ?72 v168 ?32 v169 ?58 ?57 v163 ?35 v164 ?42 v165 v154 v157 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i8 ?58 ?14 v96 v61 v63 ?32 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i8 ?14 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a java.lang.Object
uncheckedStamp: a java.lang.foreign.MemorySegment
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?14 ?32 a89 v154 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HeapCharBuffer.<init>(char[], int, int, MemorySegment)>
localsSize: 5
locksSize: 0
sourceFile: HeapCharBuffer.java
sourceLine: 85
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a159 i3 i4 a5 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a159 i3 i4 a5  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?72 v162 a98 v157 ?14 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-19467|0xffffffffffffb3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v162 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
?32 v88 v37 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v162 lastLocationAccess: - #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
?32 v82 ?58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.mark
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:219) [bci: 6]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v163 
lastLocationAccess: - 
value: i7 
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
i158 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v163 lastLocationAccess: - value: i7 stateAfter: - #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v85 v96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 ?72 v63 v104 v85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:220) [bci: 11]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v164 lastLocationAccess: - value: i10 stateAfter: - #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.capacity
location: Buffer.capacity
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:254) [bci: 28]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v165 
lastLocationAccess: - 
value: i158 
stateAfter: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v165 lastLocationAccess: - value: i158 stateAfter: - #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v92 v152 v154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:255) [bci: 34]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
precise: true
stamp: void
=== Inputs ===
address: v166 
value: - 
stateBefore: - 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v166 value: - stateBefore: - #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:255) [bci: 34]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a5 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.segment
location: Buffer.segment
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:255) [bci: 34]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
lastLocationAccess: - 
value: a89 
stateAfter: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v166 lastLocationAccess: - value: a89 stateAfter: - #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:255) [bci: 34]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
precise: false
stamp: void
=== Inputs ===
address: v166 
value: a5 
object: a1 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v166 value: a5 object: a1 #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 5]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v61 v39 v95 ?42 ?32 ?35 v37 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i158 
y: i8 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i158 y: i8  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<HeapCharBuffer.<init>(char[], int, int, MemorySegment)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
sourceFile: HeapCharBuffer.java
sourceLine: 85
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 
=== Succesors ===
=== Usages ===
?72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 8
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<CharBuffer.<init>(int, int, int, int, char[], int, MemorySegment)>
localsSize: 8
locksSize: 0
sourceFile: CharBuffer.java
sourceLine: 316
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?14 
values: a1 - - - - a2 i10 
=== Succesors ===
=== Usages ===
?58 ?32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?14 values: a1 - - - - a2 i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v117 #falseSuccessor: v118  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid j135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: -29715
stableDimension: 0
stamp: i32 [-29715]
stampKind: i32
value: int[-29715|0xffffffffffff8bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
v117 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 12]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i10 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v121 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v121 #falseSuccessor: v122  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid j141 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: -30739
stableDimension: 0
stamp: i32 [-30739]
stampKind: i32
value: int[-30739|0xffffffffffff87ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
v121 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: i32 [-30739 - -29715] bits:1...1000xx1111101101
valueDescription: i32
=== Inputs ===
merge: v132 
values: i134 i140 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v132 values: i134 i140  <|@  <|@
f <@~|@floating>@ <|@
tid j137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: i64 [1300 - 1940] bits:0...01x1x0010100
valueDescription: i64
=== Inputs ===
merge: v132 
values: j135 j141 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v132 values: j135 j141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v133 v139 
=== Succesors ===
next: v138 
=== Usages ===
i136 j137 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v133 v139 #next: v138  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Buffer.<init>(int, int, int, int, MemorySegment)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:255) [bci: 34]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
sourceFile: Buffer.java
sourceLine: 256
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?72 
values: a1 i7 i3 i8 i158 a5 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a1 i7 i3 i8 i158 a5  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
stateBefore: ?32 
actionAndReason: i136 
speculation: j137 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?32 actionAndReason: i136 speculation: j137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 21]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.limit
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:381) [bci: 34]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v167 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v167 lastLocationAccess: - value: i8 stateAfter: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i3 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v126 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v125 #falseSuccessor: v126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid j145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: -31763
stableDimension: 0
stamp: i32 [-31763]
stampKind: i32
value: int[-31763|0xffffffffffff83ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v125 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v129 
falseSuccessor: v130 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v129 #falseSuccessor: v130  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: 3860
stableDimension: 0
stamp: i64 [3860]
stampKind: i64
value: long[3860|0xf14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: -32787
stableDimension: 0
stamp: i32 [-32787]
stampKind: i32
value: int[-32787|0xffffffffffff7fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v129 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: i32 [-32787 - -31763] bits:1...1xxxxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v142 
values: i144 i150 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v142 values: i144 i150  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: i64 [3220 - 3860] bits:0...011xxx0010100
valueDescription: i64
=== Inputs ===
merge: v142 
values: j145 j151 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v142 values: j145 j151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v143 v149 
=== Succesors ===
next: v148 
=== Usages ===
i146 j147 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v143 v149 #next: v148  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Buffer.<init>(int, int, int, int, MemorySegment)>
localsSize: 6
locksSize: 0
sourceFile: Buffer.java
sourceLine: 256
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?72 
values: a1 i7 i3 
=== Succesors ===
=== Usages ===
?35 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a1 i7 i3  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharBuffer.limit(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
sourceFile: CharBuffer.java
sourceLine: 285
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?58 
values: a1 i8 
=== Succesors ===
=== Usages ===
?57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?58 values: a1 i8  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<CharBuffer.limit(int)>
localsSize: 2
locksSize: 0
sourceFile: CharBuffer.java
sourceLine: 1565
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?35 
values: a1 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?35 values: a1  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Buffer.limit(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:381) [bci: 34]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
sourceFile: Buffer.java
sourceLine: 382
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?57 
values: a1 i8 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?57 values: a1 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
stateBefore: ?42 
actionAndReason: i146 
speculation: j147 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?42 actionAndReason: i146 speculation: j147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v164 lastLocationAccess: - value: i3 stateAfter: - #next: v97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:264) [bci: 104]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v101 v155 v157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:317) [bci: 14]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
precise: true
stamp: void
=== Inputs ===
address: v168 
value: - 
stateBefore: - 
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v168 value: - stateBefore: - #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid a98 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:317) [bci: 14]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: Compress
stamp: n# char[]
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: CharBuffer.hb
location: CharBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:317) [bci: 14]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v168 
lastLocationAccess: - 
value: a98 
stateAfter: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v168 lastLocationAccess: - value: a98 stateAfter: - #next: v157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:317) [bci: 14]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
precise: false
stamp: void
=== Inputs ===
address: v168 
value: a2 
object: a1 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v168 value: a2 object: a1 #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: CharBuffer.offset
location: CharBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:318) [bci: 20]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v169 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v169 lastLocationAccess: - value: i10 stateAfter: - #next: v105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:319) [bci: 23]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:90) [bci: 16]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.address
location: Buffer.address
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:90) [bci: 19]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
lastLocationAccess: - 
value: j21 
stateAfter: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v170 lastLocationAccess: - value: j21 stateAfter: - #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:95) [bci: 22]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29715|0xffffffffffff8bed], long[1300|0x514]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31763|0xffffffffffff83ed], long[3220|0xc94]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30739|0xffffffffffff87ed], long[1940|0x794]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32787|0xffffffffffff7fed], long[3860|0xf14]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i158 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i158  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.nio.HeapCharBuffer
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v167 v170 v166 ?14 ?72 v168 ?32 v169 ?58 ?57 v163 ?35 v164 ?42 v165 v154 v157 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a159 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i8 ?58 ?14 v96 v61 v63 ?32 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i8 ?14 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a java.lang.Object
uncheckedStamp: a java.lang.foreign.MemorySegment
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?14 ?32 a89 v154 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HeapCharBuffer.<init>(char[], int, int, MemorySegment)>
localsSize: 5
locksSize: 0
sourceFile: HeapCharBuffer.java
sourceLine: 85
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a159 i3 i4 a5 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a159 i3 i4 a5  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?72 v162 a98 v157 ?14 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i158 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-19467|0xffffffffffffb3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v162 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
?32 v88 v37 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v162 lastLocationAccess: - #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
?32 v82 ?58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.mark
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:219) [bci: 6]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v163 
lastLocationAccess: - 
value: i7 
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
i158 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v163 lastLocationAccess: - value: i7 stateAfter: - #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v85 v96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 ?72 v63 v104 v85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:220) [bci: 11]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v164 lastLocationAccess: - value: i10 stateAfter: - #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.capacity
location: Buffer.capacity
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:254) [bci: 28]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v165 
lastLocationAccess: - 
value: i158 
stateAfter: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v165 lastLocationAccess: - value: i158 stateAfter: - #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v92 v152 v154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:255) [bci: 34]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
precise: true
stamp: void
=== Inputs ===
address: v166 
value: - 
stateBefore: - 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v166 value: - stateBefore: - #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid a89 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:255) [bci: 34]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a5 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.segment
location: Buffer.segment
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:255) [bci: 34]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
lastLocationAccess: - 
value: a89 
stateAfter: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v166 lastLocationAccess: - value: a89 stateAfter: - #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:255) [bci: 34]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
precise: false
stamp: void
=== Inputs ===
address: v166 
value: a5 
object: a1 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v166 value: a5 object: a1 #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 5]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v61 v39 v95 ?42 ?32 ?35 v37 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i158 
y: i8 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i158 y: i8  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<HeapCharBuffer.<init>(char[], int, int, MemorySegment)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
sourceFile: HeapCharBuffer.java
sourceLine: 85
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 
=== Succesors ===
=== Usages ===
?72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 8
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<CharBuffer.<init>(int, int, int, int, char[], int, MemorySegment)>
localsSize: 8
locksSize: 0
sourceFile: CharBuffer.java
sourceLine: 316
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?14 
values: a1 - - - - a2 i10 
=== Succesors ===
=== Usages ===
?58 ?32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?14 values: a1 - - - - a2 i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v117 #falseSuccessor: v118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid j135 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result int[-29715|0xffffffffffff8bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: -29715
stableDimension: 0
stamp: i32 [-29715]
stampKind: i32
value: int[-29715|0xffffffffffff8bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
v117 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29715|0xffffffffffff8bed], long[1300|0x514]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 12]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i10 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v121 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v121 #falseSuccessor: v122  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid j141 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result int[-30739|0xffffffffffff87ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: -30739
stableDimension: 0
stamp: i32 [-30739]
stampKind: i32
value: int[-30739|0xffffffffffff87ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
v121 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30739|0xffffffffffff87ed], long[1940|0x794]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i136 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: i32 [-30739 - -29715] bits:1...1000xx1111101101
valueDescription: i32
=== Inputs ===
merge: v132 
values: i134 i140 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v132 values: i134 i140  <|@  <|@
f <@~|@floating>@ <|@
tid j137 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: i64 [1300 - 1940] bits:0...01x1x0010100
valueDescription: i64
=== Inputs ===
merge: v132 
values: j135 j141 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v132 values: j135 j141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v133 v139 
=== Succesors ===
next: v138 
=== Usages ===
i136 j137 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v133 v139 #next: v138  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Buffer.<init>(int, int, int, int, MemorySegment)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:255) [bci: 34]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
sourceFile: Buffer.java
sourceLine: 256
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?72 
values: a1 i7 i3 i8 i158 a5 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a1 i7 i3 i8 i158 a5  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
stateBefore: ?32 
actionAndReason: i136 
speculation: j137 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?32 actionAndReason: i136 speculation: j137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 21]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.limit
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:381) [bci: 34]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v167 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v167 lastLocationAccess: - value: i8 stateAfter: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i3 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v126 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v125 #falseSuccessor: v126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid j145 <|@
result long[3220|0xc94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result int[-31763|0xffffffffffff83ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: -31763
stableDimension: 0
stamp: i32 [-31763]
stampKind: i32
value: int[-31763|0xffffffffffff83ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v125 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31763|0xffffffffffff83ed], long[3220|0xc94]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v129 
falseSuccessor: v130 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v129 #falseSuccessor: v130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
result long[3860|0xf14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: 3860
stableDimension: 0
stamp: i64 [3860]
stampKind: i64
value: long[3860|0xf14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result int[-32787|0xffffffffffff7fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
rawvalue: -32787
stableDimension: 0
stamp: i32 [-32787]
stampKind: i32
value: int[-32787|0xffffffffffff7fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v129 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32787|0xffffffffffff7fed], long[3860|0xf14]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i146 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: i32 [-32787 - -31763] bits:1...1xxxxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v142 
values: i144 i150 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v142 values: i144 i150  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: i64 [3220 - 3860] bits:0...011xxx0010100
valueDescription: i64
=== Inputs ===
merge: v142 
values: j145 j151 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v142 values: j145 j151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v143 v149 
=== Succesors ===
next: v148 
=== Usages ===
i146 j147 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v143 v149 #next: v148  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Buffer.<init>(int, int, int, int, MemorySegment)>
localsSize: 6
locksSize: 0
sourceFile: Buffer.java
sourceLine: 256
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?72 
values: a1 i7 i3 
=== Succesors ===
=== Usages ===
?35 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?72 values: a1 i7 i3  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharBuffer.limit(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
sourceFile: CharBuffer.java
sourceLine: 285
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?58 
values: a1 i8 
=== Succesors ===
=== Usages ===
?57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?58 values: a1 i8  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<CharBuffer.limit(int)>
localsSize: 2
locksSize: 0
sourceFile: CharBuffer.java
sourceLine: 1565
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?35 
values: a1 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?35 values: a1  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Buffer.limit(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:381) [bci: 34]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
sourceFile: Buffer.java
sourceLine: 382
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?57 
values: a1 i8 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?57 values: a1 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
stateBefore: ?42 
actionAndReason: i146 
speculation: j147 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?42 actionAndReason: i146 speculation: j147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v164 lastLocationAccess: - value: i3 stateAfter: - #next: v97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.nio.Buffer.<init>(Buffer.java:264) [bci: 104]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
result [v0|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v101 v155 v157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:317) [bci: 14]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
precise: true
stamp: void
=== Inputs ===
address: v168 
value: - 
stateBefore: - 
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v168 value: - stateBefore: - #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid a98 <|@
result v18|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:317) [bci: 14]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
op: Compress
stamp: n# char[]
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: CharBuffer.hb
location: CharBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:317) [bci: 14]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v168 
lastLocationAccess: - 
value: a98 
stateAfter: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v168 lastLocationAccess: - value: a98 stateAfter: - #next: v157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:317) [bci: 14]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
precise: false
stamp: void
=== Inputs ===
address: v168 
value: a2 
object: a1 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v168 value: a2 object: a1 #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: CharBuffer.offset
location: CharBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:318) [bci: 20]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v169 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v169 lastLocationAccess: - value: i10 stateAfter: - #next: v105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.nio.CharBuffer.<init>(CharBuffer.java:319) [bci: 23]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:90) [bci: 16]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.address
location: Buffer.address
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:90) [bci: 19]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
lastLocationAccess: - 
value: j21 
stateAfter: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v170 lastLocationAccess: - value: j21 stateAfter: - #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:95) [bci: 22]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29715|0xffffffffffff8bed], long[1300|0x514]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31763|0xffffffffffff83ed], long[3220|0xc94]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30739|0xffffffffffff87ed], long[1940|0x794]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32787|0xffffffffffff7fed], long[3860|0xf14]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29715|0xffffffffffff8bed], long[1300|0x514]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31763|0xffffffffffff83ed], long[3220|0xc94]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30739|0xffffffffffff87ed], long[1940|0x794]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32787|0xffffffffffff7fed], long[3860|0xf14]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29715|0xffffffffffff8bed], long[1300|0x514]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31763|0xffffffffffff83ed], long[3220|0xc94]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30739|0xffffffffffff87ed], long[1940|0x794]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32787|0xffffffffffff7fed], long[3860|0xf14]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29715|0xffffffffffff8bed], long[1300|0x514]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31763|0xffffffffffff83ed], long[3220|0xc94]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30739|0xffffffffffff87ed], long[1940|0x794]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32787|0xffffffffffff7fed], long[3860|0xf14]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29715|0xffffffffffff8bed], long[1300|0x514]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31763|0xffffffffffff83ed], long[3220|0xc94]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-30739|0xffffffffffff87ed], long[1940|0x794]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-32787|0xffffffffffff7fed], long[3860|0xf14]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  144  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-29715|0xffffffffffff8bed], long[1300|0x514]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-31763|0xffffffffffff83ed], long[3220|0xc94]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-30739|0xffffffffffff87ed], long[1940|0x794]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [int[-32787|0xffffffffffff7fed], long[3860|0xf14]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  144  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-29715|0xffffffffffff8bed], long[1300|0x514]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-31763|0xffffffffffff83ed], long[3220|0xc94]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-30739|0xffffffffffff87ed], long[1940|0x794]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [int[-32787|0xffffffffffff7fed], long[3860|0xf14]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 148[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 146[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 140[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 144[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 150[ "NoSpillStore"
  r9|q fixed "[r9|q]" r9|q -1 [0, 152[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [144, 354[[358, 409[[410, 441[144 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 198 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|q [146, 351[[358, 409[[410, 441[146 MustHaveRegister 154 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|d [148, 342[[358, 409[[410, 441[148 MustHaveRegister 170 ShouldHaveRegister 200 MustHaveRegister 212 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|d [150, 214[[358, 409[[410, 441[150 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q r9|q [152, 214[[358, 409[[410, 441[152 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [154, 186[[358, 368[[378, 409[154 MustHaveRegister 160 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [162, 163[162 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[v7|q]" v7|q -1 [162, 163[162 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[v8|d]" v8|d v4|q [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [168, 169[168 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[v10|q]" v10|q -1 [168, 169[168 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[v11|d]" v11|d v2|d [170, 214[[358, 409[[410, 441[170 MustHaveRegister 172 MustHaveRegister 184 MustHaveRegister 198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [388, 404[404 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [388, 406[406 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [420, 436[436 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [420, 438[438 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [344, 345[344 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[v17|q]" v17|q -1 [344, 345[344 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[v18|d]" v18|d v1|q [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [350, 351[350 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[v20|q]" v20|q -1 [350, 351[350 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 148[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 146[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 140[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 144[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 150[ "NoSpillStore"
  r9|q fixed "[r9|q]" r9|q -1 [0, 152[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [144, 354[[358, 409[[410, 441[144 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 198 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [146, 351[[358, 409[[410, 441[146 MustHaveRegister 154 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [148, 342[[358, 409[[410, 441[148 MustHaveRegister 170 ShouldHaveRegister 200 MustHaveRegister 212 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [150, 214[[358, 409[[410, 441[150 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r9|q]" v4|q r9|q [152, 214[[358, 409[[410, 441[152 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [154, 186[[358, 368[[378, 409[154 MustHaveRegister 160 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [162, 163[162 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rbx|q]" v7|q -1 [162, 163[162 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[r11|d]" v8|d v4|q [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [168, 169[168 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[rbx|q]" v10|q -1 [168, 169[168 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[r11|d]" v11|d v2|d [170, 214[[358, 409[[410, 441[170 MustHaveRegister 172 MustHaveRegister 184 MustHaveRegister 198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [388, 404[404 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [388, 406[406 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [420, 436[436 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbx|q]" v15|q -1 [420, 438[438 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q -1 [344, 345[344 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r11|q]" v17|q -1 [344, 345[344 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[r10|d]" v18|d v1|q [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [350, 351[350 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r11|q]" v20|q -1 [350, 351[350 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  144  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-29715|0xffffffffffff8bed], long[1300|0x514]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-31763|0xffffffffffff83ed], long[3220|0xc94]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-30739|0xffffffffffff87ed], long[1940|0x794]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [int[-32787|0xffffffffffff7fed], long[3860|0xf14]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 148[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 146[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 140[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 144[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 150[ "NoSpillStore"
  r9|q fixed "[r9|q]" r9|q -1 [0, 152[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [144, 354[[358, 409[[410, 441[144 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 198 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [146, 351[[358, 409[[410, 441[146 MustHaveRegister 154 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [148, 342[[358, 409[[410, 441[148 MustHaveRegister 170 ShouldHaveRegister 200 MustHaveRegister 212 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [150, 214[[358, 409[[410, 441[150 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r9|q]" v4|q r9|q [152, 214[[358, 409[[410, 441[152 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [154, 186[[358, 368[[378, 409[154 MustHaveRegister 160 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [162, 163[162 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rbx|q]" v7|q -1 [162, 163[162 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[r11|d]" v8|d v4|q [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [168, 169[168 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[rbx|q]" v10|q -1 [168, 169[168 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[r11|d]" v11|d v2|d [170, 214[[358, 409[[410, 441[170 MustHaveRegister 172 MustHaveRegister 184 MustHaveRegister 198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [388, 404[404 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [388, 406[406 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [420, 436[436 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbx|q]" v15|q -1 [420, 438[438 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q -1 [344, 345[344 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r11|q]" v17|q -1 [344, 345[344 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[r10|d]" v18|d v1|q [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [350, 351[350 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r11|q]" v20|q -1 [350, 351[350 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  144  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-29715|0xffffffffffff8bed], long[1300|0x514]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-31763|0xffffffffffff83ed], long[3220|0xc94]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [int[-30739|0xffffffffffff87ed], long[1940|0x794]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [int[-32787|0xffffffffffff7fed], long[3860|0xf14]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 148[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 146[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 140[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 144[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 150[ "NoSpillStore"
  r9|q fixed "[r9|q]" r9|q -1 [0, 152[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [144, 354[[358, 409[[410, 441[144 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 198 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [146, 351[[358, 409[[410, 441[146 MustHaveRegister 154 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [148, 342[[358, 409[[410, 441[148 MustHaveRegister 170 ShouldHaveRegister 200 MustHaveRegister 212 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [150, 214[[358, 409[[410, 441[150 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r9|q]" v4|q r9|q [152, 214[[358, 409[[410, 441[152 MustHaveRegister 164 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [154, 186[[358, 368[[378, 409[154 MustHaveRegister 160 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [162, 163[162 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rbx|q]" v7|q -1 [162, 163[162 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[r11|d]" v8|d v4|q [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q -1 [168, 169[168 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[rbx|q]" v10|q -1 [168, 169[168 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[r11|d]" v11|d v2|d [170, 214[[358, 409[[410, 441[170 MustHaveRegister 172 MustHaveRegister 184 MustHaveRegister 198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [388, 404[404 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [388, 406[406 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [420, 436[436 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbx|q]" v15|q -1 [420, 438[438 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q -1 [344, 345[344 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r11|q]" v17|q -1 [344, 345[344 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[r10|d]" v18|d v1|q [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [350, 351[350 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r11|q]" v20|q -1 [350, 351[350 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  144  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [v12|DWORD, v13|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  144  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v4|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v4|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction v11|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 48], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction v18|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v18|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v19|QWORD, temp2: v20|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v0|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v12|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v13|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD v11|DWORD v5|DWORD v4|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: v0|QWORD[.] v11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: v0|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: v0|QWORD[.] v11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: v0|QWORD[.] int[-1|0xffffffffffffffff] v2|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: v0|QWORD[.] - - - - v1|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  156  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  164  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  170  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  346  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89 <|@ <|@
      nr  352  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
java.nio.Buffer.<init>(Buffer.java:256) [bci: 37]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD r11|DWORD r10|DWORD r9|QWORD[.] 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
java.nio.Buffer.limit(Buffer.java:382) [bci: 37]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
locals: rsi|QWORD[.] - 
java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
locals: rsi|QWORD[.] r11|DWORD 
java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
locals: rsi|QWORD[.] int[-1|0xffffffffffffffff] rcx|DWORD - - - 
java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
locals: rsi|QWORD[.] - - - - rdx|QWORD[.] int[0|0x0] - 
java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37, 2, 2, 39, 8, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: iload_2       
     3: iload_2       
     4: iload_3       
     5: iadd          
     6: aload_1       
     7: arraylength   
     8: aload_1       
     9: iconst_0      
    10: aload         4
    12: invokespecial #0          // java.nio.CharBuffer.<init>:(int, int, int, int, char[], int, java.lang.foreign.MemorySegment)void
    15: aload_0       
    16: getstatic     #1          // ARRAY_BASE_OFFSET:long
    19: putfield      #2          // java.nio.Buffer.address:long
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85cb02000090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909048896c2410448b520cc7460cffffffffc74618000000004489562041807f40000f842d0000008b5e2448c1e3034885db0f841d0000004d8b5f284983fb000f84520200004983eb084d895f284d035f3849891b4d8bd949c1eb0344895e244c8bde4d33d949c1eb160f844e0000004d85c90f84450000004c8bde49c1eb0948bb00e0368d787f00004c03db41803b02742bf08304240041803b00742041c60300498b5f484885db0f84f80100004883eb0849895f4849035f584c891b448bd94503d8453bda0f8f35010000909090904585db0f8c8b010000909090909044895e1c413bcb0f8f470100009090909085c90f8c7e010000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090894e1841807f40000f842e000000448b5e3049c1e3034d85db0f841d0000004d8b57284983fa000f84520100004983ea084d8957284d0357384d891a4c8bd249c1ea03448956304c8bd64c33d249c1ea160f844e0000004885d20f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84f80000004983eb084d895f484d035f584d8913c746280000000048c7461010000000488b6c24104883c418493ba7500400000f87d3000000c390909048c7c714050000bbed8bffff9090909090909041899f840400004989bf90040000e8000000000f1f84000000000090909048c7c3940c000041baed83ffff909090909090904589978404000049899f90040000e8000000000f1f84000000000090909048c7c794070000bbed87ffffeb9b90909048c7c3140f000041baed7fffffebbb48896c2410e800000000e926fdfffff448891c24e800000000e9affdfffff44c891c24e800000000e909fefffff44c891c24e800000000e9affefffff44c891424e800000000e909fffffff4488d0d19ffffff49898f68040000e99cfcfffff441c78784040000f5b3ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 NOP  <||@
  Comment 87 60 NOP  <||@
  Comment 88 62 NOP  <||@
  Comment 89 64 NOP  <||@
  Comment 90 66 NOP  <||@
  Comment 91 68 NOP  <||@
  Comment 92 70 NOP  <||@
  Comment 93 72 NOP  <||@
  Comment 94 74 NOP  <||@
  Comment 95 76 NOP  <||@
  Comment 96 78 NOP  <||@
  Comment 97 80 NOP  <||@
  Comment 98 82 NOP  <||@
  Comment 99 84 NOP  <||@
  Comment 100 86 NOP  <||@
  Comment 101 88 NOP  <||@
  Comment 102 90 NOP  <||@
  Comment 103 92 NOP  <||@
  Comment 104 94 NOP  <||@
  Comment 105 96 NOP  <||@
  Comment 106 98 NOP  <||@
  Comment 107 100 NOP  <||@
  Comment 108 102 NOP  <||@
  Comment 109 104 NOP  <||@
  Comment 110 106 NOP  <||@
  Comment 111 108 NOP  <||@
  Comment 112 110 NOP  <||@
  Comment 113 112 NOP  <||@
  Comment 114 114 NOP  <||@
  Comment 115 116 NOP  <||@
  Comment 116 118 NOP  <||@
  Comment 117 120 NOP  <||@
  Comment 118 122 NOP  <||@
  Comment 119 124 NOP  <||@
  Comment 120 126 NOP  <||@
  Comment 121 128 NOP  <||@
  Comment 122 130 NOP  <||@
  Comment 123 132 NOP  <||@
  Comment 124 134 NOP  <||@
  Comment 125 136 NOP  <||@
  Comment 126 138 NOP  <||@
  Comment 127 140 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 132 142 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD  <||@
  Comment 132 154 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 132 [rdx:0, rsi:0, r9:0]at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4           
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]   <||@
  Comment 132 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 136 156 MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD  <||@
  Comment 143 158 MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 150 160 MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD  <||@
  Comment 154 162 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89  <||@
  Comment 210 164 r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3  <||@
  Comment 217 166 MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 221 168 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89  <||@
  Comment 315 170 r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 321 172 CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 330 block B2 null  <||@
  Comment 330 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 330 176 NOP  <||@
  Comment 331 178 NOP  <||@
  Comment 332 180 NOP  <||@
  Comment 333 182 NOP  <||@
  Comment 334 184 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD  <||@
  Comment 343 block B5 null  <||@
  Comment 343 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 343 188 NOP  <||@
  Comment 344 190 NOP  <||@
  Comment 345 192 NOP  <||@
  Comment 346 194 NOP  <||@
  Comment 347 196 NOP  <||@
  Comment 348 198 MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD  <||@
  Comment 352 200 CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 361 block B7 null  <||@
  Comment 361 202 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 361 204 NOP  <||@
  Comment 362 206 NOP  <||@
  Comment 363 208 NOP  <||@
  Comment 364 210 NOP  <||@
  Comment 365 212 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD  <||@
  Comment 373 block B10 null  <||@
  Comment 373 214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 373 216 NOP  <||@
  Comment 374 218 NOP  <||@
  Comment 375 220 NOP  <||@
  Comment 376 222 NOP  <||@
  Comment 377 224 NOP  <||@
  Comment 378 226 NOP  <||@
  Comment 379 228 NOP  <||@
  Comment 380 230 NOP  <||@
  Comment 381 232 NOP  <||@
  Comment 382 234 NOP  <||@
  Comment 383 236 NOP  <||@
  Comment 384 238 NOP  <||@
  Comment 385 240 NOP  <||@
  Comment 386 242 NOP  <||@
  Comment 387 244 NOP  <||@
  Comment 388 246 NOP  <||@
  Comment 389 248 NOP  <||@
  Comment 390 250 NOP  <||@
  Comment 391 252 NOP  <||@
  Comment 392 254 NOP  <||@
  Comment 393 256 NOP  <||@
  Comment 394 258 NOP  <||@
  Comment 395 260 NOP  <||@
  Comment 396 262 NOP  <||@
  Comment 397 264 NOP  <||@
  Comment 398 266 NOP  <||@
  Comment 399 268 NOP  <||@
  Comment 400 270 NOP  <||@
  Comment 401 272 NOP  <||@
  Comment 402 274 NOP  <||@
  Comment 403 276 NOP  <||@
  Comment 404 278 NOP  <||@
  Comment 405 280 NOP  <||@
  Comment 406 282 NOP  <||@
  Comment 407 284 NOP  <||@
  Comment 408 286 NOP  <||@
  Comment 409 288 NOP  <||@
  Comment 410 290 NOP  <||@
  Comment 411 292 NOP  <||@
  Comment 412 294 NOP  <||@
  Comment 413 296 NOP  <||@
  Comment 414 298 NOP  <||@
  Comment 415 300 NOP  <||@
  Comment 416 302 NOP  <||@
  Comment 417 304 NOP  <||@
  Comment 418 306 NOP  <||@
  Comment 419 308 NOP  <||@
  Comment 420 310 NOP  <||@
  Comment 421 312 NOP  <||@
  Comment 422 314 NOP  <||@
  Comment 423 316 NOP  <||@
  Comment 424 318 NOP  <||@
  Comment 425 320 NOP  <||@
  Comment 426 322 NOP  <||@
  Comment 427 324 NOP  <||@
  Comment 428 326 NOP  <||@
  Comment 429 328 NOP  <||@
  Comment 430 330 NOP  <||@
  Comment 431 332 NOP  <||@
  Comment 432 334 NOP  <||@
  Comment 433 336 NOP  <||@
  Comment 434 338 NOP  <||@
  Comment 435 340 NOP  <||@
  Comment 436 342 MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD  <||@
  Comment 439 344 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89  <||@
  Comment 496 346 r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3  <||@
  Comment 503 348 MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 507 350 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89  <||@
  Comment 601 352 MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD  <||@
  Comment 608 354 MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD  <||@
  Comment 616 356 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 625 POLL_RETURN_FAR  <||@
  Comment 639 block B1 null  <||@
  Comment 639 358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 639 360 NOP  <||@
  Comment 640 362 NOP  <||@
  Comment 641 364 NOP  <||@
  Comment 642 -1 rdi|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 649 -1 rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed]  <||@
  Comment 654 366 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 654 block B4 null  <||@
  Comment 654 388 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 654 390 NOP  <||@
  Comment 655 392 NOP  <||@
  Comment 656 394 NOP  <||@
  Comment 657 396 NOP  <||@
  Comment 658 398 NOP  <||@
  Comment 659 400 NOP  <||@
  Comment 660 402 NOP  <||@
  Comment 661 404 MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD  <||@
  Comment 668 406 MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD  <||@
  Comment 675 408 DEOPT info [bci:37, 8, 12]  <||@
  Comment 675 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 680 [rdx:0, rsi:0, r9:0]at java.nio.Buffer.<init>(Buffer.java:256) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                           |2          |3          |4          |5           
     locals:  |rsi|QWORD[.]  |int[-1|0xffffffffffffffff]  |rcx|DWORD  |r11|DWORD  |r10|DWORD  |r9|QWORD[.] 
  at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5             |6           |7 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rdx|QWORD[.]  |int[0|0x0]  |- 
  at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]   <||@
  Comment 688 block B6 null  <||@
  Comment 688 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 688 370 NOP  <||@
  Comment 689 372 NOP  <||@
  Comment 690 374 NOP  <||@
  Comment 691 -1 rbx|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 698 -1 r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed]  <||@
  Comment 704 376 JUMP ~outgoingValues: [] destination: B6 -> B9  <||@
  Comment 704 block B9 null  <||@
  Comment 704 420 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 704 422 NOP  <||@
  Comment 705 424 NOP  <||@
  Comment 706 426 NOP  <||@
  Comment 707 428 NOP  <||@
  Comment 708 430 NOP  <||@
  Comment 709 432 NOP  <||@
  Comment 710 434 NOP  <||@
  Comment 711 436 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 718 438 MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD  <||@
  Comment 725 440 DEOPT info [bci:37, 2, 2, 39, 8, 12]  <||@
  Comment 725 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 730 [rdx:0, rsi:0, r9:0]at java.nio.Buffer.limit(Buffer.java:382) [bci: 37, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r11|DWORD 
  at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r11|DWORD 
  at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39, duringCall: true, rethrow: false]
              |0             |1                           |2          |3  |4  |5 
     locals:  |rsi|QWORD[.]  |int[-1|0xffffffffffffffff]  |rcx|DWORD  |-  |-  |- 
  at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5             |6           |7 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rdx|QWORD[.]  |int[0|0x0]  |- 
  at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]   <||@
  Comment 738 block B3 null  <||@
  Comment 738 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 738 380 NOP  <||@
  Comment 739 382 NOP  <||@
  Comment 740 384 NOP  <||@
  Comment 741 -1 rdi|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 748 -1 rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed]  <||@
  Comment 753 386 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 755 block B8 null  <||@
  Comment 755 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 755 412 NOP  <||@
  Comment 756 414 NOP  <||@
  Comment 757 416 NOP  <||@
  Comment 758 -1 rbx|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 765 -1 r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed]  <||@
  Comment 771 418 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 778 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 793 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 808 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 823 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 838 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 863 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 891 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 896 [rdx:0, rsi:0, r9:0]at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4           
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]   <||@
  Comment 904 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 904 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 910 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 910 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4744[java.nio.HeapCharBuffer.<init>(char[], int, int, MemorySegment)]"
  method "HotSpotCompilation-4744[java.nio.HeapCharBuffer.<init>(char[], int, int, MemorySegment)]"
  date 1724269736585
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789adde9a0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c3669afe66669089842400c0feff4883ec189041817f20000000000f85cb02000090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909048896c2410448b520cc7460cffffffffc74618000000004489562041807f40000f842d0000008b5e2448c1e3034885db0f841d0000004d8b5f284983fb000f84520200004983eb084d895f284d035f3849891b4d8bd949c1eb0344895e244c8bde4d33d949c1eb160f844e0000004d85c90f84450000004c8bde49c1eb0948bb00e0368d787f00004c03db41803b02742bf08304240041803b00742041c60300498b5f484885db0f84f80100004883eb0849895f4849035f584c891b448bd94503d8453bda0f8f35010000909090904585db0f8c8b010000909090909044895e1c413bcb0f8f470100009090909085c90f8c7e010000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090894e1841807f40000f842e000000448b5e3049c1e3034d85db0f841d0000004d8b57284983fa000f84520100004983ea084d8957284d0357384d891a4c8bd249c1ea03448956304c8bd64c33d249c1ea160f844e0000004885d20f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84f80000004983eb084d895f484d035f584d8913c746280000000048c7461010000000488b6c24104883c418493ba7500400000f87d3000000c390909048c7c714050000bbed8bffff9090909090909041899f840400004989bf90040000e832c59afe0f1f84000000000090909048c7c3940c000041baed83ffff909090909090904589978404000049899f90040000e800c59afe0f1f84000000000090909048c7c794070000bbed87ffffeb9b90909048c7c3140f000041baed7fffffebbb48896c2410e871c598fee926fdfffff448891c24e84295aefee9affdfffff44c891c24e8b3b6aefee909fefffff44c891c24e82495aefee9affefffff44c891424e895b6aefee909fffffff4488d0d19ffffff49898f68040000e9fcd29afef441c78784040000f5b3ffff49c7879004000000000000e85ac49afe0f1f840000000000e8d365aefef4e8edc19afef4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 NOP  <||@
  Comment 87 60 NOP  <||@
  Comment 88 62 NOP  <||@
  Comment 89 64 NOP  <||@
  Comment 90 66 NOP  <||@
  Comment 91 68 NOP  <||@
  Comment 92 70 NOP  <||@
  Comment 93 72 NOP  <||@
  Comment 94 74 NOP  <||@
  Comment 95 76 NOP  <||@
  Comment 96 78 NOP  <||@
  Comment 97 80 NOP  <||@
  Comment 98 82 NOP  <||@
  Comment 99 84 NOP  <||@
  Comment 100 86 NOP  <||@
  Comment 101 88 NOP  <||@
  Comment 102 90 NOP  <||@
  Comment 103 92 NOP  <||@
  Comment 104 94 NOP  <||@
  Comment 105 96 NOP  <||@
  Comment 106 98 NOP  <||@
  Comment 107 100 NOP  <||@
  Comment 108 102 NOP  <||@
  Comment 109 104 NOP  <||@
  Comment 110 106 NOP  <||@
  Comment 111 108 NOP  <||@
  Comment 112 110 NOP  <||@
  Comment 113 112 NOP  <||@
  Comment 114 114 NOP  <||@
  Comment 115 116 NOP  <||@
  Comment 116 118 NOP  <||@
  Comment 117 120 NOP  <||@
  Comment 118 122 NOP  <||@
  Comment 119 124 NOP  <||@
  Comment 120 126 NOP  <||@
  Comment 121 128 NOP  <||@
  Comment 122 130 NOP  <||@
  Comment 123 132 NOP  <||@
  Comment 124 134 NOP  <||@
  Comment 125 136 NOP  <||@
  Comment 126 138 NOP  <||@
  Comment 127 140 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 132 142 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a85c92 slotKind: QWORD  <||@
  Comment 132 154 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 132 [rdx:0, rsi:0, r9:0]at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4           
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]   <||@
  Comment 132 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 136 156 MOV x: [rsi|QWORD[.] + 12] y: -1 size: DWORD  <||@
  Comment 143 158 MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 150 160 MOV (x: [rsi|QWORD[.] + 32], y: r10|DWORD) size: DWORD  <||@
  Comment 154 162 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r11|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89  <||@
  Comment 210 164 r11|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3  <||@
  Comment 217 166 MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 221 168 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r9|QWORD[.]) {temp: r11|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89  <||@
  Comment 315 170 r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 321 172 CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 330 block B2 null  <||@
  Comment 330 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 330 176 NOP  <||@
  Comment 331 178 NOP  <||@
  Comment 332 180 NOP  <||@
  Comment 333 182 NOP  <||@
  Comment 334 184 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD  <||@
  Comment 343 block B5 null  <||@
  Comment 343 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 343 188 NOP  <||@
  Comment 344 190 NOP  <||@
  Comment 345 192 NOP  <||@
  Comment 346 194 NOP  <||@
  Comment 347 196 NOP  <||@
  Comment 348 198 MOV (x: [rsi|QWORD[.] + 28], y: r11|DWORD) size: DWORD  <||@
  Comment 352 200 CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 361 block B7 null  <||@
  Comment 361 202 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 361 204 NOP  <||@
  Comment 362 206 NOP  <||@
  Comment 363 208 NOP  <||@
  Comment 364 210 NOP  <||@
  Comment 365 212 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 size: DWORD  <||@
  Comment 373 block B10 null  <||@
  Comment 373 214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 373 216 NOP  <||@
  Comment 374 218 NOP  <||@
  Comment 375 220 NOP  <||@
  Comment 376 222 NOP  <||@
  Comment 377 224 NOP  <||@
  Comment 378 226 NOP  <||@
  Comment 379 228 NOP  <||@
  Comment 380 230 NOP  <||@
  Comment 381 232 NOP  <||@
  Comment 382 234 NOP  <||@
  Comment 383 236 NOP  <||@
  Comment 384 238 NOP  <||@
  Comment 385 240 NOP  <||@
  Comment 386 242 NOP  <||@
  Comment 387 244 NOP  <||@
  Comment 388 246 NOP  <||@
  Comment 389 248 NOP  <||@
  Comment 390 250 NOP  <||@
  Comment 391 252 NOP  <||@
  Comment 392 254 NOP  <||@
  Comment 393 256 NOP  <||@
  Comment 394 258 NOP  <||@
  Comment 395 260 NOP  <||@
  Comment 396 262 NOP  <||@
  Comment 397 264 NOP  <||@
  Comment 398 266 NOP  <||@
  Comment 399 268 NOP  <||@
  Comment 400 270 NOP  <||@
  Comment 401 272 NOP  <||@
  Comment 402 274 NOP  <||@
  Comment 403 276 NOP  <||@
  Comment 404 278 NOP  <||@
  Comment 405 280 NOP  <||@
  Comment 406 282 NOP  <||@
  Comment 407 284 NOP  <||@
  Comment 408 286 NOP  <||@
  Comment 409 288 NOP  <||@
  Comment 410 290 NOP  <||@
  Comment 411 292 NOP  <||@
  Comment 412 294 NOP  <||@
  Comment 413 296 NOP  <||@
  Comment 414 298 NOP  <||@
  Comment 415 300 NOP  <||@
  Comment 416 302 NOP  <||@
  Comment 417 304 NOP  <||@
  Comment 418 306 NOP  <||@
  Comment 419 308 NOP  <||@
  Comment 420 310 NOP  <||@
  Comment 421 312 NOP  <||@
  Comment 422 314 NOP  <||@
  Comment 423 316 NOP  <||@
  Comment 424 318 NOP  <||@
  Comment 425 320 NOP  <||@
  Comment 426 322 NOP  <||@
  Comment 427 324 NOP  <||@
  Comment 428 326 NOP  <||@
  Comment 429 328 NOP  <||@
  Comment 430 330 NOP  <||@
  Comment 431 332 NOP  <||@
  Comment 432 334 NOP  <||@
  Comment 433 336 NOP  <||@
  Comment 434 338 NOP  <||@
  Comment 435 340 NOP  <||@
  Comment 436 342 MOV (x: [rsi|QWORD[.] + 24], y: rcx|DWORD) size: DWORD  <||@
  Comment 439 344 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 48], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89  <||@
  Comment 496 346 r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@15fc5973 encoding: base: 0 shift: 3  <||@
  Comment 503 348 MOV (x: [rsi|QWORD[.] + 48], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 507 350 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@33fe4d89  <||@
  Comment 601 352 MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD  <||@
  Comment 608 354 MOV x: [rsi|QWORD[.] + 16] y: 16 size: QWORD  <||@
  Comment 616 356 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 625 POLL_RETURN_FAR  <||@
  Comment 639 block B1 null  <||@
  Comment 639 358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 639 360 NOP  <||@
  Comment 640 362 NOP  <||@
  Comment 641 364 NOP  <||@
  Comment 642 -1 rdi|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 649 -1 rbx|DWORD = MOVE input: int[-29715|0xffffffffffff8bed]  <||@
  Comment 654 366 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 654 block B4 null  <||@
  Comment 654 388 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 654 390 NOP  <||@
  Comment 655 392 NOP  <||@
  Comment 656 394 NOP  <||@
  Comment 657 396 NOP  <||@
  Comment 658 398 NOP  <||@
  Comment 659 400 NOP  <||@
  Comment 660 402 NOP  <||@
  Comment 661 404 MOV (x: [r15|QWORD + 1156], y: rbx|DWORD) size: DWORD  <||@
  Comment 668 406 MOV (x: [r15|QWORD + 1168], y: rdi|QWORD) size: QWORD  <||@
  Comment 675 408 DEOPT info [bci:37, 8, 12]  <||@
  Comment 675 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 680 [rdx:0, rsi:0, r9:0]at java.nio.Buffer.<init>(Buffer.java:256) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                           |2          |3          |4          |5           
     locals:  |rsi|QWORD[.]  |int[-1|0xffffffffffffffff]  |rcx|DWORD  |r11|DWORD  |r10|DWORD  |r9|QWORD[.] 
  at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5             |6           |7 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rdx|QWORD[.]  |int[0|0x0]  |- 
  at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]   <||@
  Comment 688 block B6 null  <||@
  Comment 688 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 688 370 NOP  <||@
  Comment 689 372 NOP  <||@
  Comment 690 374 NOP  <||@
  Comment 691 -1 rbx|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 698 -1 r10|DWORD = MOVE input: int[-31763|0xffffffffffff83ed]  <||@
  Comment 704 376 JUMP ~outgoingValues: [] destination: B6 -> B9  <||@
  Comment 704 block B9 null  <||@
  Comment 704 420 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 704 422 NOP  <||@
  Comment 705 424 NOP  <||@
  Comment 706 426 NOP  <||@
  Comment 707 428 NOP  <||@
  Comment 708 430 NOP  <||@
  Comment 709 432 NOP  <||@
  Comment 710 434 NOP  <||@
  Comment 711 436 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 718 438 MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD  <||@
  Comment 725 440 DEOPT info [bci:37, 2, 2, 39, 8, 12]  <||@
  Comment 725 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 730 [rdx:0, rsi:0, r9:0]at java.nio.Buffer.limit(Buffer.java:382) [bci: 37, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r11|DWORD 
  at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r11|DWORD 
  at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39, duringCall: true, rethrow: false]
              |0             |1                           |2          |3  |4  |5 
     locals:  |rsi|QWORD[.]  |int[-1|0xffffffffffffffff]  |rcx|DWORD  |-  |-  |- 
  at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5             |6           |7 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rdx|QWORD[.]  |int[0|0x0]  |- 
  at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]   <||@
  Comment 738 block B3 null  <||@
  Comment 738 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 738 380 NOP  <||@
  Comment 739 382 NOP  <||@
  Comment 740 384 NOP  <||@
  Comment 741 -1 rdi|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 748 -1 rbx|DWORD = MOVE input: int[-30739|0xffffffffffff87ed]  <||@
  Comment 753 386 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 755 block B8 null  <||@
  Comment 755 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 755 412 NOP  <||@
  Comment 756 414 NOP  <||@
  Comment 757 416 NOP  <||@
  Comment 758 -1 rbx|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 765 -1 r10|DWORD = MOVE input: int[-32787|0xffffffffffff7fed]  <||@
  Comment 771 418 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 778 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 793 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 808 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 823 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 838 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 863 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 891 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 896 [rdx:0, rsi:0, r9:0]at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4           
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]   <||@
  Comment 904 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 904 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 910 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 910 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
