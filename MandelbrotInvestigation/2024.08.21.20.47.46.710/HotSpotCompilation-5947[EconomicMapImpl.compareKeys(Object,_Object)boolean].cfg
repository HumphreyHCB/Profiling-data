begin_compilation
  name " HotSpotCompilation-5947[org.graalvm.collections.EconomicMapImpl.compareKeys(Object, Object)]"
  method "HotSpotCompilation-5947[org.graalvm.collections.EconomicMapImpl.compareKeys(Object, Object)]"
  date 1724269739289
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 v5 v86 v62 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v5 v58 v62 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a3 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.18908883285497913
stamp: void
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v7 #falseSuccessor: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 6]
stamp: void
=== Inputs ===
memoryMap: - 
result: i9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a78 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a78  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v83 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v83 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
a47 v59 v64 v66 
=== Predecessor ===
v6 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v83 lastLocationAccess: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a78 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a78  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9022602110848352
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
a78 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v15 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid a65 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
rawvalue: Equivalence$1@811395695
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$1
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$1@811395695]
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a78 
y: a65 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a78 y: a65  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
profileData: PROFILED designatedSuccessorProbability: 0.7598573166793837
stamp: void
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v30 #falseSuccessor: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 270
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a80 a3 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a80 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-12555|0xffffffffffffcef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v86 
lastLocationAccess: - 
=== Succesors ===
next: v54 
=== Usages ===
v77 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v86 lastLocationAccess: - #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v79 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v79  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v77 
index: - 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v77 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v84 
lastLocationAccess: - 
=== Succesors ===
next: j57 
=== Usages ===
v85 v58 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v84 lastLocationAccess: - #next: j57  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v54 
index: - 
=== Succesors ===
=== Usages ===
j57 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v54 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j57 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v85 
lastLocationAccess: - 
=== Succesors ===
next: i33 
=== Usages ===
v58 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v85 lastLocationAccess: - #next: i33  <|@  <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j57 
metaspaceMethod: v54 
arguments: a2 a3 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j57 metaspaceMethod: v54 arguments: a2 a3  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v58 
stateDuring: ?73 
=== Succesors ===
next: v35 
=== Usages ===
v35 
=== Predecessor ===
j57 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v58 stateDuring: ?73 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 39]
stamp: void
=== Inputs ===
memoryMap: - 
result: i33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i33 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid a63 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
rawvalue: Equivalence$3@441713316
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$3
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$3@441713316]
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a78 
y: a63 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a78 y: a63  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
profileData: PROFILED designatedSuccessorProbability: 0.0010485074429543479
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v29 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v24 #falseSuccessor: v29  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v24 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v21 v23 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v21 v23 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 51]
stamp: void
=== Inputs ===
memoryMap: - 
result: i42 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i42  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i38 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i38  <|@  <|@
f <@~|@floating>@ <|@
tid a47 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a78 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a78  <|@  <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a47 a2 a3 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a47 a2 a3  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v62 
stateDuring: ?72 
=== Succesors ===
next: v40 
=== Usages ===
v40 
=== Predecessor ===
v29 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v62 stateDuring: ?72 #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 49]
stamp: void
=== Inputs ===
memoryMap: - 
result: i38 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i38 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i38  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 v5 v86 v62 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v5 v58 v62 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a3 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.18908883285497913
stamp: void
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v7 #falseSuccessor: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 6]
stamp: void
=== Inputs ===
memoryMap: - 
result: i9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a78 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a78  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v83 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a78 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v83 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
a47 v59 v64 v66 
=== Predecessor ===
v6 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v83 lastLocationAccess: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a78 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a78  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9022602110848352
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
a78 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v15 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid a65 <|@
result NarrowOop[Equivalence$1@811395695] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
rawvalue: Equivalence$1@811395695
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$1
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$1@811395695]
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a78 
y: a65 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a78 y: a65  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
profileData: PROFILED designatedSuccessorProbability: 0.7598573166793837
stamp: void
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v30 #falseSuccessor: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 270
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a80 a3 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a80 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-12555|0xffffffffffffcef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v86 
lastLocationAccess: - 
=== Succesors ===
next: v54 
=== Usages ===
v77 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v86 lastLocationAccess: - #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v79 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v79  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
result [v5|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v77 
index: - 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v77 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v54 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v84 
lastLocationAccess: - 
=== Succesors ===
next: j57 
=== Usages ===
v85 v58 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v84 lastLocationAccess: - #next: j57  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
result [v7|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v54 
index: - 
=== Succesors ===
=== Usages ===
j57 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v54 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j57 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v85 
lastLocationAccess: - 
=== Succesors ===
next: i33 
=== Usages ===
v58 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v85 lastLocationAccess: - #next: i33  <|@  <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j57 
metaspaceMethod: v54 
arguments: a2 a3 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j57 metaspaceMethod: v54 arguments: a2 a3  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i33 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v58 
stateDuring: ?73 
=== Succesors ===
next: v35 
=== Usages ===
v35 
=== Predecessor ===
j57 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v58 stateDuring: ?73 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 39]
stamp: void
=== Inputs ===
memoryMap: - 
result: i33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i33 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid a63 <|@
result NarrowOop[Equivalence$3@441713316] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
rawvalue: Equivalence$3@441713316
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$3
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$3@441713316]
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a78 
y: a63 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a78 y: a63  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
profileData: PROFILED designatedSuccessorProbability: 0.0010485074429543479
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v29 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v24 #falseSuccessor: v29  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v24 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v21 v23 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v21 v23 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 51]
stamp: void
=== Inputs ===
memoryMap: - 
result: i42 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i42  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i38 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i38  <|@  <|@
f <@~|@floating>@ <|@
tid a47 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a78 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a78  <|@  <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a47 a2 a3 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a47 a2 a3  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i38 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v62 
stateDuring: ?72 
=== Succesors ===
next: v40 
=== Usages ===
v40 
=== Predecessor ===
v29 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v62 stateDuring: ?72 #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 49]
stamp: void
=== Inputs ===
memoryMap: - 
result: i38 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i38 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  180  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  246  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  180  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  246  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v8|q [0, 1[[76, 78[[98, 100[[176, 180[[182, 184[[244, 246[[248, 250[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 28[[178, 179[[242, 245[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|q [0, 26[[172, 179[[240, 245[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v7|q [0, 1[[174, 179[[244, 245[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[178, 179[[244, 245[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 24[[170, 179[[238, 245[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [24, 48[[102, 161[24 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [26, 48[[102, 170[[186, 240[26 MustHaveRegister 30 ShouldHaveRegister 160 MustHaveRegister 170 ShouldHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [28, 48[[102, 172[[186, 242[28 MustHaveRegister 30 MustHaveRegister 172 ShouldHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [44, 48[[102, 114[[186, 236[44 MustHaveRegister 46 MustHaveRegister 112 ShouldHaveRegister 196 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [160, 164[160 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|d [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [162, 165[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [166, 174[166 MustHaveRegister 168 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [168, 176[168 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d rax|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v3|d [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d rax|d [246, 248[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v8|q [0, 1[[76, 78[[98, 100[[176, 180[[182, 184[[244, 246[[248, 250[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 28[[178, 179[[242, 245[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|q [0, 26[[172, 179[[240, 245[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v7|q [0, 1[[174, 179[[244, 245[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[178, 179[[244, 245[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 24[[170, 179[[238, 245[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 48[[102, 161[24 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [26, 48[[102, 170[[186, 240[26 MustHaveRegister 30 ShouldHaveRegister 160 MustHaveRegister 170 ShouldHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [28, 48[[102, 172[[186, 242[28 MustHaveRegister 30 MustHaveRegister 172 ShouldHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [44, 48[[102, 114[[186, 236[44 MustHaveRegister 46 MustHaveRegister 112 ShouldHaveRegister 196 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [160, 164[160 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [162, 165[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rbx|q]" v7|q -1 [166, 174[166 MustHaveRegister 168 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [168, 176[168 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v3|d [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d rax|d [246, 248[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  180  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  246  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v8|q [0, 1[[76, 78[[98, 100[[176, 180[[182, 184[[244, 246[[248, 250[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 28[[178, 179[[242, 245[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|q [0, 26[[172, 179[[240, 245[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v7|q [0, 1[[174, 179[[244, 245[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[178, 179[[244, 245[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 24[[170, 179[[238, 245[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 48[[102, 161[24 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [26, 48[[102, 170[[186, 240[26 MustHaveRegister 30 ShouldHaveRegister 160 MustHaveRegister 170 ShouldHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [28, 48[[102, 172[[186, 242[28 MustHaveRegister 30 MustHaveRegister 172 ShouldHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [44, 48[[102, 114[[186, 236[44 MustHaveRegister 46 MustHaveRegister 112 ShouldHaveRegister 196 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [160, 164[160 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [162, 165[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rbx|q]" v7|q -1 [166, 174[166 MustHaveRegister 168 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [168, 176[168 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v3|d [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d rax|d [246, 248[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  180  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  246  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v8|q [0, 1[[76, 78[[98, 100[[176, 180[[182, 184[[244, 246[[248, 250[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 28[[178, 179[[242, 245[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|q [0, 26[[172, 179[[240, 245[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v7|q [0, 1[[174, 179[[244, 245[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[178, 179[[244, 245[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 24[[170, 179[[238, 245[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[178, 179[[244, 245[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 48[[102, 161[24 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [26, 48[[102, 170[[186, 240[26 MustHaveRegister 30 ShouldHaveRegister 160 MustHaveRegister 170 ShouldHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [28, 48[[102, 172[[186, 242[28 MustHaveRegister 30 MustHaveRegister 172 ShouldHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [44, 48[[102, 114[[186, 236[44 MustHaveRegister 46 MustHaveRegister 112 ShouldHaveRegister 196 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [160, 164[160 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [162, 165[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rbx|q]" v7|q -1 [166, 174[166 MustHaveRegister 168 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [168, 176[168 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v3|d [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d rax|d [246, 248[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  180  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  246  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction v7|QWORD = MOV input: [v5|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction v8|QWORD = MOV input: [v7|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rbx|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = MOVE input: v8|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  180  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: v3|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  246  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605479258005646196
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604765362828301409
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 4604765542580961021
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   78  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4595980663468020272
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4590375582081923227
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4588840156617355438
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  166  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36] <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4581143195920335119
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4581137443835227522
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3 <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46] <|@ <|@
      nr  250  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4536511360284898018
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #28         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #29         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #30         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #7          // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #31         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f854101000090909090909090909048896c2410483bca0f84390000009090909090448b56204585d20f854b0000009090909090909090909090b800000000488b6c24104883c418493ba7500400000f8702010000c39090909090909090b801000000488b6c24104883c418493ba7500400000f87f2000000c3909090904181faaddeadde0f8559000000909090909090909090909090909090909090909090908b5a0848be0000002b787f0000488d1c1e488b9bd0010000488b4340488bf2488bd1ffd00f1f840000000000488b6c24104883c418493ba7500400000f879c000000c3909090904181faaddeadde0f844a00000090909090909090909090909090909090909049c1e203498bf266669048b8ffffffffffffffffe8000000000f1f840000000000488b6c24104883c418493ba7500400000f8755000000c3909090e9ebfeffff48896c2410e800000000e9b0fefffff4488d0deafeffff49898f68040000e962fefffff4488d0dfafeffff49898f68040000e94efefffff4488d0d50ffffff49898f68040000e93afefffff4488d0d97ffffff49898f68040000e926fefffff441c78784040000f5ceffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD  <||@
  Comment 72 30 CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 81 block B2 null  <||@
  Comment 81 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 81 34 NOP  <||@
  Comment 82 36 NOP  <||@
  Comment 83 38 NOP  <||@
  Comment 84 40 NOP  <||@
  Comment 85 42 NOP  <||@
  Comment 86 44 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 90 46 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 99 block B3 null  <||@
  Comment 99 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 99 50 NOP  <||@
  Comment 100 52 NOP  <||@
  Comment 101 54 NOP  <||@
  Comment 102 56 JUMP ~outgoingValues: [] destination: B3 -> B8  <||@
  Comment 102 block B8 null  <||@
  Comment 102 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 102 60 NOP  <||@
  Comment 103 62 NOP  <||@
  Comment 104 64 NOP  <||@
  Comment 105 66 NOP  <||@
  Comment 106 68 NOP  <||@
  Comment 107 70 NOP  <||@
  Comment 108 72 NOP  <||@
  Comment 109 74 NOP  <||@
  Comment 110 76 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 115 78 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 124 POLL_RETURN_FAR  <||@
  Comment 138 block B1 null  <||@
  Comment 138 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 138 82 NOP  <||@
  Comment 139 84 NOP  <||@
  Comment 140 86 NOP  <||@
  Comment 141 88 NOP  <||@
  Comment 142 90 NOP  <||@
  Comment 143 92 NOP  <||@
  Comment 144 94 NOP  <||@
  Comment 145 96 NOP  <||@
  Comment 146 98 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 151 100 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 160 POLL_RETURN_FAR  <||@
  Comment 174 block B4 null  <||@
  Comment 174 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 174 104 NOP  <||@
  Comment 175 106 NOP  <||@
  Comment 176 108 NOP  <||@
  Comment 177 110 NOP  <||@
  Comment 178 112 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 178 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 191 block B5 null  <||@
  Comment 191 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 191 116 NOP  <||@
  Comment 192 118 NOP  <||@
  Comment 193 120 NOP  <||@
  Comment 194 122 NOP  <||@
  Comment 195 124 NOP  <||@
  Comment 196 126 NOP  <||@
  Comment 197 128 NOP  <||@
  Comment 198 130 NOP  <||@
  Comment 199 132 NOP  <||@
  Comment 200 134 NOP  <||@
  Comment 201 136 NOP  <||@
  Comment 202 138 NOP  <||@
  Comment 203 140 NOP  <||@
  Comment 204 142 NOP  <||@
  Comment 205 144 NOP  <||@
  Comment 206 146 NOP  <||@
  Comment 207 148 NOP  <||@
  Comment 208 150 NOP  <||@
  Comment 209 152 NOP  <||@
  Comment 210 154 NOP  <||@
  Comment 211 156 NOP  <||@
  Comment 212 158 NOP  <||@
  Comment 213 160 rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 213 [rcx:0, rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|QWORD[.]   <||@
  Comment 213 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 216 162 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 226 164 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0  <||@
  Comment 230 166 rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD  <||@
  Comment 237 168 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 241 170 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 244 172 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 247 178 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36]  <||@
  Comment 247 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 247 INLINE_INVOKE  <||@
  Comment 249 []at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 257 184 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 266 POLL_RETURN_FAR  <||@
  Comment 280 block B6 null  <||@
  Comment 280 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 280 188 NOP  <||@
  Comment 281 190 NOP  <||@
  Comment 282 192 NOP  <||@
  Comment 283 194 NOP  <||@
  Comment 284 196 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 284 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 297 block B9 null  <||@
  Comment 297 198 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 297 200 NOP  <||@
  Comment 298 202 NOP  <||@
  Comment 299 204 NOP  <||@
  Comment 300 206 NOP  <||@
  Comment 301 208 NOP  <||@
  Comment 302 210 NOP  <||@
  Comment 303 212 NOP  <||@
  Comment 304 214 NOP  <||@
  Comment 305 216 NOP  <||@
  Comment 306 218 NOP  <||@
  Comment 307 220 NOP  <||@
  Comment 308 222 NOP  <||@
  Comment 309 224 NOP  <||@
  Comment 310 226 NOP  <||@
  Comment 311 228 NOP  <||@
  Comment 312 230 NOP  <||@
  Comment 313 232 NOP  <||@
  Comment 314 234 NOP  <||@
  Comment 315 236 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3  <||@
  Comment 319 238 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 322 244 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46]  <||@
  Comment 325 INVOKEVIRTUAL  <||@
  Comment 335 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 340 []at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 348 250 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 357 POLL_RETURN_FAR  <||@
  Comment 371 block B7 null  <||@
  Comment 371 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 371 254 NOP  <||@
  Comment 372 256 NOP  <||@
  Comment 373 258 NOP  <||@
  Comment 374 260 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 384 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 409 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 429 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 449 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 469 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 497 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 502 [rcx:0, rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|QWORD[.]   <||@
  Comment 510 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 510 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 516 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 516 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5947[org.graalvm.collections.EconomicMapImpl.compareKeys(Object, Object)]"
  method "HotSpotCompilation-5947[org.graalvm.collections.EconomicMapImpl.compareKeys(Object, Object)]"
  date 1724269739399
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ae08aa0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c3c597fe66669089842400c0feff4883ec189041817f20030000000f854101000090909090909090909048896c2410483bca0f84390000009090909090448b56204585d20f854b0000009090909090909090909090b800000000488b6c24104883c418493ba7500400000f8702010000c39090909090909090b801000000488b6c24104883c418493ba7500400000f87f2000000c3909090904181fa86e8bac50f8559000000909090909090909090909090909090909090909090908b5a0848be0000002b787f0000488d1c1e488b9bd0010000488b4340488bf2488bd1ffd00f1f840000000000488b6c24104883c418493ba7500400000f879c000000c3909090904181fa17c2bcc50f844a00000090909090909090909090909090909090909049c1e203498bf266669048b8ffffffffffffffffe88cca97fe0f1f8400e4020002488b6c24104883c418493ba7500400000f8755000000c3909090e9ebfeffff48896c2410e8fb2596fee9b0fefffff4488d0deafeffff49898f68040000e9c23398fef4488d0dfafeffff49898f68040000e9ae3398fef4488d0d50ffffff49898f68040000e99a3398fef4488d0d97ffffff49898f68040000e9863398fef441c78784040000f5ceffff49c7879004000000000000e8e42498fe0f1f840000000000e85dc6abfef4e8772298fef4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf9eb8c slotKind: QWORD  <||@
  Comment 72 30 CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18908883285497913 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 81 block B2 null  <||@
  Comment 81 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 81 34 NOP  <||@
  Comment 82 36 NOP  <||@
  Comment 83 38 NOP  <||@
  Comment 84 40 NOP  <||@
  Comment 85 42 NOP  <||@
  Comment 86 44 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 90 46 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022602110848352 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 99 block B3 null  <||@
  Comment 99 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 99 50 NOP  <||@
  Comment 100 52 NOP  <||@
  Comment 101 54 NOP  <||@
  Comment 102 56 JUMP ~outgoingValues: [] destination: B3 -> B8  <||@
  Comment 102 block B8 null  <||@
  Comment 102 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 102 60 NOP  <||@
  Comment 103 62 NOP  <||@
  Comment 104 64 NOP  <||@
  Comment 105 66 NOP  <||@
  Comment 106 68 NOP  <||@
  Comment 107 70 NOP  <||@
  Comment 108 72 NOP  <||@
  Comment 109 74 NOP  <||@
  Comment 110 76 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 115 78 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 124 POLL_RETURN_FAR  <||@
  Comment 138 block B1 null  <||@
  Comment 138 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 138 82 NOP  <||@
  Comment 139 84 NOP  <||@
  Comment 140 86 NOP  <||@
  Comment 141 88 NOP  <||@
  Comment 142 90 NOP  <||@
  Comment 143 92 NOP  <||@
  Comment 144 94 NOP  <||@
  Comment 145 96 NOP  <||@
  Comment 146 98 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 151 100 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 160 POLL_RETURN_FAR  <||@
  Comment 174 block B4 null  <||@
  Comment 174 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 174 104 NOP  <||@
  Comment 175 106 NOP  <||@
  Comment 176 108 NOP  <||@
  Comment 177 110 NOP  <||@
  Comment 178 112 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598573166793837 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 178 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 191 block B5 null  <||@
  Comment 191 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 191 116 NOP  <||@
  Comment 192 118 NOP  <||@
  Comment 193 120 NOP  <||@
  Comment 194 122 NOP  <||@
  Comment 195 124 NOP  <||@
  Comment 196 126 NOP  <||@
  Comment 197 128 NOP  <||@
  Comment 198 130 NOP  <||@
  Comment 199 132 NOP  <||@
  Comment 200 134 NOP  <||@
  Comment 201 136 NOP  <||@
  Comment 202 138 NOP  <||@
  Comment 203 140 NOP  <||@
  Comment 204 142 NOP  <||@
  Comment 205 144 NOP  <||@
  Comment 206 146 NOP  <||@
  Comment 207 148 NOP  <||@
  Comment 208 150 NOP  <||@
  Comment 209 152 NOP  <||@
  Comment 210 154 NOP  <||@
  Comment 211 156 NOP  <||@
  Comment 212 158 NOP  <||@
  Comment 213 160 rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 213 [rcx:0, rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|QWORD[.]   <||@
  Comment 213 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 216 162 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 226 164 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 140154094223360 shift: 0  <||@
  Comment 230 166 rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD  <||@
  Comment 237 168 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 241 170 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 244 172 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 247 178 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36]  <||@
  Comment 247 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 247 INLINE_INVOKE  <||@
  Comment 249 []at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 257 184 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 266 POLL_RETURN_FAR  <||@
  Comment 280 block B6 null  <||@
  Comment 280 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 280 188 NOP  <||@
  Comment 281 190 NOP  <||@
  Comment 282 192 NOP  <||@
  Comment 283 194 NOP  <||@
  Comment 284 196 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010485074429543479 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 284 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 297 block B9 null  <||@
  Comment 297 198 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 297 200 NOP  <||@
  Comment 298 202 NOP  <||@
  Comment 299 204 NOP  <||@
  Comment 300 206 NOP  <||@
  Comment 301 208 NOP  <||@
  Comment 302 210 NOP  <||@
  Comment 303 212 NOP  <||@
  Comment 304 214 NOP  <||@
  Comment 305 216 NOP  <||@
  Comment 306 218 NOP  <||@
  Comment 307 220 NOP  <||@
  Comment 308 222 NOP  <||@
  Comment 309 224 NOP  <||@
  Comment 310 226 NOP  <||@
  Comment 311 228 NOP  <||@
  Comment 312 230 NOP  <||@
  Comment 313 232 NOP  <||@
  Comment 314 234 NOP  <||@
  Comment 315 236 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2b777da3 encoding: base: 0 shift: 3  <||@
  Comment 319 238 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 322 244 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46]  <||@
  Comment 325 INVOKEVIRTUAL  <||@
  Comment 335 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 340 []at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 348 250 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 357 POLL_RETURN_FAR  <||@
  Comment 371 block B7 null  <||@
  Comment 371 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 371 254 NOP  <||@
  Comment 372 256 NOP  <||@
  Comment 373 258 NOP  <||@
  Comment 374 260 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 384 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 409 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 429 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 449 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 469 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 497 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 502 [rcx:0, rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|QWORD[.]   <||@
  Comment 510 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 510 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 516 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 516 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
