begin_compilation
  name " HotSpotCompilation-7555[java.lang.ClassValue.get(Class)]"
  method "HotSpotCompilation-7555[java.lang.ClassValue.get(Class)]"
  date 1724269754190
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a158 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a158  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.lang.ClassValue
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?6 v103 v168 ?64 ?74 v172 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
localsSize: 4
locksSize: 0
sourceFile: ClassValue.java
sourceLine: 104
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a164 
=== Succesors ===
=== Usages ===
a158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a164  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.Class
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?74 v167 ?6 v103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
displacement: 92
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a158 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ClassValue$ClassValueMap
barrierType: NONE
deoptReasonAndAction: int[-19723|0xffffffffffffb2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Class.classValueMap
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:191) [bci: 1]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
stamp: n# java.lang.ClassValue$ClassValueMap
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v167 
lastLocationAccess: - 
=== Succesors ===
next: v36 
=== Usages ===
v174 v119 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v167 lastLocationAccess: - #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:192) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a158 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a158  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:192) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
profileData: PROFILED designatedSuccessorProbability: 1.2127634359659911E-4
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
a158 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v35 #falseSuccessor: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:192) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:192) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
rawvalue: ClassValue.Entry[1]{null}
stableDimension: 0
stamp: a!# java.lang.ClassValue$Entry[]
stampKind: a java.lang.Object
value: Object[ClassValue.Entry[1]{null}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:193) [bci: 13]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a159 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a159  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a158 
=== Succesors ===
=== Usages ===
a159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a159 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ClassValue$Entry[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ClassValue$ClassValueMap.cacheArray
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.getCache(ClassValue.java:434) [bci: 1]
at java.lang.ClassValue.getCacheCarefully(ClassValue.java:193) [bci: 14]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
stamp: n# java.lang.ClassValue$Entry[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
lastLocationAccess: - 
=== Succesors ===
next: v46 
=== Usages ===
a118 
=== Predecessor ===
v34 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 lastLocationAccess: - #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid a118 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.getCache(ClassValue.java:434) [bci: 1]
at java.lang.ClassValue.getCacheCarefully(ClassValue.java:193) [bci: 14]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
op: Uncompress
stamp: a# java.lang.ClassValue$Entry[]
=== Inputs ===
value: a159 
=== Succesors ===
=== Usages ===
a45 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a159  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
a159 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a45 <|@
d <@d|@=== Debug Properties ===
stamp: a# java.lang.ClassValue$Entry[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v43 
values: a37 a118 
=== Succesors ===
=== Usages ===
?6 v170 v169 ?74 v103 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v43 values: a37 a118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v44 v46 
=== Succesors ===
next: i160 
=== Usages ===
a45 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v44 v46 #next: i160  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: dup
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
sourceFile: ClassValue.java
sourceLine: 104
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a45 a1 a2 
=== Succesors ===
=== Usages ===
v175 i160 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a45 a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a45 
index: - 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a45 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-22283|0xffffffffffffa8f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 3]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v169 
lastLocationAccess: - 
=== Succesors ===
next: i161 
=== Usages ===
i50 v92 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v169 lastLocationAccess: - #next: i161  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ClassValue.hashCodeForCache
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 3]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v168 
lastLocationAccess: - 
=== Succesors ===
next: v139 
=== Usages ===
i51 
=== Predecessor ===
i160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v168 lastLocationAccess: - #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i160 
y: i49 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i160 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 6]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: i32
=== Inputs ===
x: i50 
y: i161 
=== Succesors ===
=== Usages ===
j120 v92 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i50 y: i161  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i160 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i160  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v92 
=== Succesors ===
trueSuccessor: v136 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
i161 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v92 #trueSuccessor: v136 #falseSuccessor: v138  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a162 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a162  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i51 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i51  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a45 
index: j120 
=== Succesors ===
=== Usages ===
a162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a45 index: j120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ClassValue$Entry
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: n# java.lang.ClassValue$Entry
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
lastLocationAccess: - 
=== Succesors ===
next: v57 
=== Usages ===
a102 v121 v171 v173 
=== Predecessor ===
v136 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v170 lastLocationAccess: - #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:111) [bci: 20]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a162 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a162  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 1]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 1.2727457183173932E-4
stamp: void
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
a162 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v56 #falseSuccessor: v55  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 19]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a29 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a29  <|@  <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
referencedType: [null]
returnStamp: a java.lang.Object
signature: [HotSpotType<Ljava/lang/ClassValue;, resolved>, UnresolvedJavaType<[Ljava/lang/ClassValue$Entry;>, UnresolvedJavaType<Ljava/lang/Class;>]
stamp: void
targetMethod: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)>
=== Inputs ===
arguments: a1 a45 a2 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a45 a2  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
localsSize: 4
locksSize: 0
sourceFile: ClassValue.java
sourceLine: 117
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a29 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
polymorphic: false
stamp: a java.lang.Object
targetMethod: Direct#ClassValue.getFromBackup
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v103 
stateDuring: ?144 
=== Succesors ===
next: v31 
=== Usages ===
v31 
=== Predecessor ===
v56 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v103 stateDuring: ?144 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:117) [bci: 30]
stamp: void
=== Inputs ===
memoryMap: - 
result: a29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a29 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a29  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 4]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a105 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a105  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a162 
=== Succesors ===
=== Usages ===
a105 v157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: REFERENCE_GET
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Reference.referent
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:245) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v171 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
a106 v156 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v171 lastLocationAccess: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid a106 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:245) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a105 
=== Succesors ===
=== Usages ===
?64 v157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:245) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
precise: true
stamp: void
=== Inputs ===
address: v171 
value: a106 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
a105 >@ <|@
instruction <@G1ReferentFieldReadBarrier|@jdk.graal.compiler.nodes.gc.G1ReferentFieldReadBarrierNode>@ address: v171 value: a106 #next: v61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
barriersString: 
fence: NONE
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:245) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a109 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a109  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a109 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ClassValue$Version
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ClassValue.version
memoryOrder: VOLATILE
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: n# java.lang.ClassValue$Version
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v172 
lastLocationAccess: - 
=== Succesors ===
next: v143 
=== Usages ===
a110 v156 
=== Predecessor ===
v61 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v172 lastLocationAccess: - #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a105 
y: a109 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a105 y: a109  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
a109 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 15]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a163 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a163  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a162 
=== Succesors ===
=== Usages ===
a163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a163 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ClassValue$Entry.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue$Entry.value(ClassValue.java:339) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:111) [bci: 20]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
lastLocationAccess: - 
=== Succesors ===
next: v27 
=== Usages ===
a114 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v173 lastLocationAccess: - #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid a114 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue$Entry.value(ClassValue.java:339) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:111) [bci: 20]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a163 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a163  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:111) [bci: 23]
stamp: void
=== Inputs ===
memoryMap: - 
result: a114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a163 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid a102 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
op: Uncompress
stamp: a# java.lang.ClassValue$Entry
=== Inputs ===
value: a162 
=== Succesors ===
=== Usages ===
?74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a162  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 13
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
localsSize: 4
locksSize: 0
sourceFile: ClassValue.java
sourceLine: 107
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a45 a102 
=== Succesors ===
=== Usages ===
?64 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a45 a102  <|@  <|@
f <@~|@floating>@ <|@
tid a110 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
op: Uncompress
stamp: a# java.lang.ClassValue$Version
=== Inputs ===
value: a109 
=== Succesors ===
=== Usages ===
?64 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a109  <|@  <|@
tid ?64 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: if_acmpne
code: ResolvedJavaMethodBytecode<ClassValue.match(ClassValue$Entry)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
sourceFile: ClassValue.java
sourceLine: 245
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?74 
values: a106 a110 a1 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?74 values: a106 a110 a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x7916c4c2]: UnreachedCode@6[HotSpotMethod<ClassValue.match(ClassValue$Entry)>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?64 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?64  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 93
mayConvertToGuard: true
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 3]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?6  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a158 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a158  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.lang.ClassValue
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?6 v103 v168 ?64 ?74 v172 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a164 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
localsSize: 4
locksSize: 0
sourceFile: ClassValue.java
sourceLine: 104
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a164 
=== Succesors ===
=== Usages ===
a158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a164  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.Class
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?74 v167 ?6 v103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
result [v1|QWORD[.] + 92] <|@
d <@d|@=== Debug Properties ===
displacement: 92
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a158 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ClassValue$ClassValueMap
barrierType: NONE
deoptReasonAndAction: int[-19723|0xffffffffffffb2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Class.classValueMap
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:191) [bci: 1]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
stamp: n# java.lang.ClassValue$ClassValueMap
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v167 
lastLocationAccess: - 
=== Succesors ===
next: v36 
=== Usages ===
v174 v119 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v167 lastLocationAccess: - #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:192) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a158 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a158  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:192) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
profileData: PROFILED designatedSuccessorProbability: 1.2127634359659911E-4
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
a158 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v35 #falseSuccessor: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:192) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:192) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
rawvalue: ClassValue.Entry[1]{null}
stableDimension: 0
stamp: a!# java.lang.ClassValue$Entry[]
stampKind: a java.lang.Object
value: Object[ClassValue.Entry[1]{null}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:193) [bci: 13]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a159 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a159  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result [v2|DWORD[_] * 8 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a158 
=== Succesors ===
=== Usages ===
a159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a159 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ClassValue$Entry[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ClassValue$ClassValueMap.cacheArray
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.getCache(ClassValue.java:434) [bci: 1]
at java.lang.ClassValue.getCacheCarefully(ClassValue.java:193) [bci: 14]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
stamp: n# java.lang.ClassValue$Entry[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
lastLocationAccess: - 
=== Succesors ===
next: v46 
=== Usages ===
a118 
=== Predecessor ===
v34 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 lastLocationAccess: - #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid a118 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.getCache(ClassValue.java:434) [bci: 1]
at java.lang.ClassValue.getCacheCarefully(ClassValue.java:193) [bci: 14]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
op: Uncompress
stamp: a# java.lang.ClassValue$Entry[]
=== Inputs ===
value: a159 
=== Succesors ===
=== Usages ===
a45 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a159  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
a159 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a45 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# java.lang.ClassValue$Entry[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v43 
values: a37 a118 
=== Succesors ===
=== Usages ===
?6 v170 v169 ?74 v103 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v43 values: a37 a118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v44 v46 
=== Succesors ===
next: i160 
=== Usages ===
a45 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v44 v46 #next: i160  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: dup
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:104) [bci: 1]
sourceFile: ClassValue.java
sourceLine: 104
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a45 a1 a2 
=== Succesors ===
=== Usages ===
v175 i160 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a45 a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
result [v7|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a45 
index: - 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a45 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i160 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-22283|0xffffffffffffa8f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 3]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v169 
lastLocationAccess: - 
=== Succesors ===
next: i161 
=== Usages ===
i50 v92 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v169 lastLocationAccess: - #next: i161  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ClassValue.hashCodeForCache
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 3]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v168 
lastLocationAccess: - 
=== Succesors ===
next: v139 
=== Usages ===
i51 
=== Predecessor ===
i160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v168 lastLocationAccess: - #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i160 
y: i49 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i160 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 6]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: i32
=== Inputs ===
x: i50 
y: i161 
=== Succesors ===
=== Usages ===
j120 v92 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i50 y: i161  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i160 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i160  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v92 
=== Succesors ===
trueSuccessor: v136 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
i161 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v92 #trueSuccessor: v136 #falseSuccessor: v138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a162 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a162  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i51 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i51  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
result [v7|QWORD[.] + v10|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a45 
index: j120 
=== Succesors ===
=== Usages ===
a162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a45 index: j120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a162 <|@
result v11|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ClassValue$Entry
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: n# java.lang.ClassValue$Entry
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
lastLocationAccess: - 
=== Succesors ===
next: v57 
=== Usages ===
a102 v121 v171 v173 
=== Predecessor ===
v136 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v170 lastLocationAccess: - #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:111) [bci: 20]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a162 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a162  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 1]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 1.2727457183173932E-4
stamp: void
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
a162 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v56 #falseSuccessor: v55  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 19]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a29 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a29  <|@  <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
referencedType: [null]
returnStamp: a java.lang.Object
signature: [HotSpotType<Ljava/lang/ClassValue;, resolved>, UnresolvedJavaType<[Ljava/lang/ClassValue$Entry;>, UnresolvedJavaType<Ljava/lang/Class;>]
stamp: void
targetMethod: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)>
=== Inputs ===
arguments: a1 a45 a2 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a45 a2  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
localsSize: 4
locksSize: 0
sourceFile: ClassValue.java
sourceLine: 117
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a29 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
polymorphic: false
stamp: a java.lang.Object
targetMethod: Direct#ClassValue.getFromBackup
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v103 
stateDuring: ?144 
=== Succesors ===
next: v31 
=== Usages ===
v31 
=== Predecessor ===
v56 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v103 stateDuring: ?144 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:117) [bci: 30]
stamp: void
=== Inputs ===
memoryMap: - 
result: a29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a29 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a29  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 4]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a105 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a105  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
result [v11|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a162 
=== Succesors ===
=== Usages ===
a105 v157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a105 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: REFERENCE_GET
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Reference.referent
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:245) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v171 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
a106 v156 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v171 lastLocationAccess: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid a106 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:245) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a105 
=== Succesors ===
=== Usages ===
?64 v157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:245) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
precise: true
stamp: void
=== Inputs ===
address: v171 
value: a106 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
a105 >@ <|@
instruction <@G1ReferentFieldReadBarrier|@jdk.graal.compiler.nodes.gc.G1ReferentFieldReadBarrierNode>@ address: v171 value: a106 #next: v61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
barriersString: 
fence: NONE
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:362) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:245) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a109 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a109  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a109 <|@
result v16|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.ClassValue$Version
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ClassValue.version
memoryOrder: VOLATILE
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: n# java.lang.ClassValue$Version
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v172 
lastLocationAccess: - 
=== Succesors ===
next: v143 
=== Usages ===
a110 v156 
=== Predecessor ===
v61 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v172 lastLocationAccess: - #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a105 
y: a109 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a105 y: a109  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
a109 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 15]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a163 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a163  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
result [v11|DWORD[_] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a162 
=== Succesors ===
=== Usages ===
a163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a163 <|@
result v17|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ClassValue$Entry.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ClassValue$Entry.value(ClassValue.java:339) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:111) [bci: 20]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
lastLocationAccess: - 
=== Succesors ===
next: v27 
=== Usages ===
a114 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v173 lastLocationAccess: - #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid a114 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue$Entry.value(ClassValue.java:339) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:111) [bci: 20]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a163 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a163  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:111) [bci: 23]
stamp: void
=== Inputs ===
memoryMap: - 
result: a114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a163 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid a102 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
op: Uncompress
stamp: a# java.lang.ClassValue$Entry
=== Inputs ===
value: a162 
=== Succesors ===
=== Usages ===
?74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a162  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 13
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
localsSize: 4
locksSize: 0
sourceFile: ClassValue.java
sourceLine: 107
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a45 a102 
=== Succesors ===
=== Usages ===
?64 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a45 a102  <|@  <|@
f <@~|@floating>@ <|@
tid a110 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
op: Uncompress
stamp: a# java.lang.ClassValue$Version
=== Inputs ===
value: a109 
=== Succesors ===
=== Usages ===
?64 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a109  <|@  <|@
tid ?64 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: if_acmpne
code: ResolvedJavaMethodBytecode<ClassValue.match(ClassValue$Entry)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
sourceFile: ClassValue.java
sourceLine: 245
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?74 
values: a106 a110 a1 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?74 values: a106 a110 a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x7916c4c2]: UnreachedCode@6[HotSpotMethod<ClassValue.match(ClassValue$Entry)>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?64 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?64  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 93
mayConvertToGuard: true
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:548) [bci: 3]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:554) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:104) [bci: 7]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  218  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr  238  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  218  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr  238  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v18|q [0, 1[[174, 176[[216, 218[[220, 222[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|q [0, 1[[214, 217[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 26[[212, 217[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[216, 217[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 24[[210, 217[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [24, 146[[178, 210[[224, 263[[264, 297[24 MustHaveRegister 72 MustHaveRegister 142 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [26, 146[[178, 214[[224, 263[[264, 297[26 MustHaveRegister 28 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [28, 46[28 MustHaveRegister 30 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|q [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v5|d [48, 51[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|q [52, 146[[178, 212[[242, 263[[264, 297[68 MustHaveRegister 88 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [68, 74[68 MustHaveRegister 70 ShouldHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v8|d [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v9|d [72, 88[72 MustHaveRegister 74 ShouldHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [88, 170[[264, 288[88 MustHaveRegister 90 MustHaveRegister 136 MustHaveRegister 140 MustHaveRegister 170 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q rax|q [218, 220[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [136, 144[136 MustHaveRegister 138 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v13|d [138, 146[[264, 297[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [140, 141[140 MustHaveRegister  "NoDefinitionFound"
  v16|d DWORD "[v16|d]" v16|d -1 [142, 146[[264, 290[142 MustHaveRegister 144 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v17|d [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v11|d [288, 297[288 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v16|d [290, 297[290 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v18|q [0, 1[[174, 176[[216, 218[[220, 222[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|q [0, 1[[214, 217[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 26[[212, 217[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[216, 217[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 24[[210, 217[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 146[[178, 210[[224, 263[[264, 297[24 MustHaveRegister 72 MustHaveRegister 142 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q rdx|- [26, 146[[178, 214[[224, 263[[264, 297[26 MustHaveRegister 28 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [28, 46[28 MustHaveRegister 30 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q -1 [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q v3|q [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|d [48, 51[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [52, 146[[178, 212[[242, 263[[264, 297[68 MustHaveRegister 88 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d -1 [68, 74[68 MustHaveRegister 70 ShouldHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v9|d [72, 88[72 MustHaveRegister 74 ShouldHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [88, 170[[264, 288[88 MustHaveRegister 90 MustHaveRegister 136 MustHaveRegister 140 MustHaveRegister 170 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [218, 220[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdx|d]" v13|d -1 [136, 144[136 MustHaveRegister 138 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r8|q]" v14|q v13|d [138, 146[[264, 297[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q -1 [140, 141[140 MustHaveRegister  "NoDefinitionFound"
  v16|d DWORD "[r9|d]" v16|d -1 [142, 146[[264, 290[142 MustHaveRegister 144 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q v17|d [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r11|q]" v19|q v11|d [288, 297[288 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r9|q]" v20|q v16|d [290, 297[290 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  218  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr  238  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v18|q [0, 1[[174, 176[[216, 218[[220, 222[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|q [0, 1[[214, 217[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 26[[212, 217[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[216, 217[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 24[[210, 217[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 146[[178, 210[[224, 263[[264, 297[24 MustHaveRegister 72 MustHaveRegister 142 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q rdx|- [26, 146[[178, 214[[224, 263[[264, 297[26 MustHaveRegister 28 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [28, 46[28 MustHaveRegister 30 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q -1 [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q v3|q [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|d [48, 51[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [52, 146[[178, 212[[242, 263[[264, 297[68 MustHaveRegister 88 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d -1 [68, 74[68 MustHaveRegister 70 ShouldHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v9|d [72, 88[72 MustHaveRegister 74 ShouldHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [88, 170[[264, 288[88 MustHaveRegister 90 MustHaveRegister 136 MustHaveRegister 140 MustHaveRegister 170 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [218, 220[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdx|d]" v13|d -1 [136, 144[136 MustHaveRegister 138 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r8|q]" v14|q v13|d [138, 146[[264, 297[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q -1 [140, 141[140 MustHaveRegister  "NoDefinitionFound"
  v16|d DWORD "[r9|d]" v16|d -1 [142, 146[[264, 290[142 MustHaveRegister 144 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q v17|d [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r11|q]" v19|q v11|d [288, 297[288 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r9|q]" v20|q v16|d [290, 297[290 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  218  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr  238  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v18|q [0, 1[[174, 176[[216, 218[[220, 222[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|q [0, 1[[214, 217[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 26[[212, 217[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 20[[216, 217[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 24[[210, 217[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[216, 217[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 146[[178, 210[[224, 263[[264, 297[24 MustHaveRegister 72 MustHaveRegister 142 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q rdx|- [26, 146[[178, 214[[224, 263[[264, 297[26 MustHaveRegister 28 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [28, 46[28 MustHaveRegister 30 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q -1 [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q v3|q [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|d [48, 51[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|q [52, 146[[178, 212[[242, 263[[264, 297[68 MustHaveRegister 88 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdx|d]" v8|d -1 [68, 74[68 MustHaveRegister 70 ShouldHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v9|d [72, 88[72 MustHaveRegister 74 ShouldHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [88, 170[[264, 288[88 MustHaveRegister 90 MustHaveRegister 136 MustHaveRegister 140 MustHaveRegister 170 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [218, 220[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdx|d]" v13|d -1 [136, 144[136 MustHaveRegister 138 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r8|q]" v14|q v13|d [138, 146[[264, 297[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q -1 [140, 141[140 MustHaveRegister  "NoDefinitionFound"
  v16|d DWORD "[r9|d]" v16|d -1 [142, 146[[264, 290[142 MustHaveRegister 144 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q v17|d [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r11|q]" v19|q v11|d [288, 297[288 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r9|q]" v20|q v16|d [290, 297[290 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [v7|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  218  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr  238  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV input: [v7|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction v9|DWORD = DEC value: v8|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction v10|DWORD = AND (x: v9|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v11|DWORD[_] = MOV input: [v7|QWORD[.] + v10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: v11|DWORD[_], y: v11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|DWORD[_] * 8 + 12], ~expectedObject: v14|QWORD[.]) {temp: v15|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction v16|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v16|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v17|DWORD[_] = MOV input: [v11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  174  <|@ instruction rax|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  218  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rax|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr  238  <|@ instruction v4|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: v7|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: v14|QWORD[.] v20|QWORD[.] 
locals: v0|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] v19|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rax:0, rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607181326439825747
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  140  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58 <|@ <|@
      nr  142  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607181272412588858
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4548827626924172580
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:117) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4548577039079546880
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:104) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rax:0, rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.lang.ClassValue.match(ClassValue.java:245) [bci: 12]
stack: r8|QWORD[.] r9|QWORD[.] 
locals: rsi|QWORD[.] - 
java.lang.ClassValue.get(ClassValue.java:107) [bci: 13]
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 13] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokevirtual #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f859c01000090909090909090909048896c24104c8bd2418b425c85c00f84080100009090909090908b04c53800000048c1e003909090909090908b500c8bcaffc9234e0c3bd10f86f50000009090909090448b5c88104585db0f8490000000909090909090909090909090909090909090909090428b14dd0c000000448bc249c1e00341807f40000f84260000004d85c00f841d000000498b4f284883f9000f840c0100004883e90849894f2849034f384c8901448b4e14443bca0f85aa0000009090909090909090909090428b04dd1c00000048c1e003488b6c24104883c418493ba7500400000f87d2000000c3909090909090909090909090909090488bd0498bca6690e8000000000f1f840000000000488b6c24104883c418493ba7500400000f87ab000000c3909090909049bbaddeaddeaddeadde498bc3e9f2feffff9090909090909041c78784040000e5a2ffff49c7879004000000000000e8000000000f1f840000000000909090909090909090909049c1e30349c1e10341c78784040000ed73ffff49c7879004000014000000e8000000000f1f84000000000048896c2410e800000000e955fefffff44c890424e800000000e9f5fefffff4488d0d1affffff49898f68040000e9f8fdfffff4488d0d41ffffff49898f68040000e9e4fdfffff441c78784040000f5b2ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5a8ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD  <||@
  Comment 72 26 r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 75 28 rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0]  <||@
  Comment 75 [rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:104) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |Object[null]  |-  |-   <||@
  Comment 75 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 79 30 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 87 block B2 null  <||@
  Comment 87 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 87 34 NOP  <||@
  Comment 88 36 NOP  <||@
  Comment 89 38 NOP  <||@
  Comment 90 40 NOP  <||@
  Comment 91 42 NOP  <||@
  Comment 92 44 NOP  <||@
  Comment 93 46 rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD  <||@
  Comment 100 48 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3  <||@
  Comment 104 50 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 104 block B3 null  <||@
  Comment 104 52 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 104 54 NOP  <||@
  Comment 105 56 NOP  <||@
  Comment 106 58 NOP  <||@
  Comment 107 60 NOP  <||@
  Comment 108 62 NOP  <||@
  Comment 109 64 NOP  <||@
  Comment 110 66 NOP  <||@
  Comment 111 68 rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4]  <||@
  Comment 111 [rax:0, rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:104) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |              |   |    <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 114 70 rcx|DWORD = DEC value: rdx|DWORD size: DWORD  <||@
  Comment 118 72 rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 121 74 CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD  <||@
  Comment 129 block B4 null  <||@
  Comment 129 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 129 78 NOP  <||@
  Comment 130 80 NOP  <||@
  Comment 131 82 NOP  <||@
  Comment 132 84 NOP  <||@
  Comment 133 86 NOP  <||@
  Comment 134 88 r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 139 90 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 148 block B6 null  <||@
  Comment 148 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 148 94 NOP  <||@
  Comment 149 96 NOP  <||@
  Comment 150 98 NOP  <||@
  Comment 151 100 NOP  <||@
  Comment 152 102 NOP  <||@
  Comment 153 104 NOP  <||@
  Comment 154 106 NOP  <||@
  Comment 155 108 NOP  <||@
  Comment 156 110 NOP  <||@
  Comment 157 112 NOP  <||@
  Comment 158 114 NOP  <||@
  Comment 159 116 NOP  <||@
  Comment 160 118 NOP  <||@
  Comment 161 120 NOP  <||@
  Comment 162 122 NOP  <||@
  Comment 163 124 NOP  <||@
  Comment 164 126 NOP  <||@
  Comment 165 128 NOP  <||@
  Comment 166 130 NOP  <||@
  Comment 167 132 NOP  <||@
  Comment 168 134 NOP  <||@
  Comment 169 136 rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 177 138 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3  <||@
  Comment 184 140 AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58  <||@
  Comment 233 142 r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 237 144 CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 246 block B7 null  <||@
  Comment 246 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 246 148 NOP  <||@
  Comment 247 150 NOP  <||@
  Comment 248 152 NOP  <||@
  Comment 249 154 NOP  <||@
  Comment 250 156 NOP  <||@
  Comment 251 158 NOP  <||@
  Comment 252 160 NOP  <||@
  Comment 253 162 NOP  <||@
  Comment 254 164 NOP  <||@
  Comment 255 166 NOP  <||@
  Comment 256 168 NOP  <||@
  Comment 257 170 rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD  <||@
  Comment 265 172 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3  <||@
  Comment 269 176 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 278 POLL_RETURN_FAR  <||@
  Comment 292 block B5 null  <||@
  Comment 292 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 292 180 NOP  <||@
  Comment 293 182 NOP  <||@
  Comment 294 184 NOP  <||@
  Comment 295 186 NOP  <||@
  Comment 296 188 NOP  <||@
  Comment 297 190 NOP  <||@
  Comment 298 192 NOP  <||@
  Comment 299 194 NOP  <||@
  Comment 300 196 NOP  <||@
  Comment 301 198 NOP  <||@
  Comment 302 200 NOP  <||@
  Comment 303 202 NOP  <||@
  Comment 304 204 NOP  <||@
  Comment 305 206 NOP  <||@
  Comment 306 208 NOP  <||@
  Comment 307 212 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 310 214 rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 313 216 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27]  <||@
  Comment 315 {HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)>}  <||@
  Comment 315 INVOKESPECIAL  <||@
  Comment 320 []at java.lang.ClassValue.get(ClassValue.java:117) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 328 222 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 337 POLL_RETURN_FAR  <||@
  Comment 351 block B1 null  <||@
  Comment 351 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 226 NOP  <||@
  Comment 352 228 NOP  <||@
  Comment 353 230 NOP  <||@
  Comment 354 232 NOP  <||@
  Comment 355 234 NOP  <||@
  Comment 356 236 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}]  <||@
  Comment 356 {Object[ClassValue.Entry[1]{null}]}  <||@
  Comment 366 -1 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 369 240 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 374 block B9 null  <||@
  Comment 374 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 374 244 NOP  <||@
  Comment 375 246 NOP  <||@
  Comment 376 248 NOP  <||@
  Comment 377 250 NOP  <||@
  Comment 378 252 NOP  <||@
  Comment 379 254 NOP  <||@
  Comment 380 256 NOP  <||@
  Comment 381 258 MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD  <||@
  Comment 392 260 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 403 262 DEOPT info [bci:4]  <||@
  Comment 403 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 408 [rax:0, rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:104) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |              |   |    <||@
  Comment 416 block B8 null  <||@
  Comment 416 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 416 266 NOP  <||@
  Comment 417 268 NOP  <||@
  Comment 418 270 NOP  <||@
  Comment 419 272 NOP  <||@
  Comment 420 274 NOP  <||@
  Comment 421 276 NOP  <||@
  Comment 422 278 NOP  <||@
  Comment 423 280 NOP  <||@
  Comment 424 282 NOP  <||@
  Comment 425 284 NOP  <||@
  Comment 426 286 NOP  <||@
  Comment 427 288 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3  <||@
  Comment 431 290 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3  <||@
  Comment 435 292 MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD  <||@
  Comment 446 294 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 457 296 DEOPT info [bci:12, 13]  <||@
  Comment 457 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 462 [rax:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at java.lang.ClassValue.match(ClassValue.java:245) [bci: 12, duringCall: false, rethrow: false]
              |0             |1           
     locals:  |rsi|QWORD[.]  |-           
     stack:   |r8|QWORD[.]   |r9|QWORD[.] 
  at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rax|QWORD[.]  |r11|QWORD[.]   <||@
  Comment 475 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 490 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 515 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 535 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 563 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 568 [rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:104) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |Object[null]  |-  |-   <||@
  Comment 598 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 603 [rax:0, rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:104) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |              |   |    <||@
  Comment 611 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 611 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 617 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 617 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7555[java.lang.ClassValue.get(Class)]"
  method "HotSpotCompilation-7555[java.lang.ClassValue.get(Class)]"
  date 1724269754315
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aef7f20 448b560849bc0000002b787f00004d03d44d33e4493bc20f8543d188fe66669089842400c0feff4883ec189041817f20030000000f859c01000090909090909090909048896c24104c8bd2418b425c85c00f84080100009090909090908b04c53800000048c1e003909090909090908b500c8bcaffc9234e0c3bd10f86f50000009090909090448b5c88104585db0f8490000000909090909090909090909090909090909090909090428b14dd0c000000448bc249c1e00341807f40000f84260000004d85c00f841d000000498b4f284883f9000f840c0100004883e90849894f2849034f384c8901448b4e14443bca0f85aa0000009090909090909090909090428b04dd1c00000048c1e003488b6c24104883c418493ba7500400000f87d2000000c3909090909090909090909090909090488bd0498bca6690e820d388fe0f1f8400d0020002488b6c24104883c418493ba7500400000f87ab000000c3909090909049bb9877e42d06000000498bc3e9f2feffff9090909090909041c78784040000e5a2ffff49c7879004000000000000e8c23089fe0f1f840000000000909090909090909090909049c1e30349c1e10341c78784040000ed73ffff49c7879004000014000000e88c3089fe0f1f84000000000048896c2410e8203187fee955fefffff44c890424e8f1009dfee9f5fefffff4488d0d1affffff49898f68040000e9d83e89fef4488d0d41ffffff49898f68040000e9c43e89fef441c78784040000f5b2ffff49c7879004000000000000e8223089fe0f1f84000000000041c78784040000f5a8ffff49c7879004000000000000e8ff2f89fe0f1f840000000000e878d19cfef4e8922d89fef4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@a87e29c slotKind: QWORD  <||@
  Comment 72 26 r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 75 28 rax|DWORD[_] = MOV input: [r10|QWORD[.] + 92] size: DWORD state [bci:0]  <||@
  Comment 75 [rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:104) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |Object[null]  |-  |-   <||@
  Comment 75 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 79 30 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.2127634359659911E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 87 block B2 null  <||@
  Comment 87 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 87 34 NOP  <||@
  Comment 88 36 NOP  <||@
  Comment 89 38 NOP  <||@
  Comment 90 40 NOP  <||@
  Comment 91 42 NOP  <||@
  Comment 92 44 NOP  <||@
  Comment 93 46 rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 56] size: DWORD  <||@
  Comment 100 48 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3  <||@
  Comment 104 50 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 104 block B3 null  <||@
  Comment 104 52 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 104 54 NOP  <||@
  Comment 105 56 NOP  <||@
  Comment 106 58 NOP  <||@
  Comment 107 60 NOP  <||@
  Comment 108 62 NOP  <||@
  Comment 109 64 NOP  <||@
  Comment 110 66 NOP  <||@
  Comment 111 68 rdx|DWORD = MOV input: [rax|QWORD[.] + 12] size: DWORD state [bci:4]  <||@
  Comment 111 [rax:0, rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:104) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |              |   |    <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 114 70 rcx|DWORD = DEC value: rdx|DWORD size: DWORD  <||@
  Comment 118 72 rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 121 74 CMPBRANCH (x: rdx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD  <||@
  Comment 129 block B4 null  <||@
  Comment 129 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 129 78 NOP  <||@
  Comment 130 80 NOP  <||@
  Comment 131 82 NOP  <||@
  Comment 132 84 NOP  <||@
  Comment 133 86 NOP  <||@
  Comment 134 88 r11|DWORD[_] = MOV input: [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 139 90 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 1.2727457183173932E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 148 block B6 null  <||@
  Comment 148 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 148 94 NOP  <||@
  Comment 149 96 NOP  <||@
  Comment 150 98 NOP  <||@
  Comment 151 100 NOP  <||@
  Comment 152 102 NOP  <||@
  Comment 153 104 NOP  <||@
  Comment 154 106 NOP  <||@
  Comment 155 108 NOP  <||@
  Comment 156 110 NOP  <||@
  Comment 157 112 NOP  <||@
  Comment 158 114 NOP  <||@
  Comment 159 116 NOP  <||@
  Comment 160 118 NOP  <||@
  Comment 161 120 NOP  <||@
  Comment 162 122 NOP  <||@
  Comment 163 124 NOP  <||@
  Comment 164 126 NOP  <||@
  Comment 165 128 NOP  <||@
  Comment 166 130 NOP  <||@
  Comment 167 132 NOP  <||@
  Comment 168 134 NOP  <||@
  Comment 169 136 rdx|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 177 138 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3  <||@
  Comment 184 140 AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: r8|QWORD[.]) {temp: rcx|QWORD, temp2: -, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2bef3d58  <||@
  Comment 233 142 r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 237 144 CMPBRANCH (x: r9|DWORD[_], y: rdx|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 246 block B7 null  <||@
  Comment 246 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 246 148 NOP  <||@
  Comment 247 150 NOP  <||@
  Comment 248 152 NOP  <||@
  Comment 249 154 NOP  <||@
  Comment 250 156 NOP  <||@
  Comment 251 158 NOP  <||@
  Comment 252 160 NOP  <||@
  Comment 253 162 NOP  <||@
  Comment 254 164 NOP  <||@
  Comment 255 166 NOP  <||@
  Comment 256 168 NOP  <||@
  Comment 257 170 rax|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 28] size: DWORD  <||@
  Comment 265 172 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3  <||@
  Comment 269 176 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 278 POLL_RETURN_FAR  <||@
  Comment 292 block B5 null  <||@
  Comment 292 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 292 180 NOP  <||@
  Comment 293 182 NOP  <||@
  Comment 294 184 NOP  <||@
  Comment 295 186 NOP  <||@
  Comment 296 188 NOP  <||@
  Comment 297 190 NOP  <||@
  Comment 298 192 NOP  <||@
  Comment 299 194 NOP  <||@
  Comment 300 196 NOP  <||@
  Comment 301 198 NOP  <||@
  Comment 302 200 NOP  <||@
  Comment 303 202 NOP  <||@
  Comment 304 204 NOP  <||@
  Comment 305 206 NOP  <||@
  Comment 306 208 NOP  <||@
  Comment 307 212 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 310 214 rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 313 216 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:27]  <||@
  Comment 315 {HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)>}  <||@
  Comment 315 INVOKESPECIAL  <||@
  Comment 320 []at java.lang.ClassValue.get(ClassValue.java:117) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 328 222 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 337 POLL_RETURN_FAR  <||@
  Comment 351 block B1 null  <||@
  Comment 351 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 226 NOP  <||@
  Comment 352 228 NOP  <||@
  Comment 353 230 NOP  <||@
  Comment 354 232 NOP  <||@
  Comment 355 234 NOP  <||@
  Comment 356 236 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}]  <||@
  Comment 356 {Object[ClassValue.Entry[1]{null}]}  <||@
  Comment 366 -1 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 369 240 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 374 block B9 null  <||@
  Comment 374 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 374 244 NOP  <||@
  Comment 375 246 NOP  <||@
  Comment 376 248 NOP  <||@
  Comment 377 250 NOP  <||@
  Comment 378 252 NOP  <||@
  Comment 379 254 NOP  <||@
  Comment 380 256 NOP  <||@
  Comment 381 258 MOV x: [r15|QWORD + 1156] y: -23835 size: DWORD  <||@
  Comment 392 260 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 403 262 DEOPT info [bci:4]  <||@
  Comment 403 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 408 [rax:0, rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:104) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |              |   |    <||@
  Comment 416 block B8 null  <||@
  Comment 416 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 416 266 NOP  <||@
  Comment 417 268 NOP  <||@
  Comment 418 270 NOP  <||@
  Comment 419 272 NOP  <||@
  Comment 420 274 NOP  <||@
  Comment 421 276 NOP  <||@
  Comment 422 278 NOP  <||@
  Comment 423 280 NOP  <||@
  Comment 424 282 NOP  <||@
  Comment 425 284 NOP  <||@
  Comment 426 286 NOP  <||@
  Comment 427 288 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3  <||@
  Comment 431 290 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18b3efee encoding: base: 0 shift: 3  <||@
  Comment 435 292 MOV x: [r15|QWORD + 1156] y: -35859 size: DWORD  <||@
  Comment 446 294 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 457 296 DEOPT info [bci:12, 13]  <||@
  Comment 457 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 462 [rax:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at java.lang.ClassValue.match(ClassValue.java:245) [bci: 12, duringCall: false, rethrow: false]
              |0             |1           
     locals:  |rsi|QWORD[.]  |-           
     stack:   |r8|QWORD[.]   |r9|QWORD[.] 
  at java.lang.ClassValue.get(ClassValue.java:107) [bci: 13, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rax|QWORD[.]  |r11|QWORD[.]   <||@
  Comment 475 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 490 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 515 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 535 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 563 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 568 [rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:104) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |Object[null]  |-  |-   <||@
  Comment 598 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 603 [rax:0, rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:104) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |              |   |    <||@
  Comment 611 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 611 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 617 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 617 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
