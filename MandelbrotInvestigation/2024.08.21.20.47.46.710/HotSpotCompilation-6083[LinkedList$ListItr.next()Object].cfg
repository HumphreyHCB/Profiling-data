begin_compilation
  name " HotSpotCompilation-6083[java.util.LinkedList$ListItr.next()]"
  method "HotSpotCompilation-6083[java.util.LinkedList$ListItr.next()]"
  date 1724269747736
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a120 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a120  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.LinkedList$ListItr
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v128 v130 v131 v134 v133 v116 v119 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a120 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$ListItr.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 1]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: n# java.util.LinkedList
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v128 
lastLocationAccess: - 
=== Succesors ===
next: i121 
=== Usages ===
v132 v129 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v128 lastLocationAccess: - #next: i121  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.next()>
localsSize: 1
locksSize: 0
sourceFile: LinkedList.java
sourceLine: 899
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v107 i121 a124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a120 
=== Succesors ===
=== Usages ===
i121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i121 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-11531|0xffffffffffffd2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v129 
lastLocationAccess: - 
=== Succesors ===
next: i122 
=== Usages ===
v30 
=== Predecessor ===
a120 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v129 lastLocationAccess: - #next: i122  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a120 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:895) [bci: 8]
at java.util.LinkedList$ListItr.next(LinkedList.java:900) [bci: 5]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
lastLocationAccess: - 
=== Succesors ===
next: a123 
=== Usages ===
v36 
=== Predecessor ===
i121 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 lastLocationAccess: - #next: a123  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a123 v72 v117 v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$ListItr.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 21]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
lastLocationAccess: - 
=== Succesors ===
next: a124 
=== Usages ===
a60 v64 v135 v136 
=== Predecessor ===
i122 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v133 lastLocationAccess: - #next: a124  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
a124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a124 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: int[-16907|0xffffffffffffbdf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:904) [bci: 32]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v135 
lastLocationAccess: - 
=== Succesors ===
next: a125 
=== Usages ===
v72 a118 
=== Predecessor ===
a123 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v135 lastLocationAccess: - #next: a125  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$Node.item
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:906) [bci: 52]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
lastLocationAccess: - 
=== Succesors ===
next: i126 
=== Usages ===
a76 
=== Predecessor ===
a124 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 lastLocationAccess: - #next: i126  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$ListItr.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 8]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v130 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
v30 
=== Predecessor ===
a125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v130 lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i121 
y: i126 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i121 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i126 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v94 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:978) [bci: 22]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i127 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i127  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i127 v73 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$ListItr.nextIndex
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:895) [bci: 1]
at java.util.LinkedList$ListItr.next(LinkedList.java:900) [bci: 5]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v131 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
v36 i21 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v131 lastLocationAccess: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:895) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:900) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i122 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i127 y: i122  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:900) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
i127 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v64 v115 v116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 24]
precise: true
stamp: void
=== Inputs ===
address: v134 
value: - 
stateBefore: - 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v134 value: - stateBefore: - #next: v64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.lastReturned
location: LinkedList$ListItr.lastReturned
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 24]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
lastLocationAccess: - 
value: a123 
stateAfter: - 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v134 lastLocationAccess: - value: a123 stateAfter: - #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 21]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a123 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 24]
precise: false
stamp: void
=== Inputs ===
address: v134 
value: a60 
object: a1 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v134 value: a60 object: a1 #next: v117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:904) [bci: 35]
precise: true
stamp: void
=== Inputs ===
address: v133 
value: - 
stateBefore: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v133 value: - stateBefore: - #next: v72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.next
location: LinkedList$ListItr.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:904) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
lastLocationAccess: - 
value: a124 
stateAfter: - 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v133 lastLocationAccess: - value: a124 stateAfter: - #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid a118 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:904) [bci: 35]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a124 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:904) [bci: 35]
precise: false
stamp: void
=== Inputs ===
address: v133 
value: a118 
object: a1 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v133 value: a118 object: a1 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:905) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:905) [bci: 44]
stamp: i32
=== Inputs ===
x: i127 
y: i20 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i127 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.nextIndex
location: LinkedList$ListItr.nextIndex
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:905) [bci: 45]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v131 
lastLocationAccess: - 
value: i21 
stateAfter: - 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v131 lastLocationAccess: - value: i21 stateAfter: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:906) [bci: 52]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a125 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a125  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:906) [bci: 55]
stamp: void
=== Inputs ===
memoryMap: - 
result: a76 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:900) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid j62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 24]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
rawvalue: -24851
stableDimension: 0
stamp: i32 [-24851]
stampKind: i32
value: int[-24851|0xffffffffffff9eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
rawvalue: -23827
stableDimension: 0
stamp: i32 [-23827]
stampKind: i32
value: int[-23827|0xffffffffffffa2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: i32 [-24851 - -23827] bits:1...10xxxx1011101101
valueDescription: i32
=== Inputs ===
merge: v101 
values: i111 i114 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v101 values: i111 i114  <|@  <|@
f <@~|@floating>@ <|@
tid j106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v101 
values: j112 j62 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v101 values: j112 j62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v110 v113 
=== Succesors ===
next: v107 
=== Usages ===
i105 j106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v110 v113 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i105 
speculation: j106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i105 speculation: j106  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[660|0x294]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a120 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a120  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.LinkedList$ListItr
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v128 v130 v131 v134 v133 v116 v119 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a120 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$ListItr.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 1]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: n# java.util.LinkedList
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v128 
lastLocationAccess: - 
=== Succesors ===
next: i121 
=== Usages ===
v132 v129 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v128 lastLocationAccess: - #next: i121  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.next()>
localsSize: 1
locksSize: 0
sourceFile: LinkedList.java
sourceLine: 899
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v107 i121 a124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
result [v1|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a120 
=== Succesors ===
=== Usages ===
i121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i121 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-11531|0xffffffffffffd2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v129 
lastLocationAccess: - 
=== Succesors ===
next: i122 
=== Usages ===
v30 
=== Predecessor ===
a120 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v129 lastLocationAccess: - #next: i122  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
result [v1|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a120 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i122 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:895) [bci: 8]
at java.util.LinkedList$ListItr.next(LinkedList.java:900) [bci: 5]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
lastLocationAccess: - 
=== Succesors ===
next: a123 
=== Usages ===
v36 
=== Predecessor ===
i121 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 lastLocationAccess: - #next: a123  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a123 v72 v117 v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$ListItr.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 21]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
lastLocationAccess: - 
=== Succesors ===
next: a124 
=== Usages ===
a60 v64 v135 v136 
=== Predecessor ===
i122 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v133 lastLocationAccess: - #next: a124  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
result [v4|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
a124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a124 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: int[-16907|0xffffffffffffbdf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:904) [bci: 32]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v135 
lastLocationAccess: - 
=== Succesors ===
next: a125 
=== Usages ===
v72 a118 
=== Predecessor ===
a123 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v135 lastLocationAccess: - #next: a125  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
result [v4|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a123 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$Node.item
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:906) [bci: 52]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
lastLocationAccess: - 
=== Succesors ===
next: i126 
=== Usages ===
a76 
=== Predecessor ===
a124 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 lastLocationAccess: - #next: i126  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$ListItr.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 8]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v130 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
v30 
=== Predecessor ===
a125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v130 lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i121 
y: i126 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i121 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i126 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v94 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:978) [bci: 22]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i127 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i127  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i127 v73 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i127 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList$ListItr.nextIndex
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:895) [bci: 1]
at java.util.LinkedList$ListItr.next(LinkedList.java:900) [bci: 5]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v131 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
v36 i21 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v131 lastLocationAccess: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList$ListItr.hasNext(LinkedList.java:895) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:900) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i122 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i127 y: i122  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:900) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
i127 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v64 v115 v116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 24]
precise: true
stamp: void
=== Inputs ===
address: v134 
value: - 
stateBefore: - 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v134 value: - stateBefore: - #next: v64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.lastReturned
location: LinkedList$ListItr.lastReturned
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 24]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
lastLocationAccess: - 
value: a123 
stateAfter: - 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v134 lastLocationAccess: - value: a123 stateAfter: - #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 21]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a123 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 24]
precise: false
stamp: void
=== Inputs ===
address: v134 
value: a60 
object: a1 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v134 value: a60 object: a1 #next: v117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:904) [bci: 35]
precise: true
stamp: void
=== Inputs ===
address: v133 
value: - 
stateBefore: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v133 value: - stateBefore: - #next: v72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.next
location: LinkedList$ListItr.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:904) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
lastLocationAccess: - 
value: a124 
stateAfter: - 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v133 lastLocationAccess: - value: a124 stateAfter: - #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid a118 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:904) [bci: 35]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a124 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:904) [bci: 35]
precise: false
stamp: void
=== Inputs ===
address: v133 
value: a118 
object: a1 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v133 value: a118 object: a1 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:905) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:905) [bci: 44]
stamp: i32
=== Inputs ===
x: i127 
y: i20 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i127 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.nextIndex
location: LinkedList$ListItr.nextIndex
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:905) [bci: 45]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v131 
lastLocationAccess: - 
value: i21 
stateAfter: - 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v131 lastLocationAccess: - value: i21 stateAfter: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:906) [bci: 52]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a125 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a125  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:906) [bci: 55]
stamp: void
=== Inputs ===
memoryMap: - 
result: a76 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:900) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid j62 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.next(LinkedList.java:903) [bci: 24]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result int[-24851|0xffffffffffff9eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
rawvalue: -24851
stableDimension: 0
stamp: i32 [-24851]
stampKind: i32
value: int[-24851|0xffffffffffff9eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 11]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result int[-23827|0xffffffffffffa2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
rawvalue: -23827
stableDimension: 0
stamp: i32 [-23827]
stampKind: i32
value: int[-23827|0xffffffffffffa2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[660|0x294]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i105 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: i32 [-24851 - -23827] bits:1...10xxxx1011101101
valueDescription: i32
=== Inputs ===
merge: v101 
values: i111 i114 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v101 values: i111 i114  <|@  <|@
f <@~|@floating>@ <|@
tid j106 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v101 
values: j112 j62 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v101 values: j112 j62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v110 v113 
=== Succesors ===
next: v107 
=== Usages ===
i105 j106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v110 v113 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:976) [bci: 4]
at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i105 
speculation: j106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i105 speculation: j106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[660|0x294]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[660|0x294]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[660|0x294]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[660|0x294]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[660|0x294]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[660|0x294]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[660|0x294]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v19|q [0, 1[[328, 330[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [32, 324[[332, 373[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister 46 MustHaveRegister 60 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [34, 38[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [36, 46[36 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [38, 62[38 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [40, 310[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [42, 318[42 MustHaveRegister 316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [44, 326[44 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [60, 322[60 MustHaveRegister 62 ShouldHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [306, 307[306 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[v9|q]" v9|q -1 [306, 307[306 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[v10|q]" v10|q v4|d [310, 313[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [312, 313[312 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[v12|q]" v12|q -1 [312, 313[312 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[v13|q]" v13|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v14|q QWORD "[v14|q]" v14|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[v15|q]" v15|q v5|d [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[v17|q]" v17|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[v18|d]" v18|d v7|d [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v6|d [326, 328[326 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [352, 368[368 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [352, 370[370 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v19|q [0, 1[[328, 330[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 324[[332, 373[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister 46 MustHaveRegister 60 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [34, 38[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [36, 46[36 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [38, 62[38 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [40, 310[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [42, 318[42 MustHaveRegister 316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [44, 326[44 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [60, 322[60 MustHaveRegister 62 ShouldHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [306, 307[306 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[rcx|q]" v9|q -1 [306, 307[306 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[r11|q]" v10|q v4|d [310, 313[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [312, 313[312 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[rcx|q]" v12|q -1 [312, 313[312 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[rax|q]" v13|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v14|q QWORD "[r11|q]" v14|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[r8|q]" v15|q v5|d [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r11|q]" v17|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[r10|d]" v18|d v7|d [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r9|q]" v19|q v6|d [326, 328[326 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r10|d]" v20|d -1 [352, 368[368 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r11|q]" v21|q -1 [352, 370[370 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[660|0x294]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v19|q [0, 1[[328, 330[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 324[[332, 373[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister 46 MustHaveRegister 60 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [34, 38[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [36, 46[36 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [38, 62[38 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [40, 310[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [42, 318[42 MustHaveRegister 316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [44, 326[44 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [60, 322[60 MustHaveRegister 62 ShouldHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [306, 307[306 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[rcx|q]" v9|q -1 [306, 307[306 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[r11|q]" v10|q v4|d [310, 313[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [312, 313[312 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[rcx|q]" v12|q -1 [312, 313[312 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[rax|q]" v13|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v14|q QWORD "[r11|q]" v14|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[r8|q]" v15|q v5|d [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r11|q]" v17|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[r10|d]" v18|d v7|d [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r9|q]" v19|q v6|d [326, 328[326 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r10|d]" v20|d -1 [352, 368[368 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r11|q]" v21|q -1 [352, 370[370 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[660|0x294]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v19|q [0, 1[[328, 330[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 324[[332, 373[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister 46 MustHaveRegister 60 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [34, 38[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [36, 46[36 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [38, 62[38 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [40, 310[40 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [42, 318[42 MustHaveRegister 316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [44, 326[44 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [60, 322[60 MustHaveRegister 62 ShouldHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q -1 [306, 307[306 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[rcx|q]" v9|q -1 [306, 307[306 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[r11|q]" v10|q v4|d [310, 313[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [312, 313[312 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[rcx|q]" v12|q -1 [312, 313[312 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[rax|q]" v13|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v14|q QWORD "[r11|q]" v14|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[r8|q]" v15|q v5|d [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r11|q]" v17|q -1 [320, 321[320 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[r10|d]" v18|d v7|d [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r9|q]" v19|q v6|d [326, 328[326 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r10|d]" v20|d -1 [352, 368[368 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r11|q]" v21|q -1 [352, 370[370 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [v20|DWORD, v21|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v6|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v10|QWORD[.]) {temp: v11|QWORD, temp2: v12|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v13|QWORD, temp2: v14|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v15|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction v18|DWORD = INC value: v7|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v20|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v21|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rsi:0, r11:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rsi:0, r11:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  314  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  318  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0 <|@ <|@
      nr  322  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: invokevirtual #9          // hasNext:()boolean
     8: ifne          19
    11: new           #43         // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: aload_0       
    21: getfield      #6          // next:java.util.LinkedList$Node
    24: putfield      #11         // lastReturned:java.util.LinkedList$Node
    27: aload_0       
    28: aload_0       
    29: getfield      #6          // next:java.util.LinkedList$Node
    32: getfield      #12         // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    35: putfield      #6          // next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #7          // nextIndex:int
    43: iconst_1      
    44: iadd          
    45: putfield      #7          // nextIndex:int
    48: aload_0       
    49: getfield      #11         // lastReturned:java.util.LinkedList$Node
    52: getfield      #13         // java.util.LinkedList$Node.item:java.lang.Object
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f856c0200009090909090909090909090909048896c24108b461c448b14c50c0000008b04c510000000448b5e18468b04dd10000000468b0cdd0c000000443b56100f85e60100009090909090448b560c413bc20f8e0602000090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842d0000008b4e1448c1e1034885c90f841d000000498b47284883f8000f84870100004883e808498947284903473848890844895e1449c1e303488bc64933c348c1e8160f844b0000004d85db0f8442000000488bc648c1e80948b900e0368d787f00004803c18038027429f083042400803800741fc60000498b4f484885c90f84330100004883e90849894f4849034f5848890141807f40000f842e000000448b5e1849c1e3034d85db0f841d000000498b47284883f8000f84090100004883e80849894728490347384c89184489461849c1e003488bc64933c048c1e8160f844b0000004d85c00f8442000000488bc648c1e80949bb00e0368d787f00004903c38038027429f083042400803800741fc600004d8b5f484d85db0f84b50000004983eb084d895f484d035f5849890341ffc24489560c49c1e103498bc1488b6c24104883c418493ba7500400000f8791000000c390909049c7c39402000041baeda2ffff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c31400000041baed9effffebcc48896c2410e800000000e985fdfffff448890c24e800000000e97afefffff448890424e800000000e9cefefffff44c891c24e800000000e9f8fefffff448890424e800000000e94cfffffff4488d0d5bffffff49898f68040000e9fbfcfffff441c78784040000f5d2ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5bdffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD  <||@
  Comment 76 34 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 79 36 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rax:0, rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 38 rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 94 40 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 98 42 r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 98 [rsi:0, r11:0]at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 98 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 106 44 r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 114 46 CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD  <||@
  Comment 124 block B1 null  <||@
  Comment 124 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 124 50 NOP  <||@
  Comment 125 52 NOP  <||@
  Comment 126 54 NOP  <||@
  Comment 127 56 NOP  <||@
  Comment 128 58 NOP  <||@
  Comment 129 60 r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 133 62 CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 142 block B2 null  <||@
  Comment 142 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 66 NOP  <||@
  Comment 143 68 NOP  <||@
  Comment 144 70 NOP  <||@
  Comment 145 72 NOP  <||@
  Comment 146 74 NOP  <||@
  Comment 147 76 NOP  <||@
  Comment 148 78 NOP  <||@
  Comment 149 80 NOP  <||@
  Comment 150 82 NOP  <||@
  Comment 151 84 NOP  <||@
  Comment 152 86 NOP  <||@
  Comment 153 88 NOP  <||@
  Comment 154 90 NOP  <||@
  Comment 155 92 NOP  <||@
  Comment 156 94 NOP  <||@
  Comment 157 96 NOP  <||@
  Comment 158 98 NOP  <||@
  Comment 159 100 NOP  <||@
  Comment 160 102 NOP  <||@
  Comment 161 104 NOP  <||@
  Comment 162 106 NOP  <||@
  Comment 163 108 NOP  <||@
  Comment 164 110 NOP  <||@
  Comment 165 112 NOP  <||@
  Comment 166 114 NOP  <||@
  Comment 167 116 NOP  <||@
  Comment 168 118 NOP  <||@
  Comment 169 120 NOP  <||@
  Comment 170 122 NOP  <||@
  Comment 171 124 NOP  <||@
  Comment 172 126 NOP  <||@
  Comment 173 128 NOP  <||@
  Comment 174 130 NOP  <||@
  Comment 175 132 NOP  <||@
  Comment 176 134 NOP  <||@
  Comment 177 136 NOP  <||@
  Comment 178 138 NOP  <||@
  Comment 179 140 NOP  <||@
  Comment 180 142 NOP  <||@
  Comment 181 144 NOP  <||@
  Comment 182 146 NOP  <||@
  Comment 183 148 NOP  <||@
  Comment 184 150 NOP  <||@
  Comment 185 152 NOP  <||@
  Comment 186 154 NOP  <||@
  Comment 187 156 NOP  <||@
  Comment 188 158 NOP  <||@
  Comment 189 160 NOP  <||@
  Comment 190 162 NOP  <||@
  Comment 191 164 NOP  <||@
  Comment 192 166 NOP  <||@
  Comment 193 168 NOP  <||@
  Comment 194 170 NOP  <||@
  Comment 195 172 NOP  <||@
  Comment 196 174 NOP  <||@
  Comment 197 176 NOP  <||@
  Comment 198 178 NOP  <||@
  Comment 199 180 NOP  <||@
  Comment 200 182 NOP  <||@
  Comment 201 184 NOP  <||@
  Comment 202 186 NOP  <||@
  Comment 203 188 NOP  <||@
  Comment 204 190 NOP  <||@
  Comment 205 192 NOP  <||@
  Comment 206 194 NOP  <||@
  Comment 207 196 NOP  <||@
  Comment 208 198 NOP  <||@
  Comment 209 200 NOP  <||@
  Comment 210 202 NOP  <||@
  Comment 211 204 NOP  <||@
  Comment 212 206 NOP  <||@
  Comment 213 208 NOP  <||@
  Comment 214 210 NOP  <||@
  Comment 215 212 NOP  <||@
  Comment 216 214 NOP  <||@
  Comment 217 216 NOP  <||@
  Comment 218 218 NOP  <||@
  Comment 219 220 NOP  <||@
  Comment 220 222 NOP  <||@
  Comment 221 224 NOP  <||@
  Comment 222 226 NOP  <||@
  Comment 223 228 NOP  <||@
  Comment 224 230 NOP  <||@
  Comment 225 232 NOP  <||@
  Comment 226 234 NOP  <||@
  Comment 227 236 NOP  <||@
  Comment 228 238 NOP  <||@
  Comment 229 240 NOP  <||@
  Comment 230 242 NOP  <||@
  Comment 231 244 NOP  <||@
  Comment 232 246 NOP  <||@
  Comment 233 248 NOP  <||@
  Comment 234 250 NOP  <||@
  Comment 235 252 NOP  <||@
  Comment 236 254 NOP  <||@
  Comment 237 256 NOP  <||@
  Comment 238 258 NOP  <||@
  Comment 239 260 NOP  <||@
  Comment 240 262 NOP  <||@
  Comment 241 264 NOP  <||@
  Comment 242 266 NOP  <||@
  Comment 243 268 NOP  <||@
  Comment 244 270 NOP  <||@
  Comment 245 272 NOP  <||@
  Comment 246 274 NOP  <||@
  Comment 247 276 NOP  <||@
  Comment 248 278 NOP  <||@
  Comment 249 280 NOP  <||@
  Comment 250 282 NOP  <||@
  Comment 251 284 NOP  <||@
  Comment 252 286 NOP  <||@
  Comment 253 288 NOP  <||@
  Comment 254 290 NOP  <||@
  Comment 255 292 NOP  <||@
  Comment 256 294 NOP  <||@
  Comment 257 296 NOP  <||@
  Comment 258 298 NOP  <||@
  Comment 259 300 NOP  <||@
  Comment 260 302 NOP  <||@
  Comment 261 304 NOP  <||@
  Comment 262 306 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0  <||@
  Comment 318 308 MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 322 310 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3  <||@
  Comment 326 312 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0  <||@
  Comment 417 314 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0  <||@
  Comment 474 316 MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 478 318 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3  <||@
  Comment 482 320 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0  <||@
  Comment 573 322 r10|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 576 324 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 580 326 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3  <||@
  Comment 584 328 rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 587 330 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 596 POLL_RETURN_FAR  <||@
  Comment 610 block B4 null  <||@
  Comment 610 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 334 NOP  <||@
  Comment 611 336 NOP  <||@
  Comment 612 338 NOP  <||@
  Comment 613 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 620 -1 r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed]  <||@
  Comment 626 340 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 626 block B5 null  <||@
  Comment 626 352 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 626 354 NOP  <||@
  Comment 627 356 NOP  <||@
  Comment 628 358 NOP  <||@
  Comment 629 360 NOP  <||@
  Comment 630 362 NOP  <||@
  Comment 631 364 NOP  <||@
  Comment 632 366 NOP  <||@
  Comment 633 368 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 640 370 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 647 372 DEOPT info [bci:0]  <||@
  Comment 647 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 652 [rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 660 block B3 null  <||@
  Comment 660 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 660 344 NOP  <||@
  Comment 661 346 NOP  <||@
  Comment 662 348 NOP  <||@
  Comment 663 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 670 -1 r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed]  <||@
  Comment 676 350 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 683 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 698 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 713 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 728 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 743 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 768 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 796 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 801 [rax:0, rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 831 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 836 [rsi:0, r11:0]at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 844 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 844 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 850 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 850 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6083[java.util.LinkedList$ListItr.next()]"
  method "HotSpotCompilation-6083[java.util.LinkedList$ListItr.next()]"
  date 1724269747850
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ae845a0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c30a90fe66669089842400c0feff4883ec189041817f20000000000f856c0200009090909090909090909090909048896c24108b461c448b14c50c0000008b04c510000000448b5e18468b04dd10000000468b0cdd0c000000443b56100f85e60100009090909090448b560c413bc20f8e0602000090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842d0000008b4e1448c1e1034885c90f841d000000498b47284883f8000f84870100004883e808498947284903473848890844895e1449c1e303488bc64933c348c1e8160f844b0000004d85db0f8442000000488bc648c1e80948b900e0368d787f00004803c18038027429f083042400803800741fc60000498b4f484885c90f84330100004883e90849894f4849034f5848890141807f40000f842e000000448b5e1849c1e3034d85db0f841d000000498b47284883f8000f84090100004883e80849894728490347384c89184489461849c1e003488bc64933c048c1e8160f844b0000004d85c00f8442000000488bc648c1e80949bb00e0368d787f00004903c38038027429f083042400803800741fc600004d8b5f484d85db0f84b50000004983eb084d895f484d035f5849890341ffc24489560c49c1e103498bc1488b6c24104883c418493ba7500400000f8791000000c390909049c7c39402000041baeda2ffff90909090909090458997840400004d899f90040000e84e6990fe0f1f84000000000090909049c7c31400000041baed9effffebcc48896c2410e8d0698efee985fdfffff448890c24e8a139a4fee97afefffff448890424e8125ba4fee9cefefffff44c891c24e88339a4fee9f8fefffff448890424e8f45aa4fee94cfffffff4488d0d5bffffff49898f68040000e95b7790fef441c78784040000f5d2ffff49c7879004000000000000e8b96890fe0f1f84000000000041c78784040000f5bdffff49c7879004000000000000e8966890fe0f1f840000000000e80f0aa4fef4e8296690fef4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7f0fb827 slotKind: QWORD  <||@
  Comment 76 34 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 79 36 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rax:0, rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 38 rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 94 40 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 98 42 r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 98 [rsi:0, r11:0]at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 98 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 106 44 r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 114 46 CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD  <||@
  Comment 124 block B1 null  <||@
  Comment 124 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 124 50 NOP  <||@
  Comment 125 52 NOP  <||@
  Comment 126 54 NOP  <||@
  Comment 127 56 NOP  <||@
  Comment 128 58 NOP  <||@
  Comment 129 60 r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 133 62 CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 142 block B2 null  <||@
  Comment 142 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 66 NOP  <||@
  Comment 143 68 NOP  <||@
  Comment 144 70 NOP  <||@
  Comment 145 72 NOP  <||@
  Comment 146 74 NOP  <||@
  Comment 147 76 NOP  <||@
  Comment 148 78 NOP  <||@
  Comment 149 80 NOP  <||@
  Comment 150 82 NOP  <||@
  Comment 151 84 NOP  <||@
  Comment 152 86 NOP  <||@
  Comment 153 88 NOP  <||@
  Comment 154 90 NOP  <||@
  Comment 155 92 NOP  <||@
  Comment 156 94 NOP  <||@
  Comment 157 96 NOP  <||@
  Comment 158 98 NOP  <||@
  Comment 159 100 NOP  <||@
  Comment 160 102 NOP  <||@
  Comment 161 104 NOP  <||@
  Comment 162 106 NOP  <||@
  Comment 163 108 NOP  <||@
  Comment 164 110 NOP  <||@
  Comment 165 112 NOP  <||@
  Comment 166 114 NOP  <||@
  Comment 167 116 NOP  <||@
  Comment 168 118 NOP  <||@
  Comment 169 120 NOP  <||@
  Comment 170 122 NOP  <||@
  Comment 171 124 NOP  <||@
  Comment 172 126 NOP  <||@
  Comment 173 128 NOP  <||@
  Comment 174 130 NOP  <||@
  Comment 175 132 NOP  <||@
  Comment 176 134 NOP  <||@
  Comment 177 136 NOP  <||@
  Comment 178 138 NOP  <||@
  Comment 179 140 NOP  <||@
  Comment 180 142 NOP  <||@
  Comment 181 144 NOP  <||@
  Comment 182 146 NOP  <||@
  Comment 183 148 NOP  <||@
  Comment 184 150 NOP  <||@
  Comment 185 152 NOP  <||@
  Comment 186 154 NOP  <||@
  Comment 187 156 NOP  <||@
  Comment 188 158 NOP  <||@
  Comment 189 160 NOP  <||@
  Comment 190 162 NOP  <||@
  Comment 191 164 NOP  <||@
  Comment 192 166 NOP  <||@
  Comment 193 168 NOP  <||@
  Comment 194 170 NOP  <||@
  Comment 195 172 NOP  <||@
  Comment 196 174 NOP  <||@
  Comment 197 176 NOP  <||@
  Comment 198 178 NOP  <||@
  Comment 199 180 NOP  <||@
  Comment 200 182 NOP  <||@
  Comment 201 184 NOP  <||@
  Comment 202 186 NOP  <||@
  Comment 203 188 NOP  <||@
  Comment 204 190 NOP  <||@
  Comment 205 192 NOP  <||@
  Comment 206 194 NOP  <||@
  Comment 207 196 NOP  <||@
  Comment 208 198 NOP  <||@
  Comment 209 200 NOP  <||@
  Comment 210 202 NOP  <||@
  Comment 211 204 NOP  <||@
  Comment 212 206 NOP  <||@
  Comment 213 208 NOP  <||@
  Comment 214 210 NOP  <||@
  Comment 215 212 NOP  <||@
  Comment 216 214 NOP  <||@
  Comment 217 216 NOP  <||@
  Comment 218 218 NOP  <||@
  Comment 219 220 NOP  <||@
  Comment 220 222 NOP  <||@
  Comment 221 224 NOP  <||@
  Comment 222 226 NOP  <||@
  Comment 223 228 NOP  <||@
  Comment 224 230 NOP  <||@
  Comment 225 232 NOP  <||@
  Comment 226 234 NOP  <||@
  Comment 227 236 NOP  <||@
  Comment 228 238 NOP  <||@
  Comment 229 240 NOP  <||@
  Comment 230 242 NOP  <||@
  Comment 231 244 NOP  <||@
  Comment 232 246 NOP  <||@
  Comment 233 248 NOP  <||@
  Comment 234 250 NOP  <||@
  Comment 235 252 NOP  <||@
  Comment 236 254 NOP  <||@
  Comment 237 256 NOP  <||@
  Comment 238 258 NOP  <||@
  Comment 239 260 NOP  <||@
  Comment 240 262 NOP  <||@
  Comment 241 264 NOP  <||@
  Comment 242 266 NOP  <||@
  Comment 243 268 NOP  <||@
  Comment 244 270 NOP  <||@
  Comment 245 272 NOP  <||@
  Comment 246 274 NOP  <||@
  Comment 247 276 NOP  <||@
  Comment 248 278 NOP  <||@
  Comment 249 280 NOP  <||@
  Comment 250 282 NOP  <||@
  Comment 251 284 NOP  <||@
  Comment 252 286 NOP  <||@
  Comment 253 288 NOP  <||@
  Comment 254 290 NOP  <||@
  Comment 255 292 NOP  <||@
  Comment 256 294 NOP  <||@
  Comment 257 296 NOP  <||@
  Comment 258 298 NOP  <||@
  Comment 259 300 NOP  <||@
  Comment 260 302 NOP  <||@
  Comment 261 304 NOP  <||@
  Comment 262 306 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rax|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0  <||@
  Comment 318 308 MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 322 310 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3  <||@
  Comment 326 312 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rax|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0  <||@
  Comment 417 314 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: rax|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0  <||@
  Comment 474 316 MOV (x: [rsi|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 478 318 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3  <||@
  Comment 482 320 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rax|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@719cce0  <||@
  Comment 573 322 r10|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 576 324 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 580 326 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313d1d13 encoding: base: 0 shift: 3  <||@
  Comment 584 328 rax|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 587 330 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 596 POLL_RETURN_FAR  <||@
  Comment 610 block B4 null  <||@
  Comment 610 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 334 NOP  <||@
  Comment 611 336 NOP  <||@
  Comment 612 338 NOP  <||@
  Comment 613 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 620 -1 r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed]  <||@
  Comment 626 340 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 626 block B5 null  <||@
  Comment 626 352 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 626 354 NOP  <||@
  Comment 627 356 NOP  <||@
  Comment 628 358 NOP  <||@
  Comment 629 360 NOP  <||@
  Comment 630 362 NOP  <||@
  Comment 631 364 NOP  <||@
  Comment 632 366 NOP  <||@
  Comment 633 368 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 640 370 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 647 372 DEOPT info [bci:0]  <||@
  Comment 647 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 652 [rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 660 block B3 null  <||@
  Comment 660 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 660 344 NOP  <||@
  Comment 661 346 NOP  <||@
  Comment 662 348 NOP  <||@
  Comment 663 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 670 -1 r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed]  <||@
  Comment 676 350 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 683 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 698 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 713 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 728 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 743 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 768 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 796 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 801 [rax:0, rsi:0]at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 831 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 836 [rsi:0, r11:0]at java.util.LinkedList$ListItr.next(LinkedList.java:899) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 844 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 844 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 850 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 850 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
