begin_compilation
  name " HotSpotCompilation-11600[jdk.internal.math.FormattedFPDecimal.fillWithDigits(long, int, int)]"
  method "HotSpotCompilation-11600[jdk.internal.math.FormattedFPDecimal.fillWithDigits(long, int, int)]"
  date 1724269759793
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid j2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 j70 j52 j138 j136 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?11 v12 v46 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i51 v46 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.76092389899164
stamp: void
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v48 #falseSuccessor: v47  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a161 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a161  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# jdk.internal.math.FormattedFPDecimal
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?11 v164 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a161 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# char[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FormattedFPDecimal.digits
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 14]
stamp: n# char[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
lastLocationAccess: - 
=== Succesors ===
next: i162 
=== Usages ===
a76 v165 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v164 lastLocationAccess: - #next: i162  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload
code: ResolvedJavaMethodBytecode<FormattedFPDecimal.fillWithDigits(long, int, int)>
localsSize: 7
locksSize: 0
sourceFile: FormattedFPDecimal.java
sourceLine: 295
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 j2 - i3 i4 
=== Succesors ===
=== Usages ===
v168 i162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 j2 - i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a161 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-19979|0xffffffffffffb1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v165 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
v83 v94 
=== Predecessor ===
a161 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v165 lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 17]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 17]
stamp: i32
=== Inputs ===
x: i4 
y: i22 
=== Succesors ===
=== Usages ===
j104 v83 i72 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i162 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v83 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
i162 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v83 #trueSuccessor: v118 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
v92 
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 14]
op: Uncompress
stamp: a# char[]
=== Inputs ===
value: a161 
=== Succesors ===
=== Usages ===
v167 v166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a161  <|@  <|@
f <@~|@floating>@ <|@
tid j104 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i51 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i51  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a76 
index: j104 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a76 index: j104  <|@  <|@
f <@~|@floating>@ <|@
tid j128 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
rawvalue: 7378697629483820647
stableDimension: 0
stamp: i64 [7378697629483820647]
stampKind: i64
value: long[7378697629483820647|0x6666666666666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
j129 j136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64
=== Inputs ===
x: j2 
y: j128 
=== Succesors ===
=== Usages ===
j137 
=== Predecessor ===
- >@ <|@
instruction <@*H|@jdk.graal.compiler.nodes.calc.IntegerMulHighNode>@ x: j2 y: j128  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j131 j137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [-2305843009213693952 - 2305843009213693951]
=== Inputs ===
x: j136 
y: i130 
=== Succesors ===
=== Usages ===
j139 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: j136 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
rawvalue: 63
stableDimension: 0
stamp: i32 [63]
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j133 j138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [0 - 1] bits:0...0x
=== Inputs ===
x: j2 
y: i132 
=== Succesors ===
=== Usages ===
j139 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [-2305843009213693952 - 2305843009213693952]
=== Inputs ===
x: j137 
y: j138 
=== Succesors ===
=== Usages ===
j62 j71 j61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j137 y: j138  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j41 j61 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-9223372036854775808 - 9223372036854775800] bits:x...x000
=== Inputs ===
x: j139 
y: i40 
=== Succesors ===
=== Usages ===
j63 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j139 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j43 j62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-4611686018427387904 - 4611686018427387904] bits:x...x0
=== Inputs ===
x: j139 
y: i42 
=== Succesors ===
=== Usages ===
j63 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j139 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-9223372036854775808 - 9223372036854775806] bits:x...x0
=== Inputs ===
x: j61 
y: j62 
=== Succesors ===
=== Usages ===
j52 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j61 y: j62  <|@  <|@
f <@~|@floating>@ <|@
tid j52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 29]
stamp: i64
=== Inputs ===
x: j2 
y: j63 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j2 y: j63  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 1]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
resultBits: 32
stamp: i32
=== Inputs ===
value: j52 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j52  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:317) [bci: 1]
at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 2]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
rawvalue: 48
stableDimension: 0
stamp: i32 [48]
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i54 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:317) [bci: 3]
at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 2]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
stamp: i32
=== Inputs ===
x: i53 
y: i30 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i53 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:317) [bci: 4]
at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 2]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
resultBits: 16
stamp: i16
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v118 
address: v166 
lastLocationAccess: - 
value: i55 
stateAfter: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v118 address: v166 lastLocationAccess: - value: i55 stateAfter: - #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v8 
values: i51 i23 
=== Succesors ===
=== Usages ===
?11 v12 i23 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v8 values: i51 i23  <|@  <|@
f <@~|@floating>@ <|@
tid j71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
stamp: i64 [-922337203685477580 - 922337203685477580]
valueDescription: i64
=== Inputs ===
merge: v8 
values: j139 j134 
=== Succesors ===
=== Usages ===
?11 j129 j133 j25 j70 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v8 values: j139 j134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v7 
=== Succesors ===
next: v18 
=== Usages ===
i72 j71 v14 v37 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v7 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i72 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i72  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.6858081322913125
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v17 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 17]
stamp: i32
=== Inputs ===
x: i72 
y: i22 
=== Succesors ===
=== Usages ===
i72 v94 j105 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i72 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i23 
y: i162 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i23 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v94 
=== Succesors ===
trueSuccessor: v122 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v94 #trueSuccessor: v122 #falseSuccessor: v124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
v102 
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i23 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a76 
index: j105 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a76 index: j105  <|@  <|@
f <@~|@floating>@ <|@
tid j129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [-368934881474191033 - 368934881474191032]
=== Inputs ===
x: j71 
y: j128 
=== Succesors ===
=== Usages ===
j131 
=== Predecessor ===
- >@ <|@
instruction <@*H|@jdk.graal.compiler.nodes.calc.IntegerMulHighNode>@ x: j71 y: j128  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [-92233720368547759 - 92233720368547758]
=== Inputs ===
x: j129 
y: i130 
=== Succesors ===
=== Usages ===
j134 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: j129 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [0 - 1] bits:0...0x
=== Inputs ===
x: j71 
y: i132 
=== Succesors ===
=== Usages ===
j134 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j71 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [-92233720368547759 - 92233720368547759]
=== Inputs ===
x: j131 
y: j133 
=== Succesors ===
=== Usages ===
j71 j43 j41 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j131 y: j133  <|@  <|@
f <@~|@floating>@ <|@
tid j41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-737869762948382072 - 737869762948382072] bits:x...x000
=== Inputs ===
x: j134 
y: i40 
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j134 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid j43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-184467440737095518 - 184467440737095518] bits:x...x0
=== Inputs ===
x: j134 
y: i42 
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j134 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-922337203685477590 - 922337203685477590] bits:x...x0
=== Inputs ===
x: j41 
y: j43 
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j41 y: j43  <|@  <|@
f <@~|@floating>@ <|@
tid j25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 29]
stamp: i64 [-1844674407370955170 - 1844674407370955170]
=== Inputs ===
x: j71 
y: j44 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j71 y: j44  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 1]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
resultBits: 32
stamp: i32
=== Inputs ===
value: j25 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j25  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:317) [bci: 3]
at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 2]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
stamp: i32
=== Inputs ===
x: i27 
y: i30 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i27 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:317) [bci: 4]
at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 2]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
resultBits: 16
stamp: i16
=== Inputs ===
value: i31 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v122 
address: v167 
lastLocationAccess: - 
value: i32 
stateAfter: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v122 address: v167 lastLocationAccess: - value: i32 stateAfter: - #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload
code: ResolvedJavaMethodBytecode<FormattedFPDecimal.fillWithDigits(long, int, int)>
localsSize: 7
locksSize: 0
sourceFile: FormattedFPDecimal.java
sourceLine: 295
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 j71 - i3 i72 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 j71 - i3 i72  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 95
mayConvertToGuard: true
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 84
mayConvertToGuard: true
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v47 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v65 
values: j71 j2 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v65 values: j71 j2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v66 v67 
=== Succesors ===
next: v38 
=== Usages ===
j70 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v66 v67 #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 41]
stamp: void
=== Inputs ===
memoryMap: - 
result: j70 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: j70  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v12|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD, v25|QWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid j2 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 j70 j52 j138 j136 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?11 v12 v46 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i51 v46 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.76092389899164
stamp: void
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v48 #falseSuccessor: v47  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a161 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a161  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# jdk.internal.math.FormattedFPDecimal
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?11 v164 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a161 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# char[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FormattedFPDecimal.digits
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 14]
stamp: n# char[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
lastLocationAccess: - 
=== Succesors ===
next: i162 
=== Usages ===
a76 v165 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v164 lastLocationAccess: - #next: i162  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload
code: ResolvedJavaMethodBytecode<FormattedFPDecimal.fillWithDigits(long, int, int)>
localsSize: 7
locksSize: 0
sourceFile: FormattedFPDecimal.java
sourceLine: 295
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 j2 - i3 i4 
=== Succesors ===
=== Usages ===
v168 i162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 j2 - i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
result [v4|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a161 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i162 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-19979|0xffffffffffffb1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v165 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
v83 v94 
=== Predecessor ===
a161 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v165 lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 17]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 i51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 17]
stamp: i32
=== Inputs ===
x: i4 
y: i22 
=== Succesors ===
=== Usages ===
j104 v83 i72 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i162 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v83 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
i162 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v83 #trueSuccessor: v118 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
v92 
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 14]
op: Uncompress
stamp: a# char[]
=== Inputs ===
value: a161 
=== Succesors ===
=== Usages ===
v167 v166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a161  <|@  <|@
f <@~|@floating>@ <|@
tid j104 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i51 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i51  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
result [v7|QWORD[.] + v6|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a76 
index: j104 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a76 index: j104  <|@  <|@
f <@~|@floating>@ <|@
tid j128 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
rawvalue: 7378697629483820647
stableDimension: 0
stamp: i64 [7378697629483820647]
stampKind: i64
value: long[7378697629483820647|0x6666666666666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
j129 j136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j136 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64
=== Inputs ===
x: j2 
y: j128 
=== Succesors ===
=== Usages ===
j137 
=== Predecessor ===
- >@ <|@
instruction <@*H|@jdk.graal.compiler.nodes.calc.IntegerMulHighNode>@ x: j2 y: j128  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j131 j137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j137 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [-2305843009213693952 - 2305843009213693951]
=== Inputs ===
x: j136 
y: i130 
=== Succesors ===
=== Usages ===
j139 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: j136 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
rawvalue: 63
stableDimension: 0
stamp: i32 [63]
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j133 j138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j138 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [0 - 1] bits:0...0x
=== Inputs ===
x: j2 
y: i132 
=== Succesors ===
=== Usages ===
j139 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j139 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [-2305843009213693952 - 2305843009213693952]
=== Inputs ===
x: j137 
y: j138 
=== Succesors ===
=== Usages ===
j62 j71 j61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j137 y: j138  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j41 j61 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j61 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-9223372036854775808 - 9223372036854775800] bits:x...x000
=== Inputs ===
x: j139 
y: i40 
=== Succesors ===
=== Usages ===
j63 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j139 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j43 j62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j62 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-4611686018427387904 - 4611686018427387904] bits:x...x0
=== Inputs ===
x: j139 
y: i42 
=== Succesors ===
=== Usages ===
j63 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j139 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j63 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-9223372036854775808 - 9223372036854775806] bits:x...x0
=== Inputs ===
x: j61 
y: j62 
=== Succesors ===
=== Usages ===
j52 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j61 y: j62  <|@  <|@
f <@~|@floating>@ <|@
tid j52 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 29]
stamp: i64
=== Inputs ===
x: j2 
y: j63 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j2 y: j63  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 1]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
resultBits: 32
stamp: i32
=== Inputs ===
value: j52 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j52  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:317) [bci: 1]
at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 2]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
rawvalue: 48
stableDimension: 0
stamp: i32 [48]
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i54 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:317) [bci: 3]
at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 2]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
stamp: i32
=== Inputs ===
x: i53 
y: i30 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i53 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:317) [bci: 4]
at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 2]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
resultBits: 16
stamp: i16
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v118 
address: v166 
lastLocationAccess: - 
value: i55 
stateAfter: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v118 address: v166 lastLocationAccess: - value: i55 stateAfter: - #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v12|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i72 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v8 
values: i51 i23 
=== Succesors ===
=== Usages ===
?11 v12 i23 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v8 values: i51 i23  <|@  <|@
f <@~|@floating>@ <|@
tid j71 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
stamp: i64 [-922337203685477580 - 922337203685477580]
valueDescription: i64
=== Inputs ===
merge: v8 
values: j139 j134 
=== Succesors ===
=== Usages ===
?11 j129 j133 j25 j70 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v8 values: j139 j134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v7 
=== Succesors ===
next: v18 
=== Usages ===
i72 j71 v14 v37 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v7 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i72 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i72  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.6858081322913125
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v17 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 17]
stamp: i32
=== Inputs ===
x: i72 
y: i22 
=== Succesors ===
=== Usages ===
i72 v94 j105 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i72 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i23 
y: i162 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i23 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v94 
=== Succesors ===
trueSuccessor: v122 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v94 #trueSuccessor: v122 #falseSuccessor: v124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
v102 
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i23 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
result [v7|QWORD[.] + v21|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a76 
index: j105 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a76 index: j105  <|@  <|@
f <@~|@floating>@ <|@
tid j129 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [-368934881474191033 - 368934881474191032]
=== Inputs ===
x: j71 
y: j128 
=== Succesors ===
=== Usages ===
j131 
=== Predecessor ===
- >@ <|@
instruction <@*H|@jdk.graal.compiler.nodes.calc.IntegerMulHighNode>@ x: j71 y: j128  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [-92233720368547759 - 92233720368547758]
=== Inputs ===
x: j129 
y: i130 
=== Succesors ===
=== Usages ===
j134 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: j129 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [0 - 1] bits:0...0x
=== Inputs ===
x: j71 
y: i132 
=== Succesors ===
=== Usages ===
j134 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j71 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid j134 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:296) [bci: 10]
stamp: i64 [-92233720368547759 - 92233720368547759]
=== Inputs ===
x: j131 
y: j133 
=== Succesors ===
=== Usages ===
j71 j43 j41 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j131 y: j133  <|@  <|@
f <@~|@floating>@ <|@
tid j41 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-737869762948382072 - 737869762948382072] bits:x...x000
=== Inputs ===
x: j134 
y: i40 
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j134 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid j43 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-184467440737095518 - 184467440737095518] bits:x...x0
=== Inputs ===
x: j134 
y: i42 
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j134 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 28]
stamp: i64 [-922337203685477590 - 922337203685477590] bits:x...x0
=== Inputs ===
x: j41 
y: j43 
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j41 y: j43  <|@  <|@
f <@~|@floating>@ <|@
tid j25 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 29]
stamp: i64 [-1844674407370955170 - 1844674407370955170]
=== Inputs ===
x: j71 
y: j44 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j71 y: j44  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 1]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
resultBits: 32
stamp: i32
=== Inputs ===
value: j25 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j25  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:317) [bci: 3]
at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 2]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
stamp: i32
=== Inputs ===
x: i27 
y: i30 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i27 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:317) [bci: 4]
at jdk.internal.math.FormattedFPDecimal.toDigit(FormattedFPDecimal.java:313) [bci: 2]
at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 30]
resultBits: 16
stamp: i16
=== Inputs ===
value: i31 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v122 
address: v167 
lastLocationAccess: - 
value: i32 
stateAfter: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v122 address: v167 lastLocationAccess: - value: i32 stateAfter: - #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
stamp: void
=== Inputs ===
loopBegin: v8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD, v25|QWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v8 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v8 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload
code: ResolvedJavaMethodBytecode<FormattedFPDecimal.fillWithDigits(long, int, int)>
localsSize: 7
locksSize: 0
sourceFile: FormattedFPDecimal.java
sourceLine: 295
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 j71 - i3 i72 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 j71 - i3 i72  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 95
mayConvertToGuard: true
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 84
mayConvertToGuard: true
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:297) [bci: 33]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v47 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j70 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v65 
values: j71 j2 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v65 values: j71 j2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v66 v67 
=== Succesors ===
next: v38 
=== Usages ===
j70 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v66 v67 #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:300) [bci: 41]
stamp: void
=== Inputs ===
memoryMap: - 
result: j70 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: j70  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v12|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD, v25|QWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v12|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD, v25|QWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v12|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD, v25|QWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v12|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD, v25|QWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v12|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD, v25|QWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v12|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [v21|DWORD, v25|QWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [v20|QWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [v1|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v12|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [v21|DWORD, v25|QWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [v20|QWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [v1|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v1|q [0, 1[[118, 121[[222, 225[[288, 290[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 30[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 28[[120, 122[[224, 226[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 26[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [26, 250[[292, 313[[314, 335[26 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|q [28, 136[[260, 269[[292, 313[28 MustHaveRegister 118 ShouldHaveRegister 126 MustHaveRegister 136 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|d [30, 250[[292, 313[[314, 335[30 MustHaveRegister 34 ShouldHaveRegister 156 ShouldHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|d [32, 60[[292, 313[32 MustHaveRegister 34 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [52, 114[52 MustHaveRegister 54 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [54, 250[54 MustHaveRegister 58 MustHaveRegister 172 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v3|d [56, 145[56 MustHaveRegister 58 ShouldHaveRegister 142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v4|d [114, 250[114 MustHaveRegister 142 MustHaveRegister 246 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [116, 250[116 MustHaveRegister 120 MustHaveRegister 224 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q rdx|q [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v9|q [124, 128[124 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v1|q [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v10|q [128, 145[128 MustHaveRegister 130 MustHaveRegister 132 ShouldHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|q [130, 134[130 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v12|q [132, 134[132 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v13|q [134, 137[134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v1|q [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v21|d [146, 174[[314, 335[156 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v25|q [146, 240[[250, 259[[314, 335[222 ShouldHaveRegister 230 MustHaveRegister 240 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v19|d [170, 249[170 MustHaveRegister 172 ShouldHaveRegister 246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q rdx|q [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|q [228, 232[228 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v20|q [230, 232[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v23|q [232, 249[232 MustHaveRegister 234 MustHaveRegister 236 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v25|q [234, 238[234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v25|q [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v26|q [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v20|q [240, 242[240 MustHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [242, 244[242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v20|q [270, 288[288 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v1|q [0, 1[[118, 121[[222, 225[[288, 290[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 30[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 28[[120, 122[[224, 226[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 26[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 250[[292, 313[[314, 335[26 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q rdx|q [28, 136[[260, 269[[292, 313[28 MustHaveRegister 118 ShouldHaveRegister 126 MustHaveRegister 136 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [30, 250[[292, 313[[314, 335[30 MustHaveRegister 34 ShouldHaveRegister 156 ShouldHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [32, 60[[292, 313[32 MustHaveRegister 34 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [52, 114[52 MustHaveRegister 54 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [54, 250[54 MustHaveRegister 58 MustHaveRegister 172 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d v3|d [56, 145[56 MustHaveRegister 58 ShouldHaveRegister 142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q v4|d [114, 250[114 MustHaveRegister 142 MustHaveRegister 246 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q -1 [116, 250[116 MustHaveRegister 120 MustHaveRegister 224 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v9|q QWORD "[rdx|q]" v9|q rdx|q [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v9|q [124, 128[124 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v1|q [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v10|q [128, 145[128 MustHaveRegister 130 MustHaveRegister 132 ShouldHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v12|q [130, 134[130 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v12|q [132, 134[132 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q v13|q [134, 137[134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q v1|q [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v21|d [146, 174[[314, 335[156 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r9|q]" v20|q v25|q [146, 240[[250, 259[[314, 335[222 ShouldHaveRegister 230 MustHaveRegister 240 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d v19|d [170, 249[170 MustHaveRegister 172 ShouldHaveRegister 246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q rdx|q [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v22|q [228, 232[228 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q v20|q [230, 232[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q v23|q [232, 249[232 MustHaveRegister 234 MustHaveRegister 236 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v25|q [234, 238[234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r10|q]" v27|q v25|q [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rax|q]" v28|q v26|q [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r9|q]" v29|q v20|q [240, 242[240 MustHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d -1 [242, 244[242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r9|q]" v32|q v20|q [270, 288[288 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v12|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [v21|DWORD, v25|QWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [v20|QWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [v1|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v1|q [0, 1[[118, 121[[222, 225[[288, 290[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 30[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 28[[120, 122[[224, 226[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 26[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 250[[292, 313[[314, 335[26 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q rdx|q [28, 136[[260, 269[[292, 313[28 MustHaveRegister 118 ShouldHaveRegister 126 MustHaveRegister 136 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [30, 250[[292, 313[[314, 335[30 MustHaveRegister 34 ShouldHaveRegister 156 ShouldHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [32, 60[[292, 313[32 MustHaveRegister 34 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [52, 114[52 MustHaveRegister 54 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [54, 250[54 MustHaveRegister 58 MustHaveRegister 172 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d v3|d [56, 145[56 MustHaveRegister 58 ShouldHaveRegister 142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q v4|d [114, 250[114 MustHaveRegister 142 MustHaveRegister 246 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q -1 [116, 250[116 MustHaveRegister 120 MustHaveRegister 224 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v9|q QWORD "[rdx|q]" v9|q rdx|q [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v9|q [124, 128[124 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v1|q [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v10|q [128, 145[128 MustHaveRegister 130 MustHaveRegister 132 ShouldHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v12|q [130, 134[130 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v12|q [132, 134[132 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q v13|q [134, 137[134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q v1|q [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v21|d [146, 174[[314, 335[156 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r9|q]" v20|q v25|q [146, 240[[250, 259[[314, 335[222 ShouldHaveRegister 230 MustHaveRegister 240 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d v19|d [170, 249[170 MustHaveRegister 172 ShouldHaveRegister 246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q rdx|q [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v22|q [228, 232[228 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q v20|q [230, 232[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q v23|q [232, 249[232 MustHaveRegister 234 MustHaveRegister 236 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v25|q [234, 238[234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r10|q]" v27|q v25|q [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rax|q]" v28|q v26|q [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r9|q]" v29|q v20|q [240, 242[240 MustHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d -1 [242, 244[242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r9|q]" v32|q v20|q [270, 288[288 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, v12|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [v21|DWORD, v25|QWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [v20|QWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [v1|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v1|q [0, 1[[118, 121[[222, 225[[288, 290[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 30[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 28[[120, 122[[224, 226[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 22[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 26[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 250[[292, 313[[314, 335[26 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[r10|q]" v1|q rdx|q [28, 136[[260, 269[[292, 313[28 MustHaveRegister 118 ShouldHaveRegister 126 MustHaveRegister 136 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [30, 250[[292, 313[[314, 335[30 MustHaveRegister 34 ShouldHaveRegister 156 ShouldHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [32, 60[[292, 313[32 MustHaveRegister 34 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [52, 114[52 MustHaveRegister 54 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [54, 250[54 MustHaveRegister 58 MustHaveRegister 172 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d v3|d [56, 145[56 MustHaveRegister 58 ShouldHaveRegister 142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q v4|d [114, 250[114 MustHaveRegister 142 MustHaveRegister 246 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q -1 [116, 250[116 MustHaveRegister 120 MustHaveRegister 224 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v9|q QWORD "[rdx|q]" v9|q rdx|q [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v9|q [124, 128[124 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v1|q [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v10|q [128, 145[128 MustHaveRegister 130 MustHaveRegister 132 ShouldHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v12|q [130, 134[130 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v12|q [132, 134[132 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q v13|q [134, 137[134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q v1|q [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v21|d [146, 174[[314, 335[156 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r9|q]" v20|q v25|q [146, 240[[250, 259[[314, 335[222 ShouldHaveRegister 230 MustHaveRegister 240 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d v19|d [170, 249[170 MustHaveRegister 172 ShouldHaveRegister 246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q rdx|q [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v22|q [228, 232[228 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q v20|q [230, 232[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q v23|q [232, 249[232 MustHaveRegister 234 MustHaveRegister 236 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v25|q [234, 238[234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r10|q]" v27|q v25|q [236, 238[236 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rax|q]" v28|q v26|q [238, 241[238 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r9|q]" v29|q v20|q [240, 242[240 MustHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d -1 [242, 244[242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r9|q]" v32|q v20|q [270, 288[288 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: v12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [v19|DWORD, v20|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: v25|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: v1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [v32|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction v8|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: v1|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction v9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction v10|QWORD = SAR x: v9|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction v11|QWORD = SHR x: v1|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction v12|QWORD = ADD (x: v10|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction v13|QWORD = SHL x: v12|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction v14|QWORD = SHL value: v12|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction v15|QWORD = ADD (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction v16|QWORD = SUB (x: v1|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction v17|DWORD = MOV value: v16|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction v18|DWORD = LEA address: [v17|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [v7|QWORD[.] + v6|DWORD * 2 + 16], y: reinterpret: v18|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: v12|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v21|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction v22|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction v23|QWORD = SAR x: v22|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction v24|QWORD = SHR x: v20|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction v25|QWORD = ADD (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction v26|QWORD = SHL x: v25|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction v27|QWORD = SHL value: v25|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction v28|QWORD = ADD (x: v26|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction v29|QWORD = SUB (x: v20|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction v30|DWORD = MOV value: v29|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction v31|DWORD = LEA address: [v30|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v7|QWORD[.] + v21|DWORD * 2 + 16], y: reinterpret: v31|DWORD as: WORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: v25|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: v1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: v32|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v1|QWORD - v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: v0|QWORD[.] v20|QWORD - v2|DWORD v19|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   56  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667] <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  126  <|@ instruction rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|DWORD = MOV value: r10|QWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rdi|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610158941321195541
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD = SHL value: rdx|QWORD size: QWORD <|@ <|@
      nr  238  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction rax|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612635928168269750
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605029012721188526
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4597781644605850952
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  312  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD - rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0]
locals: rsi|QWORD[.] r9|QWORD - rcx|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         4
     2: iload_3       
     3: if_icmple     40
     6: lload_1       
     7: ldc2_w        #123        // 10
    10: ldiv          
    11: lstore        5
    13: aload_0       
    14: getfield      #13         // digits:char[]
    17: iinc          
    20: iload         4
    22: lload_1       
    23: lload         5
    25: ldc2_w        #123        // 10
    28: lmul          
    29: lsub          
    30: invokestatic  #25         // toDigit:(long)char
    33: castore       
    34: lload         5
    36: lstore_1      
    37: goto          0
    40: lload_1       
    41: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85930100009090909090909090909048896c24104c8bd2443bc10f8e1c010000909090909090908b461c448b1cc50c000000458bc841ffc9453bd90f86030100009090909090909090909090909090909090909090909090909090448bc049c1e00348bb6766666666666666498bc248f7eb48c1fa02498bc248c1e83f4803d0488bc248c1e003488bfa48d1e74803c74c2bd0418bc28d4030664389444810458bd14c8bcae964000000909090909090418bfaffcf443bdf0f86b00000009090909090909090909090909090909090909090909090498bc148f7eb48c1fa02498bc148c1e83f4803d0488bc248c1e0034c8bd249d1e24903c24c2bc8418bc18d40306641894478104c8bca448bd790909090443bd17f949090909090909090909090498bc1488b6c24104883c418493ba7500400000f876d000000c39090904d8bcaebd69090909090909041c78784040000e5abffff49c7879004000000000000e8000000000f1f8400000000009090909090909041c78784040000e5a0ffff49c7879004000000000000e8000000000f1f84000000000048896c2410e800000000e95efefffff4488d0d7fffffff49898f68040000e910fefffff441c78784040000f5b1ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD  <||@
  Comment 73 28 r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 76 34 CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD  <||@
  Comment 85 block B1 null  <||@
  Comment 85 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 85 38 NOP  <||@
  Comment 86 40 NOP  <||@
  Comment 87 42 NOP  <||@
  Comment 88 44 NOP  <||@
  Comment 89 46 NOP  <||@
  Comment 90 48 NOP  <||@
  Comment 91 50 NOP  <||@
  Comment 92 52 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 95 54 r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 95 [rax:0, rsi:0]at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3          |4         |5  |6 
     locals:  |rsi|QWORD[.]  |r10|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 95 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 56 r9|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 109 58 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD  <||@
  Comment 118 block B2 null  <||@
  Comment 118 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 118 62 NOP  <||@
  Comment 119 64 NOP  <||@
  Comment 120 66 NOP  <||@
  Comment 121 68 NOP  <||@
  Comment 122 70 NOP  <||@
  Comment 123 72 NOP  <||@
  Comment 124 74 NOP  <||@
  Comment 125 76 NOP  <||@
  Comment 126 78 NOP  <||@
  Comment 127 80 NOP  <||@
  Comment 128 82 NOP  <||@
  Comment 129 84 NOP  <||@
  Comment 130 86 NOP  <||@
  Comment 131 88 NOP  <||@
  Comment 132 90 NOP  <||@
  Comment 133 92 NOP  <||@
  Comment 134 94 NOP  <||@
  Comment 135 96 NOP  <||@
  Comment 136 98 NOP  <||@
  Comment 137 100 NOP  <||@
  Comment 138 102 NOP  <||@
  Comment 139 104 NOP  <||@
  Comment 140 106 NOP  <||@
  Comment 141 108 NOP  <||@
  Comment 142 110 NOP  <||@
  Comment 143 112 NOP  <||@
  Comment 144 114 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3  <||@
  Comment 151 116 rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667]  <||@
  Comment 161 118 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 164 120 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 167 124 rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD  <||@
  Comment 171 126 rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD  <||@
  Comment 178 128 rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 181 130 rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD  <||@
  Comment 188 132 rdi|QWORD = SHL value: rdx|QWORD size: QWORD  <||@
  Comment 194 134 rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 197 136 r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 200 138 rax|DWORD = MOV value: r10|QWORD size: DWORD  <||@
  Comment 203 140 rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD  <||@
  Comment 206 142 MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD  <||@
  Comment 212 -1 r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 215 -1 r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 218 144 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 223 block B4 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 223 158 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 160 NOP  <||@
  Comment 225 162 NOP  <||@
  Comment 226 164 NOP  <||@
  Comment 227 166 NOP  <||@
  Comment 228 168 NOP  <||@
  Comment 229 170 rdi|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 234 172 CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD  <||@
  Comment 243 block B5 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 243 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 243 176 NOP  <||@
  Comment 244 178 NOP  <||@
  Comment 245 180 NOP  <||@
  Comment 246 182 NOP  <||@
  Comment 247 184 NOP  <||@
  Comment 248 186 NOP  <||@
  Comment 249 188 NOP  <||@
  Comment 250 190 NOP  <||@
  Comment 251 192 NOP  <||@
  Comment 252 194 NOP  <||@
  Comment 253 196 NOP  <||@
  Comment 254 198 NOP  <||@
  Comment 255 200 NOP  <||@
  Comment 256 202 NOP  <||@
  Comment 257 204 NOP  <||@
  Comment 258 206 NOP  <||@
  Comment 259 208 NOP  <||@
  Comment 260 210 NOP  <||@
  Comment 261 212 NOP  <||@
  Comment 262 214 NOP  <||@
  Comment 263 216 NOP  <||@
  Comment 264 218 NOP  <||@
  Comment 265 220 NOP  <||@
  Comment 266 222 rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 269 224 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 272 228 rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD  <||@
  Comment 276 230 rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD  <||@
  Comment 283 232 rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 286 234 rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD  <||@
  Comment 293 236 r10|QWORD = SHL value: rdx|QWORD size: QWORD  <||@
  Comment 299 238 rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 302 240 r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 305 242 rax|DWORD = MOV value: r9|QWORD size: DWORD  <||@
  Comment 308 244 rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD  <||@
  Comment 311 246 MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD  <||@
  Comment 317 -1 r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 320 -1 r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 323 248 JUMP ~outgoingValues: [] destination: B5 -> B3  <||@
  Comment 323 block B3 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 323 146 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 323 148 NOP  <||@
  Comment 324 150 NOP  <||@
  Comment 325 152 NOP  <||@
  Comment 326 154 NOP  <||@
  Comment 327 156 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD  <||@
  Comment 332 block B6 null  <||@
  Comment 332 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 332 252 NOP  <||@
  Comment 333 254 NOP  <||@
  Comment 334 256 NOP  <||@
  Comment 335 258 JUMP ~outgoingValues: [] destination: B6 -> B10  <||@
  Comment 335 block B10 null  <||@
  Comment 335 270 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 335 272 NOP  <||@
  Comment 336 274 NOP  <||@
  Comment 337 276 NOP  <||@
  Comment 338 278 NOP  <||@
  Comment 339 280 NOP  <||@
  Comment 340 282 NOP  <||@
  Comment 341 284 NOP  <||@
  Comment 342 286 NOP  <||@
  Comment 343 288 rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 346 290 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 355 POLL_RETURN_FAR  <||@
  Comment 369 block B9 null  <||@
  Comment 369 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 369 262 NOP  <||@
  Comment 370 264 NOP  <||@
  Comment 371 266 NOP  <||@
  Comment 372 -1 r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 375 268 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 377 block B8 null  <||@
  Comment 377 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 377 294 NOP  <||@
  Comment 378 296 NOP  <||@
  Comment 379 298 NOP  <||@
  Comment 380 300 NOP  <||@
  Comment 381 302 NOP  <||@
  Comment 382 304 NOP  <||@
  Comment 383 306 NOP  <||@
  Comment 384 308 MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD  <||@
  Comment 395 310 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 406 312 DEOPT info [bci:0]  <||@
  Comment 406 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 411 [rsi:0]at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3          |4         |5  |6 
     locals:  |rsi|QWORD[.]  |r10|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 419 block B7 null  <||@
  Comment 419 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 419 316 NOP  <||@
  Comment 420 318 NOP  <||@
  Comment 421 320 NOP  <||@
  Comment 422 322 NOP  <||@
  Comment 423 324 NOP  <||@
  Comment 424 326 NOP  <||@
  Comment 425 328 NOP  <||@
  Comment 426 330 MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD  <||@
  Comment 437 332 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 448 334 DEOPT info [bci:0]  <||@
  Comment 448 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 453 [rsi:0]at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         |2  |3          |4          |5  |6 
     locals:  |rsi|QWORD[.]  |r9|QWORD  |-  |rcx|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 466 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 491 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 519 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 524 [rax:0, rsi:0]at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3          |4         |5  |6 
     locals:  |rsi|QWORD[.]  |r10|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 532 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 532 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 538 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 538 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-11600[jdk.internal.math.FormattedFPDecimal.fillWithDigits(long, int, int)]"
  method "HotSpotCompilation-11600[jdk.internal.math.FormattedFPDecimal.fillWithDigits(long, int, int)]"
  date 1724269759940
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af34500 448b560849bc0000002b787f00004d03d44d33e4493bc20f85630b85fe66669089842400c0feff4883ec189041817f20000000000f85930100009090909090909090909048896c24104c8bd2443bc10f8e1c010000909090909090908b461c448b1cc50c000000458bc841ffc9453bd90f86030100009090909090909090909090909090909090909090909090909090448bc049c1e00348bb6766666666666666498bc248f7eb48c1fa02498bc248c1e83f4803d0488bc248c1e003488bfa48d1e74803c74c2bd0418bc28d4030664389444810458bd14c8bcae964000000909090909090418bfaffcf443bdf0f86b00000009090909090909090909090909090909090909090909090498bc148f7eb48c1fa02498bc148c1e83f4803d0488bc248c1e0034c8bd249d1e24903c24c2bc8418bc18d40306641894478104c8bca448bd790909090443bd17f949090909090909090909090498bc1488b6c24104883c418493ba7500400000f876d000000c39090904d8bcaebd69090909090909041c78784040000e5abffff49c7879004000000000000e8df6a85fe0f1f8400000000009090909090909041c78784040000e5a0ffff49c7879004000000000000e8b56a85fe0f1f84000000000048896c2410e8496b83fee95efefffff4488d0d7fffffff49898f68040000e9107985fef441c78784040000f5b1ffff49c7879004000000000000e86e6a85fe0f1f840000000000e8e70b99fef4e8016885fef4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@44af8e7f slotKind: QWORD  <||@
  Comment 73 28 r10|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 76 34 CMPBRANCH (x: r8|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.76092389899164 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD  <||@
  Comment 85 block B1 null  <||@
  Comment 85 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 85 38 NOP  <||@
  Comment 86 40 NOP  <||@
  Comment 87 42 NOP  <||@
  Comment 88 44 NOP  <||@
  Comment 89 46 NOP  <||@
  Comment 90 48 NOP  <||@
  Comment 91 50 NOP  <||@
  Comment 92 52 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 95 54 r11|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 95 [rax:0, rsi:0]at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3          |4         |5  |6 
     locals:  |rsi|QWORD[.]  |r10|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 95 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 56 r9|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 109 58 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B8 size: DWORD  <||@
  Comment 118 block B2 null  <||@
  Comment 118 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 118 62 NOP  <||@
  Comment 119 64 NOP  <||@
  Comment 120 66 NOP  <||@
  Comment 121 68 NOP  <||@
  Comment 122 70 NOP  <||@
  Comment 123 72 NOP  <||@
  Comment 124 74 NOP  <||@
  Comment 125 76 NOP  <||@
  Comment 126 78 NOP  <||@
  Comment 127 80 NOP  <||@
  Comment 128 82 NOP  <||@
  Comment 129 84 NOP  <||@
  Comment 130 86 NOP  <||@
  Comment 131 88 NOP  <||@
  Comment 132 90 NOP  <||@
  Comment 133 92 NOP  <||@
  Comment 134 94 NOP  <||@
  Comment 135 96 NOP  <||@
  Comment 136 98 NOP  <||@
  Comment 137 100 NOP  <||@
  Comment 138 102 NOP  <||@
  Comment 139 104 NOP  <||@
  Comment 140 106 NOP  <||@
  Comment 141 108 NOP  <||@
  Comment 142 110 NOP  <||@
  Comment 143 112 NOP  <||@
  Comment 144 114 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@60817027 encoding: base: 0 shift: 3  <||@
  Comment 151 116 rbx|QWORD = MOVE input: long[7378697629483820647|0x6666666666666667]  <||@
  Comment 161 118 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 164 120 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 167 124 rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD  <||@
  Comment 171 126 rax|QWORD = SHR x: r10|QWORD y: 63 size: QWORD  <||@
  Comment 178 128 rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 181 130 rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD  <||@
  Comment 188 132 rdi|QWORD = SHL value: rdx|QWORD size: QWORD  <||@
  Comment 194 134 rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 197 136 r10|QWORD = SUB (x: r10|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 200 138 rax|DWORD = MOV value: r10|QWORD size: DWORD  <||@
  Comment 203 140 rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD  <||@
  Comment 206 142 MOV (x: [r8|QWORD[.] + r9|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD  <||@
  Comment 212 -1 r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 215 -1 r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 218 144 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 223 block B4 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 223 158 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 160 NOP  <||@
  Comment 225 162 NOP  <||@
  Comment 226 164 NOP  <||@
  Comment 227 166 NOP  <||@
  Comment 228 168 NOP  <||@
  Comment 229 170 rdi|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 234 172 CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B7 size: DWORD  <||@
  Comment 243 block B5 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 243 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 243 176 NOP  <||@
  Comment 244 178 NOP  <||@
  Comment 245 180 NOP  <||@
  Comment 246 182 NOP  <||@
  Comment 247 184 NOP  <||@
  Comment 248 186 NOP  <||@
  Comment 249 188 NOP  <||@
  Comment 250 190 NOP  <||@
  Comment 251 192 NOP  <||@
  Comment 252 194 NOP  <||@
  Comment 253 196 NOP  <||@
  Comment 254 198 NOP  <||@
  Comment 255 200 NOP  <||@
  Comment 256 202 NOP  <||@
  Comment 257 204 NOP  <||@
  Comment 258 206 NOP  <||@
  Comment 259 208 NOP  <||@
  Comment 260 210 NOP  <||@
  Comment 261 212 NOP  <||@
  Comment 262 214 NOP  <||@
  Comment 263 216 NOP  <||@
  Comment 264 218 NOP  <||@
  Comment 265 220 NOP  <||@
  Comment 266 222 rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 269 224 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IMUL (highX: -, lowX: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 272 228 rdx|QWORD = SAR x: rdx|QWORD y: 2 size: QWORD  <||@
  Comment 276 230 rax|QWORD = SHR x: r9|QWORD y: 63 size: QWORD  <||@
  Comment 283 232 rdx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 286 234 rax|QWORD = SHL x: rdx|QWORD y: 3 size: QWORD  <||@
  Comment 293 236 r10|QWORD = SHL value: rdx|QWORD size: QWORD  <||@
  Comment 299 238 rax|QWORD = ADD (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 302 240 r9|QWORD = SUB (x: r9|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 305 242 rax|DWORD = MOV value: r9|QWORD size: DWORD  <||@
  Comment 308 244 rax|DWORD = LEA address: [rax|DWORD + 48] size: DWORD  <||@
  Comment 311 246 MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|WORD(DWORD)) size: WORD  <||@
  Comment 317 -1 r9|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 320 -1 r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 323 248 JUMP ~outgoingValues: [] destination: B5 -> B3  <||@
  Comment 323 block B3 loop 0 depth 1 header:8|LoopBegin  <||@
  Comment 323 146 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 323 148 NOP  <||@
  Comment 324 150 NOP  <||@
  Comment 325 152 NOP  <||@
  Comment 326 154 NOP  <||@
  Comment 327 156 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.6858081322913125 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD  <||@
  Comment 332 block B6 null  <||@
  Comment 332 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 332 252 NOP  <||@
  Comment 333 254 NOP  <||@
  Comment 334 256 NOP  <||@
  Comment 335 258 JUMP ~outgoingValues: [] destination: B6 -> B10  <||@
  Comment 335 block B10 null  <||@
  Comment 335 270 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 335 272 NOP  <||@
  Comment 336 274 NOP  <||@
  Comment 337 276 NOP  <||@
  Comment 338 278 NOP  <||@
  Comment 339 280 NOP  <||@
  Comment 340 282 NOP  <||@
  Comment 341 284 NOP  <||@
  Comment 342 286 NOP  <||@
  Comment 343 288 rax|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 346 290 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 355 POLL_RETURN_FAR  <||@
  Comment 369 block B9 null  <||@
  Comment 369 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 369 262 NOP  <||@
  Comment 370 264 NOP  <||@
  Comment 371 266 NOP  <||@
  Comment 372 -1 r9|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 375 268 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 377 block B8 null  <||@
  Comment 377 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 377 294 NOP  <||@
  Comment 378 296 NOP  <||@
  Comment 379 298 NOP  <||@
  Comment 380 300 NOP  <||@
  Comment 381 302 NOP  <||@
  Comment 382 304 NOP  <||@
  Comment 383 306 NOP  <||@
  Comment 384 308 MOV x: [r15|QWORD + 1156] y: -21531 size: DWORD  <||@
  Comment 395 310 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 406 312 DEOPT info [bci:0]  <||@
  Comment 406 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 411 [rsi:0]at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3          |4         |5  |6 
     locals:  |rsi|QWORD[.]  |r10|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 419 block B7 null  <||@
  Comment 419 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 419 316 NOP  <||@
  Comment 420 318 NOP  <||@
  Comment 421 320 NOP  <||@
  Comment 422 322 NOP  <||@
  Comment 423 324 NOP  <||@
  Comment 424 326 NOP  <||@
  Comment 425 328 NOP  <||@
  Comment 426 330 MOV x: [r15|QWORD + 1156] y: -24347 size: DWORD  <||@
  Comment 437 332 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 448 334 DEOPT info [bci:0]  <||@
  Comment 448 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 453 [rsi:0]at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         |2  |3          |4          |5  |6 
     locals:  |rsi|QWORD[.]  |r9|QWORD  |-  |rcx|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 466 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 491 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 519 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 524 [rax:0, rsi:0]at jdk.internal.math.FormattedFPDecimal.fillWithDigits(FormattedFPDecimal.java:295) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3          |4         |5  |6 
     locals:  |rsi|QWORD[.]  |r10|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 532 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 532 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 538 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 538 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
