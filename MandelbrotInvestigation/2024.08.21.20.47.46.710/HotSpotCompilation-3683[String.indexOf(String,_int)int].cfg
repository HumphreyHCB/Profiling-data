begin_compilation
  name " HotSpotCompilation-3683[java.lang.String.indexOf(String, int)]"
  method "HotSpotCompilation-3683[java.lang.String.indexOf(String, int)]"
  date 1724269726161
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a240 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a240  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v247 v248 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a240 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2634) [bci: 1]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v247 
lastLocationAccess: - 
=== Succesors ===
next: i241 
=== Usages ===
a72 v249 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v247 lastLocationAccess: - #next: i241  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v252 v250 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v52 j23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.indexOf(String, int)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 2634
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v219 i241 a242 i244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a240 
=== Succesors ===
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-19979|0xffffffffffffb1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v249 
lastLocationAccess: - 
=== Succesors ===
next: a242 
=== Usages ===
i20 
=== Predecessor ===
a240 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v249 lastLocationAccess: - #next: a242  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a242 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-21259|0xffffffffffffacf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v250 
lastLocationAccess: - 
=== Succesors ===
next: i243 
=== Usages ===
a86 v251 v253 v254 
=== Predecessor ===
i241 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v250 lastLocationAccess: - #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
lastLocationAccess: - 
=== Succesors ===
next: i244 
=== Usages ===
i94 
=== Predecessor ===
a242 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v252 lastLocationAccess: - #next: i244  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a242 
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i244 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-22539|0xffffffffffffa7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v251 
lastLocationAccess: - 
=== Succesors ===
next: i245 
=== Usages ===
i58 
=== Predecessor ===
i243 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v251 lastLocationAccess: - #next: i245  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i245 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2634) [bci: 5]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v248 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
i76 
=== Predecessor ===
i244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v248 lastLocationAccess: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2634) [bci: 5]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i245 
=== Succesors ===
=== Usages ===
v37 v35 i20 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i245  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i241 
y: i76 
=== Succesors ===
=== Usages ===
j48 i25 i212 i105 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i241 y: i76  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2683) [bci: 3]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 v37 v52 v118 v130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2034) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 41]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i24 
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 40]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j23 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.String.indexOf(String.java:2683) [bci: 2]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2034) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 41]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v52 
trueValue: j47 
falseValue: j23 
=== Succesors ===
=== Usages ===
j50 v51 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v52 trueValue: j47 falseValue: j23  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 37]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i20 
=== Succesors ===
=== Usages ===
j50 v51 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.min(Math.java:2129) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 44]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j49 
y: j48 
=== Succesors ===
=== Usages ===
j50 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j49 y: j48  <|@  <|@
f <@~|@floating>@ <|@
tid j50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2129) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 44]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v51 
trueValue: j49 
falseValue: j48 
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v51 trueValue: j49 falseValue: j48  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 47]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 32
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: j50 
=== Succesors ===
=== Usages ===
i25 i116 i105 v110 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j50  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 21]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i20 
y: i46 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i20 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i243 
=== Succesors ===
=== Usages ===
i58 v35 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i243  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i244 
y: i94 
=== Succesors ===
=== Usages ===
v26 v32 i129 i212 v122 v101 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i244 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 22]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i58 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2686) [bci: 25]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i67 i67 i67 i67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 22]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.02571551806860428
stamp: void
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
i245 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v28 #falseSuccessor: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2686) [bci: 25]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v28 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 27]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i24 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i58 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v197 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v197 #falseSuccessor: v198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid j69 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2634) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
rawvalue: -50195
stableDimension: 0
stamp: i32 [-50195]
stampKind: i32
value: int[-50195|0xffffffffffff3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2692) [bci: 35]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i76 
y: i94 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i76 y: i94  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v202 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v201 #falseSuccessor: v202  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 53]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i76 
y: i24 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i76 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v206 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v205 #falseSuccessor: v206  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2696) [bci: 57]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:71) [bci: 2] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 i135 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 58] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i95 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i58 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a242 
=== Succesors ===
=== Usages ===
i142 i143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a242  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2634) [bci: 1]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a240 
=== Succesors ===
=== Usages ===
i117 i129 i105 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a240  <|@  <|@
f <@~|@floating>@ <|@
tid j73 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2634) [bci: 5]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j128 i129 i105 i117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 69] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v102 #falseSuccessor: v103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 72] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i142 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 91] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v253 
lastLocationAccess: - 
=== Succesors ===
next: i105 
=== Usages ===
i146 
=== Predecessor ===
v102 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v253 lastLocationAccess: - #next: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 94] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i142 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 97] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a72 
arrayOffset: j73 
arrayLength: i20 
fromIndex: i46 
searchValues: i146 
=== Succesors ===
next: v176 
=== Usages ===
i67 
=== Predecessor ===
i142 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a72 arrayOffset: j73 arrayLength: i20 fromIndex: i46 searchValues: i146 #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
i105 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 101] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i20 
y: i58 
=== Succesors ===
=== Usages ===
i213 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i20 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 103] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 i213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i212 
y: i106 
=== Succesors ===
=== Usages ===
v110 i117 v136 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i212 y: i106  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 119] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i46 
y: i213 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i46 y: i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 130] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v111 #falseSuccessor: v112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 133] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i143 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 135] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v253 
lastLocationAccess: - 
=== Succesors ===
next: i145 
=== Usages ===
i147 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v253 lastLocationAccess: - #next: i145  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a242 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:85) [bci: 142] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v254 
lastLocationAccess: - 
=== Succesors ===
next: v114 
=== Usages ===
i149 
=== Predecessor ===
i143 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v254 lastLocationAccess: - #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:89) [bci: 172] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i145 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i145  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:88) [bci: 167] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i143 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i143  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 210] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i106 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i58 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
i145 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v115 
values: i46 i135 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v115 values: i46 i135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v114 
=== Succesors ===
next: i117 
=== Usages ===
i116 v119 v123 v131 v137 v138 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v114 #next: i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 175] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: FindTwoConsecutive
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a72 
arrayOffset: j73 
arrayLength: i213 
fromIndex: i116 
searchValues: i147 i149 
=== Succesors ===
next: v121 
=== Usages ===
v118 i67 j246 i67 i135 
=== Predecessor ===
v115 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a72 arrayOffset: j73 arrayLength: i213 fromIndex: i116 searchValues: i147 i149 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 185] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i24 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i117 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 196] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
i117 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:93) [bci: 201] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 221] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v123 #falseSuccessor: v125  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 227] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i129 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid j246 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i117 
=== Succesors ===
=== Usages ===
j128 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i117  <|@  <|@
f <@~|@floating>@ <|@
tid j128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.byteArrayOffset(StringLatin1Snippets.java:66) [bci: 15]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 234] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i64 [16 - 4294967311] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j246 
y: j73 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j246 y: j73  <|@  <|@
f <@~|@floating>@ <|@
tid a86 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a242 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode.regionEquals(Object, long, Object, long, int, JavaKind, Stride, Stride) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 252] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 1] bits:0...0x
strideA: S1
strideB: S1
=== Inputs ===
lastLocationAccess: - 
arrayA: a72 
offsetA: j128 
arrayB: a86 
offsetB: j73 
length: i58 
dynamicStrides: - 
=== Succesors ===
next: v134 
=== Usages ===
v130 
=== Predecessor ===
v125 >@ <|@
instruction <@ArrayRegionEquals|@jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode>@ lastLocationAccess: - arrayA: a72 offsetA: j128 arrayB: a86 offsetB: j73 length: i58 dynamicStrides: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i24 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i129 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
i129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v133 #falseSuccessor: v131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i32
=== Inputs ===
x: i117 
y: i95 
=== Succesors ===
=== Usages ===
i116 v136 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i117 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 274] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i213 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i135 y: i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 285] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v136 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v136 #trueSuccessor: v139 #falseSuccessor: v138  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
loopBegin: v115 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v115 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v115 #next: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:99) [bci: 261] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v115 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v115 #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:95) [bci: 224] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v115 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v115 #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v123 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:91) [bci: 199] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v115 
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v115 #next: v175  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v112 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v65 
values: i30 i30 i30 i117 i117 i30 i105 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v65 values: i30 i30 i30 i117 i117 i30 i105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v66 v171 v172 v173 v174 v175 v176 
=== Succesors ===
next: v15 
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v66 v171 v172 v173 v174 v175 v176 #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2634) [bci: 17]
stamp: void
=== Inputs ===
memoryMap: - 
result: i67 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
rawvalue: -52243
stableDimension: 0
stamp: i32 [-52243]
stampKind: i32
value: int[-52243|0xffffffffffff33ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v206 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
rawvalue: -51219
stableDimension: 0
stamp: i32 [-51219]
stampKind: i32
value: int[-51219|0xffffffffffff37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v202 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: i32 [-52243 - -50195] bits:1...10011xx1111101101
valueDescription: i32
=== Inputs ===
merge: v214 
values: i225 i227 i230 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v214 values: i225 i227 i230  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: i64 [20 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v214 
values: j69 j228 j231 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v214 values: j69 j228 j231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v224 v226 v229 
=== Succesors ===
next: v219 
=== Usages ===
i217 j218 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v224 v226 v229 #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i217 
speculation: j218 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i217 speculation: j218  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-51219|0xffffffffffff37ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed], long[20|0x14]] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52243|0xffffffffffff33ed], long[1300|0x514]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a240 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a240  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v247 v248 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a240 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2634) [bci: 1]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v247 
lastLocationAccess: - 
=== Succesors ===
next: i241 
=== Usages ===
a72 v249 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v247 lastLocationAccess: - #next: i241  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v252 v250 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v52 j23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.indexOf(String, int)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 2634
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v219 i241 a242 i244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a240 
=== Succesors ===
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i241 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-19979|0xffffffffffffb1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v249 
lastLocationAccess: - 
=== Succesors ===
next: a242 
=== Usages ===
i20 
=== Predecessor ===
a240 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v249 lastLocationAccess: - #next: a242  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a242 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-21259|0xffffffffffffacf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v250 
lastLocationAccess: - 
=== Succesors ===
next: i243 
=== Usages ===
a86 v251 v253 v254 
=== Predecessor ===
i241 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v250 lastLocationAccess: - #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
lastLocationAccess: - 
=== Succesors ===
next: i244 
=== Usages ===
i94 
=== Predecessor ===
a242 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v252 lastLocationAccess: - #next: i244  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a242 
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i244 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-22539|0xffffffffffffa7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v251 
lastLocationAccess: - 
=== Succesors ===
next: i245 
=== Usages ===
i58 
=== Predecessor ===
i243 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v251 lastLocationAccess: - #next: i245  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i245 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2634) [bci: 5]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v248 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
i76 
=== Predecessor ===
i244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v248 lastLocationAccess: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2634) [bci: 5]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i245 
=== Succesors ===
=== Usages ===
v37 v35 i20 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i245  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i241 
y: i76 
=== Succesors ===
=== Usages ===
j48 i25 i212 i105 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i241 y: i76  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2683) [bci: 3]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 v37 v52 v118 v130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2034) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 41]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i24 
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 40]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j23 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.String.indexOf(String.java:2683) [bci: 2]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j49 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2034) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 41]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v52 
trueValue: j47 
falseValue: j23 
=== Succesors ===
=== Usages ===
j50 v51 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v52 trueValue: j47 falseValue: j23  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 37]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i20 
=== Succesors ===
=== Usages ===
j50 v51 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.min(Math.java:2129) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 44]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j49 
y: j48 
=== Succesors ===
=== Usages ===
j50 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j49 y: j48  <|@  <|@
f <@~|@floating>@ <|@
tid j50 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2129) [bci: 3]
at java.lang.Math.clamp(Math.java:2217) [bci: 44]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v51 
trueValue: j49 
falseValue: j48 
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v51 trueValue: j49 falseValue: j48  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.Math.clamp(Math.java:2217) [bci: 47]
at java.lang.String.indexOf(String.java:2683) [bci: 5]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 32
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: j50 
=== Succesors ===
=== Usages ===
i25 i116 i105 v110 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j50  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 21]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i20 
y: i46 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i20 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i243 
=== Succesors ===
=== Usages ===
i58 v35 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i243  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i244 
y: i94 
=== Succesors ===
=== Usages ===
v26 v32 i129 i212 v122 v101 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i244 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 22]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i58 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2686) [bci: 25]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i67 i67 i67 i67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2685) [bci: 22]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.02571551806860428
stamp: void
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
i245 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v28 #falseSuccessor: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2686) [bci: 25]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v28 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 27]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i24 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i58 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v197 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v197 #falseSuccessor: v198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2688) [bci: 29]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid j69 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2634) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result int[-50195|0xffffffffffff3bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
rawvalue: -50195
stableDimension: 0
stamp: i32 [-50195]
stampKind: i32
value: int[-50195|0xffffffffffff3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed], long[20|0x14]] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2692) [bci: 35]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i76 
y: i94 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i76 y: i94  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v202 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v201 #falseSuccessor: v202  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 53]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i76 
y: i24 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i76 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v206 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v205 #falseSuccessor: v206  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2696) [bci: 57]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:71) [bci: 2] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 i135 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 58] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i95 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i58 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
result [v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a242 
=== Succesors ===
=== Usages ===
i142 i143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a242  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2634) [bci: 1]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a240 
=== Succesors ===
=== Usages ===
i117 i129 i105 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a240  <|@  <|@
f <@~|@floating>@ <|@
tid j73 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2634) [bci: 5]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j128 i129 i105 i117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 69] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v102 #falseSuccessor: v103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 72] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i142 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 91] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v253 
lastLocationAccess: - 
=== Succesors ===
next: i105 
=== Usages ===
i146 
=== Predecessor ===
v102 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v253 lastLocationAccess: - #next: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 94] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i142 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i105 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 97] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a72 
arrayOffset: j73 
arrayLength: i20 
fromIndex: i46 
searchValues: i146 
=== Succesors ===
next: v176 
=== Usages ===
i67 
=== Predecessor ===
i142 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a72 arrayOffset: j73 arrayLength: i20 fromIndex: i46 searchValues: i146 #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
i105 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 101] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i20 
y: i58 
=== Succesors ===
=== Usages ===
i213 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i20 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 103] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 i213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i212 
y: i106 
=== Succesors ===
=== Usages ===
v110 i117 v136 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i212 y: i106  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 119] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i46 
y: i213 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i46 y: i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 130] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v111 #falseSuccessor: v112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 133] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i143 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i143 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 135] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v253 
lastLocationAccess: - 
=== Succesors ===
next: i145 
=== Usages ===
i147 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v253 lastLocationAccess: - #next: i145  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
result [v5|DWORD[_] * 8 + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a242 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:85) [bci: 142] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v254 
lastLocationAccess: - 
=== Succesors ===
next: v114 
=== Usages ===
i149 
=== Predecessor ===
i143 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v254 lastLocationAccess: - #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:89) [bci: 172] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i145 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i145  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:88) [bci: 167] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i143 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i143  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 210] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i106 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i58 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
i145 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i116 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v115 
values: i46 i135 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v115 values: i46 i135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v114 
=== Succesors ===
next: i117 
=== Usages ===
i116 v119 v123 v131 v137 v138 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v114 #next: i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 175] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: FindTwoConsecutive
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a72 
arrayOffset: j73 
arrayLength: i213 
fromIndex: i116 
searchValues: i147 i149 
=== Succesors ===
next: v121 
=== Usages ===
v118 i67 j246 i67 i135 
=== Predecessor ===
v115 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a72 arrayOffset: j73 arrayLength: i213 fromIndex: i116 searchValues: i147 i149 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 185] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i24 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i117 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 196] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
i117 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:93) [bci: 201] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 221] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v123 #falseSuccessor: v125  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 227] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i129 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid j246 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i117 
=== Succesors ===
=== Usages ===
j128 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i117  <|@  <|@
f <@~|@floating>@ <|@
tid j128 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.byteArrayOffset(StringLatin1Snippets.java:66) [bci: 15]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 234] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i64 [16 - 4294967311] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j246 
y: j73 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j246 y: j73  <|@  <|@
f <@~|@floating>@ <|@
tid a86 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.indexOf(String.java:2684) [bci: 11]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a242 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode.regionEquals(Object, long, Object, long, int, JavaKind, Stride, Stride) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 252] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 1] bits:0...0x
strideA: S1
strideB: S1
=== Inputs ===
lastLocationAccess: - 
arrayA: a72 
offsetA: j128 
arrayB: a86 
offsetB: j73 
length: i58 
dynamicStrides: - 
=== Succesors ===
next: v134 
=== Usages ===
v130 
=== Predecessor ===
v125 >@ <|@
instruction <@ArrayRegionEquals|@jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode>@ lastLocationAccess: - arrayA: a72 offsetA: j128 arrayB: a86 offsetB: j73 length: i58 dynamicStrides: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i24 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i129 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
i129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v133 #falseSuccessor: v131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: i32
=== Inputs ===
x: i117 
y: i95 
=== Succesors ===
=== Usages ===
i116 v136 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i117 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 274] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i213 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i135 y: i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 285] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v136 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v136 #trueSuccessor: v139 #falseSuccessor: v138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
loopBegin: v115 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v115 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v115 #next: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:99) [bci: 261] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v115 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v115 #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:95) [bci: 224] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v115 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v115 #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v123 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:91) [bci: 199] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v115 
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v115 #next: v175  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.indexOf(String.java:2696) [bci: 65]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v112 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i67 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v65 
values: i30 i30 i30 i117 i117 i30 i105 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v65 values: i30 i30 i30 i117 i117 i30 i105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v66 v171 v172 v173 v174 v175 v176 
=== Succesors ===
next: v15 
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v66 v171 v172 v173 v174 v175 v176 #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2634) [bci: 17]
stamp: void
=== Inputs ===
memoryMap: - 
result: i67 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2695) [bci: 54]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
result int[-52243|0xffffffffffff33ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
rawvalue: -52243
stableDimension: 0
stamp: i32 [-52243]
stampKind: i32
value: int[-52243|0xffffffffffff33ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v206 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52243|0xffffffffffff33ed], long[1300|0x514]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2694) [bci: 50]
at java.lang.String.indexOf(String.java:2634) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result int[-51219|0xffffffffffff37ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
rawvalue: -51219
stableDimension: 0
stamp: i32 [-51219]
stampKind: i32
value: int[-51219|0xffffffffffff37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v202 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-51219|0xffffffffffff37ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i217 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: i32 [-52243 - -50195] bits:1...10011xx1111101101
valueDescription: i32
=== Inputs ===
merge: v214 
values: i225 i227 i230 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v214 values: i225 i227 i230  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: i64 [20 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v214 
values: j69 j228 j231 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v214 values: j69 j228 j231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v224 v226 v229 
=== Succesors ===
next: v219 
=== Usages ===
i217 j218 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v224 v226 v229 #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.indexOf(String.java:2634) [bci: 9]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i217 
speculation: j218 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i217 speculation: j218  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-51219|0xffffffffffff37ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed], long[20|0x14]] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52243|0xffffffffffff33ed], long[1300|0x514]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-51219|0xffffffffffff37ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed], long[20|0x14]] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52243|0xffffffffffff33ed], long[1300|0x514]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-51219|0xffffffffffff37ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed], long[20|0x14]] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52243|0xffffffffffff33ed], long[1300|0x514]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-51219|0xffffffffffff37ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed], long[20|0x14]] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52243|0xffffffffffff33ed], long[1300|0x514]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-51219|0xffffffffffff37ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed], long[20|0x14]] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52243|0xffffffffffff33ed], long[1300|0x514]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  204  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  246  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr  304  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  314  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  318  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  380  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  388  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [int[-51219|0xffffffffffff37ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed], long[20|0x14]] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [int[-52243|0xffffffffffff33ed], long[1300|0x514]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  504  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  204  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  246  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr  304  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  314  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  318  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  380  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  388  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [int[-51219|0xffffffffffff37ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed], long[20|0x14]] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [int[-52243|0xffffffffffff33ed], long[1300|0x514]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  504  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v32|d [0, 1[[244, 246[[316, 318[[386, 388[[470, 472[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v8|d [0, 66[[80, 83[[102, 105[[236, 245[[310, 317[[380, 387[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v28|q [0, 64[[234, 245[[308, 317[[378, 387[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 58[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v18|q [0, 62[[232, 245[[306, 317[[376, 387[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v24|d [0, 1[[242, 245[[316, 317[[386, 387[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v25|d [0, 1[[238, 245[[312, 316[[382, 386[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v23|d [0, 1[[240, 244[[314, 316[[384, 386[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[244, 245[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [62, 144[[474, 525[62 MustHaveRegister 68 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [64, 144[[474, 525[64 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [66, 144[[474, 525[66 MustHaveRegister 84 ShouldHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [68, 158[68 MustHaveRegister 70 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [70, 82[70 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [72, 374[72 MustHaveRegister 76 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 304 MustHaveRegister 347 LiveAtLoopEnd 374 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [74, 130[74 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [76, 104[76 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [78, 142[78 MustHaveRegister 80 ShouldHaveRegister 130 ShouldHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v4|d [82, 180[[348, 380[82 MustHaveRegister 92 ShouldHaveRegister 100 MustHaveRegister 180 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [84, 90[84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|q [90, 97[90 MustHaveRegister 94 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [88, 91[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v9|d [92, 96[92 MustHaveRegister 94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v13|q [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v25|d [98, 203[[348, 382[98 MustHaveRegister 100 ShouldHaveRegister 184 ShouldHaveRegister 202 ShouldHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v9|d [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v7|d [104, 348[104 MustHaveRegister 106 MustHaveRegister 118 MustHaveRegister 160 ShouldHaveRegister 180 ShouldHaveRegister 260 ShouldHaveRegister 314 ShouldHaveRegister 347 LiveAtLoopEnd  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v3|d [158, 376[158 MustHaveRegister 232 ShouldHaveRegister 306 ShouldHaveRegister 347 LiveAtLoopEnd 376 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [374, 384[374 MustHaveRegister 384 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d rax|d [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v9|d [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [182, 348[182 MustHaveRegister 184 MustHaveRegister 236 ShouldHaveRegister 336 MustHaveRegister 347 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [198, 348[198 MustHaveRegister 240 ShouldHaveRegister 347 LiveAtLoopEnd  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [200, 348[200 MustHaveRegister 242 ShouldHaveRegister 347 LiveAtLoopEnd  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v15|d [204, 238[238 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d rax|d [246, 334[[412, 421[[422, 431[246 MustHaveRegister 248 MustHaveRegister 300 ShouldHaveRegister 334 ShouldHaveRegister 420 ShouldHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v26|d [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [302, 308[302 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v5|d [304, 310[304 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d rax|d [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v26|d [334, 347[334 MustHaveRegister 336 ShouldHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v20|d [452, 470[470 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [504, 520[520 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [504, 522[522 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v32|d [0, 1[[244, 246[[316, 318[[386, 388[[470, 472[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v8|d [0, 66[[80, 83[[102, 105[[236, 245[[310, 317[[380, 387[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v28|q [0, 64[[234, 245[[308, 317[[378, 387[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 58[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v18|q [0, 62[[232, 245[[306, 317[[376, 387[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v24|d [0, 1[[242, 245[[316, 317[[386, 387[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v25|d [0, 1[[238, 245[[312, 316[[382, 386[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v23|d [0, 1[[240, 244[[314, 316[[384, 386[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[244, 245[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [62, 144[[474, 525[62 MustHaveRegister 68 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [64, 144[[474, 525[64 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|- [66, 144[[474, 525[66 MustHaveRegister 84 ShouldHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [68, 158[68 MustHaveRegister 70 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [70, 82[70 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [72, 315[72 MustHaveRegister 76 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 304 MustHaveRegister  "SpillInDominator"
  v6|d DWORD "[rdi|d]" v6|d -1 [74, 130[74 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [76, 104[76 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d -1 [78, 142[78 MustHaveRegister 80 ShouldHaveRegister 130 ShouldHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d v4|d [82, 180[[348, 380[82 MustHaveRegister 92 ShouldHaveRegister 100 MustHaveRegister 180 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rcx|q]" v10|q -1 [84, 90[84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|q [90, 97[90 MustHaveRegister 94 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rbp|q]" v12|q -1 [88, 91[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbp|q]" v13|q v9|d [92, 96[92 MustHaveRegister 94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbp|q]" v14|q v13|q [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbp|d]" v15|d v25|d [98, 203[[348, 382[98 MustHaveRegister 100 ShouldHaveRegister 184 ShouldHaveRegister 202 ShouldHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r13|d]" v16|d v9|d [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r14|d]" v17|d v7|d [104, 348[104 MustHaveRegister 106 MustHaveRegister 118 MustHaveRegister 160 ShouldHaveRegister 180 ShouldHaveRegister 260 ShouldHaveRegister 314 ShouldHaveRegister 347 LiveAtLoopEnd  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q v3|d [158, 376[158 MustHaveRegister 232 ShouldHaveRegister 306 ShouldHaveRegister 347 LiveAtLoopEnd 376 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [374, 384[374 MustHaveRegister 384 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d rax|d [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r9|d]" v21|d v9|d [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r13|d]" v22|d -1 [182, 348[182 MustHaveRegister 184 MustHaveRegister 236 ShouldHaveRegister 336 MustHaveRegister 347 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r10|d]" v23|d -1 [198, 243[198 MustHaveRegister 240 ShouldHaveRegister  "SpillInDominator"
  v24|d DWORD "[rax|d]" v24|d -1 [200, 243[200 MustHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbp|d]" v25|d v15|d [204, 238[238 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|d [246, 315[246 MustHaveRegister 248 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v26|d [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdx|q]" v28|q -1 [302, 308[302 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q v5|d [304, 310[304 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d rax|d [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v26|d [334, 347[334 MustHaveRegister 336 ShouldHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d v20|d [452, 470[470 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [504, 520[520 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r8|q]" v34|q -1 [504, 522[522 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[vstack:0|d]" v23|d v23|d [243, 348[347 LiveAtLoopEnd  "SpillInDominator"
  v36|d DWORD "[rbp|d]" v24|d v24|d [243, 348[347 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r11|d]" v26|d v26|d [315, 334[[412, 421[[422, 431[334 ShouldHaveRegister 420 ShouldHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r11|d]" v5|d v5|d [348, 374[374 MustHaveRegister  "SpillInDominator"
  v39|d DWORD "[vstack:1|d]" v5|d v5|d [315, 348[347 LiveAtLoopEnd  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  204  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  246  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr  304  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  314  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOVE input: v5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  318  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  380  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  388  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [int[-51219|0xffffffffffff37ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed], long[20|0x14]] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [int[-52243|0xffffffffffff33ed], long[1300|0x514]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  504  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v32|d [0, 1[[244, 246[[316, 318[[386, 388[[470, 472[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v8|d [0, 66[[80, 83[[102, 105[[236, 245[[310, 317[[380, 387[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v28|q [0, 64[[234, 245[[308, 317[[378, 387[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 58[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v18|q [0, 62[[232, 245[[306, 317[[376, 387[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v24|d [0, 1[[242, 245[[316, 317[[386, 387[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v25|d [0, 1[[238, 245[[312, 316[[382, 386[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v23|d [0, 1[[240, 244[[314, 316[[384, 386[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[244, 245[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [62, 144[[474, 525[62 MustHaveRegister 68 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [64, 144[[474, 525[64 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|- [66, 144[[474, 525[66 MustHaveRegister 84 ShouldHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [68, 158[68 MustHaveRegister 70 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [70, 82[70 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [72, 315[72 MustHaveRegister 76 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 304 MustHaveRegister  "SpillInDominator"
  v6|d DWORD "[rdi|d]" v6|d -1 [74, 130[74 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [76, 104[76 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d -1 [78, 142[78 MustHaveRegister 80 ShouldHaveRegister 130 ShouldHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d v4|d [82, 180[[348, 380[82 MustHaveRegister 92 ShouldHaveRegister 100 MustHaveRegister 180 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rcx|q]" v10|q -1 [84, 90[84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|q [90, 97[90 MustHaveRegister 94 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rbp|q]" v12|q -1 [88, 91[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbp|q]" v13|q v9|d [92, 96[92 MustHaveRegister 94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbp|q]" v14|q v13|q [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbp|d]" v15|d v25|d [98, 203[[348, 382[98 MustHaveRegister 100 ShouldHaveRegister 184 ShouldHaveRegister 202 ShouldHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r13|d]" v16|d v9|d [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r14|d]" v17|d v7|d [104, 348[104 MustHaveRegister 106 MustHaveRegister 118 MustHaveRegister 160 ShouldHaveRegister 180 ShouldHaveRegister 260 ShouldHaveRegister 314 ShouldHaveRegister 347 LiveAtLoopEnd  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q v3|d [158, 376[158 MustHaveRegister 232 ShouldHaveRegister 306 ShouldHaveRegister 347 LiveAtLoopEnd 376 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [374, 384[374 MustHaveRegister 384 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d rax|d [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r9|d]" v21|d v9|d [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r13|d]" v22|d -1 [182, 348[182 MustHaveRegister 184 MustHaveRegister 236 ShouldHaveRegister 336 MustHaveRegister 347 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r10|d]" v23|d -1 [198, 243[198 MustHaveRegister 240 ShouldHaveRegister  "StoreAtDefinition"
  v24|d DWORD "[rax|d]" v24|d -1 [200, 243[200 MustHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbp|d]" v25|d v15|d [204, 238[238 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|d [246, 315[246 MustHaveRegister 248 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v26|d [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdx|q]" v28|q -1 [302, 308[302 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q v5|d [304, 310[304 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d rax|d [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v26|d [334, 347[334 MustHaveRegister 336 ShouldHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d v20|d [452, 470[470 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [504, 520[520 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r8|q]" v34|q -1 [504, 522[522 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[vstack:0|d]" v23|d v23|d [243, 348[347 LiveAtLoopEnd  "StoreAtDefinition"
  v36|d DWORD "[rbp|d]" v24|d v24|d [243, 348[347 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r11|d]" v26|d v26|d [315, 334[[412, 421[[422, 431[334 ShouldHaveRegister 420 ShouldHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r11|d]" v5|d v5|d [348, 374[374 MustHaveRegister  "SpillInDominator"
  v39|d DWORD "[vstack:1|d]" v5|d v5|d [315, 348[347 LiveAtLoopEnd  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  204  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  246  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr  304  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  314  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOVE input: v5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  318  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  380  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  388  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [int[-51219|0xffffffffffff37ed], long[660|0x294]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [int[-50195|0xffffffffffff3bed], long[20|0x14]] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [int[-52243|0xffffffffffff33ed], long[1300|0x514]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  504  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v32|d [0, 1[[244, 246[[316, 318[[386, 388[[470, 472[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v8|d [0, 66[[80, 83[[102, 105[[236, 245[[310, 317[[380, 387[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v28|q [0, 64[[234, 245[[308, 317[[378, 387[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 58[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v18|q [0, 62[[232, 245[[306, 317[[376, 387[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v24|d [0, 1[[242, 245[[316, 317[[386, 387[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v25|d [0, 1[[238, 245[[312, 316[[382, 386[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v23|d [0, 1[[240, 244[[314, 316[[384, 386[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[244, 245[[316, 317[[386, 387[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[244, 245[[386, 387[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[244, 245[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [62, 144[[474, 525[62 MustHaveRegister 68 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [64, 144[[474, 525[64 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|- [66, 144[[474, 525[66 MustHaveRegister 84 ShouldHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [68, 158[68 MustHaveRegister 70 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [70, 82[70 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [72, 315[72 MustHaveRegister 76 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 304 MustHaveRegister  "SpillInDominator"
  v6|d DWORD "[rdi|d]" v6|d -1 [74, 130[74 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [76, 104[76 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d -1 [78, 142[78 MustHaveRegister 80 ShouldHaveRegister 130 ShouldHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d v4|d [82, 180[[348, 380[82 MustHaveRegister 92 ShouldHaveRegister 100 MustHaveRegister 180 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rcx|q]" v10|q -1 [84, 90[84 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|q [90, 97[90 MustHaveRegister 94 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rbp|q]" v12|q -1 [88, 91[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbp|q]" v13|q v9|d [92, 96[92 MustHaveRegister 94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbp|q]" v14|q v13|q [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbp|d]" v15|d v25|d [98, 203[[348, 382[98 MustHaveRegister 100 ShouldHaveRegister 184 ShouldHaveRegister 202 ShouldHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r13|d]" v16|d v9|d [100, 106[100 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r14|d]" v17|d v7|d [104, 348[104 MustHaveRegister 106 MustHaveRegister 118 MustHaveRegister 160 ShouldHaveRegister 180 ShouldHaveRegister 260 ShouldHaveRegister 314 ShouldHaveRegister 347 LiveAtLoopEnd  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q v3|d [158, 376[158 MustHaveRegister 232 ShouldHaveRegister 306 ShouldHaveRegister 347 LiveAtLoopEnd 376 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [374, 384[374 MustHaveRegister 384 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d rax|d [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r9|d]" v21|d v9|d [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r13|d]" v22|d -1 [182, 348[182 MustHaveRegister 184 MustHaveRegister 236 ShouldHaveRegister 336 MustHaveRegister 347 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r10|d]" v23|d -1 [198, 243[198 MustHaveRegister 240 ShouldHaveRegister  "StoreAtDefinition"
  v24|d DWORD "[rax|d]" v24|d -1 [200, 243[200 MustHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbp|d]" v25|d v15|d [204, 238[238 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|d [246, 315[246 MustHaveRegister 248 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v26|d [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdx|q]" v28|q -1 [302, 308[302 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q v5|d [304, 310[304 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d rax|d [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v26|d [334, 347[334 MustHaveRegister 336 ShouldHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d v20|d [452, 470[470 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [504, 520[520 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r8|q]" v34|q -1 [504, 522[522 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[vstack:0|d]" v23|d v23|d [243, 348[347 LiveAtLoopEnd  "StoreAtDefinition"
  v36|d DWORD "[rbp|d]" v24|d v24|d [243, 348[347 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r11|d]" v26|d v26|d [315, 334[[412, 421[[422, 431[334 ShouldHaveRegister 420 ShouldHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r11|d]" v5|d v5|d [348, 374[374 MustHaveRegister  "SpillInDominator"
  v39|d DWORD "[vstack:1|d]" v5|d v5|d [315, 348[347 LiveAtLoopEnd  "SpillInDominator"
  v40|d DWORD "[vstack:2|d]" v40|d -1 [1, 2[ "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  204  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  246  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr  304  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  314  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOVE input: v5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  318  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOVE input: v39|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: v36|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  380  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  388  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v37|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v37|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  504  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|QWORD = MOVSXD value: v2|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v12|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction v11|QWORD = CMOVE (falseValue: v10|QWORD, ~trueValue: v12|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction v13|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: v13|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v14|QWORD = CMOVE (falseValue: v13|QWORD, ~trueValue: v11|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction v16|DWORD = SUB (x: v9|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v17|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v17|DWORD, y: v16|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v21|DWORD = SUB (x: v9|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v22|DWORD = LEA address: [v21|DWORD + 2] size: DWORD <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v15|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  200  <|@ instruction v24|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: v25|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: v23|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  246  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction v27|QWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction v28|QWORD = LEA address: [v27|QWORD + 16] size: QWORD <|@ <|@
      nr  304  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  314  <|@ instruction r9|DWORD = MOVE input: v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  318  <|@ instruction v30|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v31|DWORD = INC value: v26|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v31|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOVE input: v39|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: v36|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction v19|DWORD = MOVZXB input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  380  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  388  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v37|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v37|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|DWORD = MOVE input: v32|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  200  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  314  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE input: vstack:1|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  380  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  200  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  248  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  314  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE input: vstack:1|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  380  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  390  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: vstack:1|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction vstack:2|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [266, 421[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [252, 421[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [414, 418[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [266, 421[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:36|d]" vstack:1|d -1 [252, 421[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:32|d]" vstack:2|d -1 [414, 418[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: < <|@ <|@
      nr   88  <|@ instruction rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>| <|@ <|@
      nr   94  <|@ instruction rbp|DWORD = MOV value: rbp|QWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B22" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B21" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606950794004834597
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B19" 
    xhandlers
    flags 
    probability 4604756900389945052
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD <|@ <|@
      nr  248  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603111480178777893
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603591002640318037
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601795294560468352
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599764375899827744
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598241186904347288
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B14" 
    successors "B18" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605396263671998577
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B20" 
    xhandlers
    flags 
    probability 4597943594750093605
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" "B19" "B16" "B17" "B18" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B20" 
    xhandlers
    flags 
    probability 4596389064417257585
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B20" 
    xhandlers
    flags 
    probability 4595749701135204060
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B20" 
    xhandlers
    flags 
    probability 4594583803385577045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 4592788095305727360
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 4590757176645086752
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B20" 
    xhandlers
    flags 
    probability 4583069214854273888
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  528  <|@ instruction r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B22" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2634) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed] <|@ <|@
      nr  140  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed] <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // value:byte[]
     4: aload_0       
     5: invokevirtual #77         // coder:()byte
     8: aload_0       
     9: invokevirtual #127        // length:()int
    12: aload_1       
    13: iload_2       
    14: invokestatic  #177        // indexOf:(byte[], byte, int, java.lang.String, int)int
    17: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec289041817f20000000000f858d0200009090909090909090909090909090909090909090909090909090909048896c2420448bd1448b4614468b0cc50c000000448b5a140fbe7a10428b04dd0c0000000fbe5e108bcb41d3e94963ca4585d248c7c500000000480f4ccd418be9483be9480f47e98bed458be9442bed8bcf448bf041d3ee453bf50f8fb0010000909090904585f60f84df010000909090903bfb0f85a10100009090909085db0f85d9010000909090909090418bd848c1e3034183fe010f84f70000009090909090909090452bce458d6902443bed0f8e3801000044895c240c9090909090460fb614dd100000004489542414420fb604dd11000000e9830000006666660f1f84000000000066666690909090904183fe020f84ff0000009090909090909090909090909090909090908bf0488d5610418bcb48c1e103488bf349c7c010000000458bce448bd8e80000000085c00f85cb0000009090909090418bc3ffc0443be80f8ec0000000909090448b542414448b5c240c896c24108be88b44241090909090909090909090909090488bf348c7c210000000418bcd448bc5458bca8bf88be8e80000000085c00f8d5bffffffe94f000000909090909090909090909090460fb614dd10000000488bf348c7c210000000418bc9448bc5458bcae8000000009090909090909090488b6c24204883c428493ba7500400000f87a2000000c5f877c3909090b8ffffffffebd4909090b8ffffffffebca448bd8909090ebc2909090418bc3ebba909090b8ffffffffebb0909090b8ffffffffeba690909049c7c09402000041bbed37ffff9090909090909045899f840400004d898790040000e8000000000f1f84000000000090909049c7c01400000041bbed3bffffebcc90909049c7c01405000041bbed33ffffebba48896c2420e800000000e964fdfffff4488d0d4affffff49898f68040000e916fdfffff441c78784040000f5b1ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5acffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5a7ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 91 60 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD  <||@
  Comment 91 62 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 94 64 r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 98 66 r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 98 [rdx:0, rsi:0, r8:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 98 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 106 68 r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 106 [rdx:0, rsi:0, r8:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 70 rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 114 72 rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 114 [rdx:0, rsi:0, r8:0, r11:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 114 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 122 74 rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 126 76 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 128 78 r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 131 80 rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD  <||@
  Comment 134 82 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 137 84 rbp|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 144 86 rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: <  <||@
  Comment 148 88 rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 151 90 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 154 92 rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>|  <||@
  Comment 158 94 rbp|DWORD = MOV value: rbp|QWORD size: DWORD  <||@
  Comment 160 96 r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 166 98 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 168 100 r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 174 102 CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 183 block B2 null  <||@
  Comment 183 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 183 118 NOP  <||@
  Comment 184 120 NOP  <||@
  Comment 185 122 NOP  <||@
  Comment 186 124 NOP  <||@
  Comment 187 126 TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 196 block B4 null  <||@
  Comment 196 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 196 144 NOP  <||@
  Comment 197 146 NOP  <||@
  Comment 198 148 NOP  <||@
  Comment 199 150 NOP  <||@
  Comment 200 152 CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD  <||@
  Comment 208 block B5 null  <||@
  Comment 208 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 208 156 NOP  <||@
  Comment 209 158 NOP  <||@
  Comment 210 160 NOP  <||@
  Comment 211 162 NOP  <||@
  Comment 212 164 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD  <||@
  Comment 220 block B6 null  <||@
  Comment 220 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 220 168 NOP  <||@
  Comment 221 170 NOP  <||@
  Comment 222 172 NOP  <||@
  Comment 223 174 NOP  <||@
  Comment 224 176 NOP  <||@
  Comment 225 178 NOP  <||@
  Comment 226 180 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3  <||@
  Comment 233 182 CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null  <||@
  Comment 243 block B8 null  <||@
  Comment 243 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 243 228 NOP  <||@
  Comment 244 230 NOP  <||@
  Comment 245 232 NOP  <||@
  Comment 246 234 NOP  <||@
  Comment 247 236 NOP  <||@
  Comment 248 238 NOP  <||@
  Comment 249 240 NOP  <||@
  Comment 250 242 NOP  <||@
  Comment 251 244 r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 254 246 r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD  <||@
  Comment 258 248 CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD  <||@
  Comment 267 block B9 null  <||@
  Comment 267 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 267 252 stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD  <||@
  Comment 272 254 NOP  <||@
  Comment 273 256 NOP  <||@
  Comment 274 258 NOP  <||@
  Comment 275 260 NOP  <||@
  Comment 276 262 NOP  <||@
  Comment 277 264 r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 286 266 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 291 268 rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD  <||@
  Comment 300 270 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 305 block B11 loop 0 depth 1 header:115|LoopBegin  <||@
  Comment 305 318 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 320 NOP  <||@
  Comment 321 322 NOP  <||@
  Comment 322 324 NOP  <||@
  Comment 323 326 NOP  <||@
  Comment 324 328 CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null  <||@
  Comment 334 block B12 loop 0 depth 1 header:115|LoopBegin  <||@
  Comment 334 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 334 332 NOP  <||@
  Comment 335 334 NOP  <||@
  Comment 336 336 NOP  <||@
  Comment 337 338 NOP  <||@
  Comment 338 340 NOP  <||@
  Comment 339 342 NOP  <||@
  Comment 340 344 NOP  <||@
  Comment 341 346 NOP  <||@
  Comment 342 348 NOP  <||@
  Comment 343 350 NOP  <||@
  Comment 344 352 NOP  <||@
  Comment 345 354 NOP  <||@
  Comment 346 356 NOP  <||@
  Comment 347 358 NOP  <||@
  Comment 348 360 NOP  <||@
  Comment 349 362 NOP  <||@
  Comment 350 364 NOP  <||@
  Comment 351 366 NOP  <||@
  Comment 352 368 rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 354 370 rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 358 372 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3  <||@
  Comment 365 374 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 368 376 r8|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 375 378 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 378 380 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 381 382 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL  <||@
  Comment 381 {Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 386 384 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD  <||@
  Comment 394 block B13 loop 0 depth 1 header:115|LoopBegin  <||@
  Comment 394 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 388 NOP  <||@
  Comment 395 390 NOP  <||@
  Comment 396 392 NOP  <||@
  Comment 397 394 NOP  <||@
  Comment 398 396 NOP  <||@
  Comment 399 398 rax|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 404 400 CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 413 block B14 loop 0 depth 1 header:115|LoopBegin  <||@
  Comment 413 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 413 404 NOP  <||@
  Comment 414 406 NOP  <||@
  Comment 415 408 NOP  <||@
  Comment 416 410 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 421 412 r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD  <||@
  Comment 426 414 stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 430 416 rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 432 418 rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 436 420 JUMP ~outgoingValues: [] destination: B14 -> B10  <||@
  Comment 436 block B10 loop 0 depth 1 header:115|LoopBegin  <||@
  Comment 436 272 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 436 274 NOP  <||@
  Comment 437 276 NOP  <||@
  Comment 438 278 NOP  <||@
  Comment 439 280 NOP  <||@
  Comment 440 282 NOP  <||@
  Comment 441 284 NOP  <||@
  Comment 442 286 NOP  <||@
  Comment 443 288 NOP  <||@
  Comment 444 290 NOP  <||@
  Comment 445 292 NOP  <||@
  Comment 446 294 NOP  <||@
  Comment 447 296 NOP  <||@
  Comment 448 298 NOP  <||@
  Comment 449 300 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 452 302 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 459 304 rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 462 306 r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 465 308 r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 468 310 rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 470 312 rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 472 314 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL  <||@
  Comment 472 {Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL}  <||@
  Comment 477 316 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD  <||@
  Comment 490 block B7 null  <||@
  Comment 490 184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 490 186 NOP  <||@
  Comment 491 188 NOP  <||@
  Comment 492 190 NOP  <||@
  Comment 493 192 NOP  <||@
  Comment 494 194 NOP  <||@
  Comment 495 196 NOP  <||@
  Comment 496 198 NOP  <||@
  Comment 497 200 NOP  <||@
  Comment 498 202 NOP  <||@
  Comment 499 204 NOP  <||@
  Comment 500 206 NOP  <||@
  Comment 501 208 NOP  <||@
  Comment 502 210 r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 511 212 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 514 214 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 521 216 rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 524 218 r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 527 220 r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 530 222 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 530 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 535 224 JUMP ~outgoingValues: [] destination: B7 -> B20  <||@
  Comment 535 block B20 null  <||@
  Comment 535 484 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 535 486 NOP  <||@
  Comment 536 488 NOP  <||@
  Comment 537 490 NOP  <||@
  Comment 538 492 NOP  <||@
  Comment 539 494 NOP  <||@
  Comment 540 496 NOP  <||@
  Comment 541 498 NOP  <||@
  Comment 542 500 NOP  <||@
  Comment 543 502 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 552 POLL_RETURN_FAR  <||@
  Comment 569 block B18 null  <||@
  Comment 569 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 569 462 NOP  <||@
  Comment 570 464 NOP  <||@
  Comment 571 466 NOP  <||@
  Comment 572 468 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 577 470 JUMP ~outgoingValues: [] destination: B18 -> B20  <||@
  Comment 579 block B19 null  <||@
  Comment 579 472 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 579 474 NOP  <||@
  Comment 580 476 NOP  <||@
  Comment 581 478 NOP  <||@
  Comment 582 480 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 587 482 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 589 block B17 null  <||@
  Comment 589 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 589 448 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 592 450 NOP  <||@
  Comment 593 452 NOP  <||@
  Comment 594 454 NOP  <||@
  Comment 595 458 JUMP ~outgoingValues: [] destination: B17 -> B20  <||@
  Comment 597 block B16 null  <||@
  Comment 597 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 597 436 NOP  <||@
  Comment 598 438 NOP  <||@
  Comment 599 440 NOP  <||@
  Comment 600 442 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 603 444 JUMP ~outgoingValues: [] destination: B16 -> B20  <||@
  Comment 605 block B15 null  <||@
  Comment 605 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 605 424 NOP  <||@
  Comment 606 426 NOP  <||@
  Comment 607 428 NOP  <||@
  Comment 608 430 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 613 432 JUMP ~outgoingValues: [] destination: B15 -> B20  <||@
  Comment 615 block B1 null  <||@
  Comment 615 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 615 106 NOP  <||@
  Comment 616 108 NOP  <||@
  Comment 617 110 NOP  <||@
  Comment 618 112 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 623 114 JUMP ~outgoingValues: [] destination: B1 -> B20  <||@
  Comment 625 block B22 null  <||@
  Comment 625 518 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 625 520 NOP  <||@
  Comment 626 522 NOP  <||@
  Comment 627 524 NOP  <||@
  Comment 628 526 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 635 528 r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed]  <||@
  Comment 641 530 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 641 block B23 null  <||@
  Comment 641 532 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 641 534 NOP  <||@
  Comment 642 536 NOP  <||@
  Comment 643 538 NOP  <||@
  Comment 644 540 NOP  <||@
  Comment 645 542 NOP  <||@
  Comment 646 544 NOP  <||@
  Comment 647 546 NOP  <||@
  Comment 648 548 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 655 550 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 662 552 DEOPT info [bci:0]  <||@
  Comment 662 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 667 [rdx:0, rsi:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 675 block B3 null  <||@
  Comment 675 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 675 130 NOP  <||@
  Comment 676 132 NOP  <||@
  Comment 677 134 NOP  <||@
  Comment 678 136 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 685 138 r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed]  <||@
  Comment 691 140 JUMP ~outgoingValues: [] destination: B3 -> B23  <||@
  Comment 693 block B21 null  <||@
  Comment 693 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 693 506 NOP  <||@
  Comment 694 508 NOP  <||@
  Comment 695 510 NOP  <||@
  Comment 696 512 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 703 514 r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed]  <||@
  Comment 709 516 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 716 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 741 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 769 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 774 [rdx:0, rsi:0, r8:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 804 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 809 [rdx:0, rsi:0, r8:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 839 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 844 [rdx:0, rsi:0, r8:0, r11:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 852 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 852 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 858 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 858 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3683[java.lang.String.indexOf(String, int)]"
  method "HotSpotCompilation-3683[java.lang.String.indexOf(String, int)]"
  date 1724269726488
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad3c8a0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c387a4fe66669089842400c0feff4883ec289041817f20030000000f858d0200009090909090909090909090909090909090909090909090909090909048896c2420448bd1448b4614468b0cc50c000000448b5a140fbe7a10428b04dd0c0000000fbe5e108bcb41d3e94963ca4585d248c7c500000000480f4ccd418be9483be9480f47e98bed458be9442bed8bcf448bf041d3ee453bf50f8fb0010000909090904585f60f84df010000909090903bfb0f85a10100009090909085db0f85d9010000909090909090418bd848c1e3034183fe010f84f70000009090909090909090452bce458d6902443bed0f8e3801000044895c240c9090909090460fb614dd100000004489542414420fb604dd11000000e9830000006666660f1f84000000000066666690909090904183fe020f84ff0000009090909090909090909090909090909090908bf0488d5610418bcb48c1e103488bf349c7c010000000458bce448bd8e85e13bafe85c00f85cb0000009090909090418bc3ffc0443be80f8ec0000000909090448b542414448b5c240c896c24108be88b44241090909090909090909090909090488bf348c7c210000000418bcd448bc5458bca8bf88be8e803c8b9fe85c00f8d5bffffffe94f000000909090909090909090909090460fb614dd10000000488bf348c7c210000000418bc9448bc5458bcae849c4b9fe9090909090909090488b6c24204883c428493ba7500400000f87a2000000c5f877c3909090b8ffffffffebd4909090b8ffffffffebca448bd8909090ebc2909090418bc3ebba909090b8ffffffffebb0909090b8ffffffffeba690909049c7c09402000041bbed37ffff9090909090909045899f840400004d898790040000e83fe6a4fe0f1f84000000000090909049c7c01400000041bbed3bffffebcc90909049c7c01405000041bbed33ffffebba48896c2420e8afe6a2fee964fdfffff4488d0d4affffff49898f68040000e976f4a4fef441c78784040000f5b1ffff49c7879004000000000000e8d4e5a4fe0f1f84000000000041c78784040000f5acffff49c7879004000000000000e8b1e5a4fe0f1f84000000000041c78784040000f5a7ffff49c7879004000000000000e88ee5a4fe0f1f840000000000e80787b8fef4e821e3a4fef4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 91 60 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7b00daff slotKind: QWORD  <||@
  Comment 91 62 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 94 64 r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 98 66 r9|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 98 [rdx:0, rsi:0, r8:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 98 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 106 68 r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 106 [rdx:0, rsi:0, r8:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 70 rdi|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 114 72 rax|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 114 [rdx:0, rsi:0, r8:0, r11:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 114 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 122 74 rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 126 76 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 128 78 r9|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 131 80 rcx|QWORD = MOVSXD value: r10|DWORD size: QWORD  <||@
  Comment 134 82 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 137 84 rbp|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 144 86 rcx|QWORD = CMOVE (falseValue: rcx|QWORD, ~trueValue: rbp|QWORD) condition: <  <||@
  Comment 148 88 rbp|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 151 90 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 154 92 rbp|QWORD = CMOVE (falseValue: rbp|QWORD, ~trueValue: rcx|QWORD) condition: |>|  <||@
  Comment 158 94 rbp|DWORD = MOV value: rbp|QWORD size: DWORD  <||@
  Comment 160 96 r13|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 166 98 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 168 100 r14|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 174 102 CMPBRANCH (x: r14|DWORD, y: r13|DWORD) trueDestinationProbability: 0.02571551806860428 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 183 block B2 null  <||@
  Comment 183 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 183 118 NOP  <||@
  Comment 184 120 NOP  <||@
  Comment 185 122 NOP  <||@
  Comment 186 124 NOP  <||@
  Comment 187 126 TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 196 block B4 null  <||@
  Comment 196 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 196 144 NOP  <||@
  Comment 197 146 NOP  <||@
  Comment 198 148 NOP  <||@
  Comment 199 150 NOP  <||@
  Comment 200 152 CMPBRANCH (x: rdi|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B22 size: DWORD  <||@
  Comment 208 block B5 null  <||@
  Comment 208 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 208 156 NOP  <||@
  Comment 209 158 NOP  <||@
  Comment 210 160 NOP  <||@
  Comment 211 162 NOP  <||@
  Comment 212 164 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B21 size: DWORD  <||@
  Comment 220 block B6 null  <||@
  Comment 220 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 220 168 NOP  <||@
  Comment 221 170 NOP  <||@
  Comment 222 172 NOP  <||@
  Comment 223 174 NOP  <||@
  Comment 224 176 NOP  <||@
  Comment 225 178 NOP  <||@
  Comment 226 180 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3  <||@
  Comment 233 182 CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null  <||@
  Comment 243 block B8 null  <||@
  Comment 243 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 243 228 NOP  <||@
  Comment 244 230 NOP  <||@
  Comment 245 232 NOP  <||@
  Comment 246 234 NOP  <||@
  Comment 247 236 NOP  <||@
  Comment 248 238 NOP  <||@
  Comment 249 240 NOP  <||@
  Comment 250 242 NOP  <||@
  Comment 251 244 r9|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 254 246 r13|DWORD = LEA address: [r9|DWORD + 2] size: DWORD  <||@
  Comment 258 248 CMPBRANCH (x: r13|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B19 size: DWORD  <||@
  Comment 267 block B9 null  <||@
  Comment 267 250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 267 252 stack:36|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD  <||@
  Comment 272 254 NOP  <||@
  Comment 273 256 NOP  <||@
  Comment 274 258 NOP  <||@
  Comment 275 260 NOP  <||@
  Comment 276 262 NOP  <||@
  Comment 277 264 r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 286 266 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 291 268 rax|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD  <||@
  Comment 300 270 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 305 block B11 loop 0 depth 1 header:115|LoopBegin  <||@
  Comment 305 318 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 320 NOP  <||@
  Comment 321 322 NOP  <||@
  Comment 322 324 NOP  <||@
  Comment 323 326 NOP  <||@
  Comment 324 328 CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B11 -> B17 falseDestination: B11 -> B12 y: 2 size: DWORD inlinedY: null  <||@
  Comment 334 block B12 loop 0 depth 1 header:115|LoopBegin  <||@
  Comment 334 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 334 332 NOP  <||@
  Comment 335 334 NOP  <||@
  Comment 336 336 NOP  <||@
  Comment 337 338 NOP  <||@
  Comment 338 340 NOP  <||@
  Comment 339 342 NOP  <||@
  Comment 340 344 NOP  <||@
  Comment 341 346 NOP  <||@
  Comment 342 348 NOP  <||@
  Comment 343 350 NOP  <||@
  Comment 344 352 NOP  <||@
  Comment 345 354 NOP  <||@
  Comment 346 356 NOP  <||@
  Comment 347 358 NOP  <||@
  Comment 348 360 NOP  <||@
  Comment 349 362 NOP  <||@
  Comment 350 364 NOP  <||@
  Comment 351 366 NOP  <||@
  Comment 352 368 rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 354 370 rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 358 372 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@713375fb encoding: base: 0 shift: 3  <||@
  Comment 365 374 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 368 376 r8|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 375 378 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 378 380 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 381 382 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL  <||@
  Comment 381 {Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 386 384 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 size: DWORD  <||@
  Comment 394 block B13 loop 0 depth 1 header:115|LoopBegin  <||@
  Comment 394 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 388 NOP  <||@
  Comment 395 390 NOP  <||@
  Comment 396 392 NOP  <||@
  Comment 397 394 NOP  <||@
  Comment 398 396 NOP  <||@
  Comment 399 398 rax|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 404 400 CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 413 block B14 loop 0 depth 1 header:115|LoopBegin  <||@
  Comment 413 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 413 404 NOP  <||@
  Comment 414 406 NOP  <||@
  Comment 415 408 NOP  <||@
  Comment 416 410 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 421 412 r11|DWORD[_] = MOVE input: stack:36|DWORD[_] moveKind: DWORD  <||@
  Comment 426 414 stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 430 416 rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 432 418 rax|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 436 420 JUMP ~outgoingValues: [] destination: B14 -> B10  <||@
  Comment 436 block B10 loop 0 depth 1 header:115|LoopBegin  <||@
  Comment 436 272 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 436 274 NOP  <||@
  Comment 437 276 NOP  <||@
  Comment 438 278 NOP  <||@
  Comment 439 280 NOP  <||@
  Comment 440 282 NOP  <||@
  Comment 441 284 NOP  <||@
  Comment 442 286 NOP  <||@
  Comment 443 288 NOP  <||@
  Comment 444 290 NOP  <||@
  Comment 445 292 NOP  <||@
  Comment 446 294 NOP  <||@
  Comment 447 296 NOP  <||@
  Comment 448 298 NOP  <||@
  Comment 449 300 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 452 302 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 459 304 rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 462 306 r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 465 308 r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 468 310 rdi|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 470 312 rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 472 314 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL  <||@
  Comment 472 {Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL}  <||@
  Comment 477 316 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B18 falseDestination: B10 -> B11 size: DWORD  <||@
  Comment 490 block B7 null  <||@
  Comment 490 184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 490 186 NOP  <||@
  Comment 491 188 NOP  <||@
  Comment 492 190 NOP  <||@
  Comment 493 192 NOP  <||@
  Comment 494 194 NOP  <||@
  Comment 495 196 NOP  <||@
  Comment 496 198 NOP  <||@
  Comment 497 200 NOP  <||@
  Comment 498 202 NOP  <||@
  Comment 499 204 NOP  <||@
  Comment 500 206 NOP  <||@
  Comment 501 208 NOP  <||@
  Comment 502 210 r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 511 212 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 514 214 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 521 216 rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 524 218 r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 527 220 r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 530 222 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 530 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 535 224 JUMP ~outgoingValues: [] destination: B7 -> B20  <||@
  Comment 535 block B20 null  <||@
  Comment 535 484 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 535 486 NOP  <||@
  Comment 536 488 NOP  <||@
  Comment 537 490 NOP  <||@
  Comment 538 492 NOP  <||@
  Comment 539 494 NOP  <||@
  Comment 540 496 NOP  <||@
  Comment 541 498 NOP  <||@
  Comment 542 500 NOP  <||@
  Comment 543 502 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 552 POLL_RETURN_FAR  <||@
  Comment 569 block B18 null  <||@
  Comment 569 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 569 462 NOP  <||@
  Comment 570 464 NOP  <||@
  Comment 571 466 NOP  <||@
  Comment 572 468 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 577 470 JUMP ~outgoingValues: [] destination: B18 -> B20  <||@
  Comment 579 block B19 null  <||@
  Comment 579 472 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 579 474 NOP  <||@
  Comment 580 476 NOP  <||@
  Comment 581 478 NOP  <||@
  Comment 582 480 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 587 482 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 589 block B17 null  <||@
  Comment 589 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 589 448 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 592 450 NOP  <||@
  Comment 593 452 NOP  <||@
  Comment 594 454 NOP  <||@
  Comment 595 458 JUMP ~outgoingValues: [] destination: B17 -> B20  <||@
  Comment 597 block B16 null  <||@
  Comment 597 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 597 436 NOP  <||@
  Comment 598 438 NOP  <||@
  Comment 599 440 NOP  <||@
  Comment 600 442 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 603 444 JUMP ~outgoingValues: [] destination: B16 -> B20  <||@
  Comment 605 block B15 null  <||@
  Comment 605 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 605 424 NOP  <||@
  Comment 606 426 NOP  <||@
  Comment 607 428 NOP  <||@
  Comment 608 430 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 613 432 JUMP ~outgoingValues: [] destination: B15 -> B20  <||@
  Comment 615 block B1 null  <||@
  Comment 615 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 615 106 NOP  <||@
  Comment 616 108 NOP  <||@
  Comment 617 110 NOP  <||@
  Comment 618 112 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 623 114 JUMP ~outgoingValues: [] destination: B1 -> B20  <||@
  Comment 625 block B22 null  <||@
  Comment 625 518 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 625 520 NOP  <||@
  Comment 626 522 NOP  <||@
  Comment 627 524 NOP  <||@
  Comment 628 526 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 635 528 r11|DWORD = MOVE input: int[-51219|0xffffffffffff37ed]  <||@
  Comment 641 530 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 641 block B23 null  <||@
  Comment 641 532 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 641 534 NOP  <||@
  Comment 642 536 NOP  <||@
  Comment 643 538 NOP  <||@
  Comment 644 540 NOP  <||@
  Comment 645 542 NOP  <||@
  Comment 646 544 NOP  <||@
  Comment 647 546 NOP  <||@
  Comment 648 548 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 655 550 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 662 552 DEOPT info [bci:0]  <||@
  Comment 662 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 667 [rdx:0, rsi:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 675 block B3 null  <||@
  Comment 675 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 675 130 NOP  <||@
  Comment 676 132 NOP  <||@
  Comment 677 134 NOP  <||@
  Comment 678 136 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 685 138 r11|DWORD = MOVE input: int[-50195|0xffffffffffff3bed]  <||@
  Comment 691 140 JUMP ~outgoingValues: [] destination: B3 -> B23  <||@
  Comment 693 block B21 null  <||@
  Comment 693 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 693 506 NOP  <||@
  Comment 694 508 NOP  <||@
  Comment 695 510 NOP  <||@
  Comment 696 512 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 703 514 r11|DWORD = MOVE input: int[-52243|0xffffffffffff33ed]  <||@
  Comment 709 516 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 716 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 741 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 769 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 774 [rdx:0, rsi:0, r8:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 804 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 809 [rdx:0, rsi:0, r8:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 839 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 844 [rdx:0, rsi:0, r8:0, r11:0]at java.lang.String.indexOf(String.java:2634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD   <||@
  Comment 852 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 852 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 858 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 858 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
